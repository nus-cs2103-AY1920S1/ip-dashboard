[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Launcher\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "run {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "test {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "test {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    systemProperty\"file.encoding\", \"utf-8\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "EvonDong": 40,
      "-": 15
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "T | 0 | Workout"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "E | 1 | music fest | 3/12/1312 0145"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 2
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "T | 0 | exercise"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "E | 1 | music festival | 06/03/1993 1852 | 2019-09-11T23:17"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "D | 0 | proj | 05/06/1998 0233"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "E | 0 | art fest | 05/05/1993 1713"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "D | 1 | quest9 | 04/08/1995 1032 | 2019-09-11T23:11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "T | 0 | jogging"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "E | 0 | water festival | 06/02/1998 1441"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "D | 0 | music homework | 09/01/1994 2333"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "T | 0 | art painting"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 9
    }
  },
  {
    "path": "src/main/java/seedu/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Command is an abstract base class for all commands that the user inputs."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * A \u003ccode\u003eCommand\u003c/code\u003e object corresponds to a command that starts with \"todo\", \"\"deadline\","
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * \"event\", \"done\", \"find\" or \"bye\"."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    boolean exit \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor of the Command class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Abstract method that executes the command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param list the TaskList object that is handling the arraylist of the datafile"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param ui the UserInterface object that handles the interaction with users"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param storage the Storage object that stores and handles the path to datafile"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the output string"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws IOException on input error"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public abstract String execute(TaskList list, Ui ui, Storage storage) throws IOException;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 30
    }
  },
  {
    "path": "src/main/java/seedu/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Represents a Deadline task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * A \u003ccode\u003eDeadline\u003c/code\u003e object corresponds to a task with a command that starts with \"deadline\" and contains"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * a description and a timestamp e.g., \u003ccode\u003edeadline project 3/12/2022 0212\u003c/code\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private Date dateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor of Deadline task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param description the description of the deadline task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param dateTime the date and time of the event in the format dd/MM/yyyy HHmm"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public Deadline(String description, Date dateTime) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Appends the status icon to the description and formats the date and time."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the String representation of the Deadline object"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + PRINT_FORMAT.format(dateTime) + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Appends the status icon to the description and formats the date and time to be stored"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * in the datafile."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the String representation of the Deadline object to be stored in datafile"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        if (!isDone) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            return (\"D \" + super.writeToFile() + \" | \" + DATE_FORMAT.format(dateTime));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            return (\"D \" + super.writeToFile() + \" | \" + DATE_FORMAT.format(dateTime) + \" | \" + this.getDoneDateTime());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Return dateTime variable of the task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return dateTime of the task"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public Date getDateTime() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return dateTime;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "EvonDong": 60
    }
  },
  {
    "path": "src/main/java/seedu/duke/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Represents a Deadline Command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * A \u003ccode\u003eDeadlineCommand\u003c/code\u003e object corresponds to a command with a description that starts with \"deadline\" and"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * contains a date and time."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private Date dateTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor of the DeadlineCommand class."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param command the description of command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param dateTime the date and time of the task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public DeadlineCommand(String command, Date dateTime) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Adds the task to the list of tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Prints the adding message, the task added and the number of tasks in the list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Update the datafile with the new task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param list the TaskList object that is handling the arraylist of the datafile"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param ui the UserInterface object that handles the interaction with users"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param storage the Storage object that stores and handles the path to datafile"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the output string"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws IOException on input error"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String execute(TaskList list, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        list.addTask(new Deadline(command, dateTime));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        String output \u003d ui.printAddMsg() + ui.printLatest(list) + ui.printNumTask(list);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        storage.appendToFile(list);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 46
    }
  },
  {
    "path": "src/main/java/seedu/duke/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Represents a Delete Command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * A \u003ccode\u003eDeleteCommand\u003c/code\u003e object corresponds to a command with a description that starts with \"delete\" and"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * contains the index of the task to be deleted."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private ArrayList\u003cObject\u003e indexList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor of the DeleteCommand class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param indexList the list of index of the tasks to be deleted"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    DeleteCommand(ArrayList\u003cObject\u003e indexList) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.indexList \u003d indexList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Prints the remove message, the task deleted and the number of tasks left in the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Delete the task in the arraylist and updates the datafile."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param list the TaskList object that is handling the arraylist of the datafile"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param ui the UserInterface object that handles the interaction with users"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param storage the Storage object that stores and handles the path to datafile"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the output string"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws IOException upon wrong input"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String execute(TaskList list, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        assert list !\u003d null : \"Cannot delete from an empty list\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        String output \u003d Ui.printRemoveMsg();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        for (Task t : convertToTask(list)) {   // list here is the original list to delete from"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            output +\u003d t + \"\\n\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            list.deleteTask(t);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            storage.writeToFile(list);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        output +\u003d Ui.printNumTask(list);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private ArrayList\u003cTask\u003e convertToTask(TaskList list) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        ArrayList\u003cTask\u003e tasksToDelete \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        for (Object index : indexList) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            tasksToDelete.add(list.getTask((int) index));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return tasksToDelete;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 54
    }
  },
  {
    "path": "src/main/java/seedu/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor for the DialogBox class."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param text the text that the dialog box should contain"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param img the image that represents the dialog box"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        displayPicture.setClip(new Circle(35, 45, 40));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Returns a DialogBox containing an image representing User and text containing input from the user."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param text a string containing input from the user"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param img an image representing User"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the DialogBox for User"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        assert !text.equals(\"\") : \"Text of user cannot be empty\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Returns a DialogBox containing an image representing Duke and text containing response from Duke."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param text a string containing response from Duke"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param img an image representing Duke"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the DialogBox for Duke"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        assert !text.equals(\"\") : \"Text of duke cannot be empty\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 86
    }
  },
  {
    "path": "src/main/java/seedu/duke/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Represents a Done Command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * A \u003ccode\u003eDoneCommand\u003c/code\u003e object corresponds to a command with a description that starts with \"done\" and"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * contains the index of the task to be marked as done."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private ArrayList\u003cObject\u003e indexList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor of the DoneCommand class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param indexList the list of index of the tasks to be marked as done"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public DoneCommand(ArrayList\u003cObject\u003e indexList) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.indexList \u003d indexList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Marked the task as done and updates the status icon of the task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Updates the status of the task in the datafile."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param list the TaskList object that is handling the arraylist of the datafile"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param ui the UserInterface object that handles the interaction with users"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param storage the Storage object that stores and handles the path to datafile"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the output string"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws IOException on input error"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String execute(TaskList list, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        assert list !\u003d null : \"Cannot mark done from an empty list\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        output +\u003d ui.printDoneMsg();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        for (Object index : indexList) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            list.getTask((int) index).markAsDone();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            list.getTask((int) index).setDoneDateTime();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            output +\u003d list.getTask((int) index) + \"\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            storage.writeToFile(list);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 49
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Represents a Personal Assistant Chatbot that helps a person to keep track of various things."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * @author Evon Dong"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * @since 2019-08-28"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor for class Duke."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Another constructor for class Duke."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Loads the data if datafile exists."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param filePath the path to the file where the list of tasks is stored"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws IOException On input error"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public Duke(String filePath) throws IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            Ui.showLoadingError();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Handles the user inputs and execute the command."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Updates the list of tasks in the datafile according to the commands."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String run(String input) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        assert !input.equals(\"\") : \"Input cannot be empty\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            Command c \u003d Parser.parse(input, ui, tasks);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            return c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            return ui.printErrMsg(e.getMessage());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            return ui.printErrMsg(\"IO Error\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String getResponse(String input) throws IOException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return new Duke(\"data/tasks.txt\").run(input);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/*"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(ui.greet(), duke));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        sendButton.setOnMouseClicked((event -\u003e {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                handleUserInput();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        userInput.setOnAction((event -\u003e {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                handleUserInput();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        dialogContainer.heightProperty().addListener(observable -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "*/"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "  /*  @Override"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Label helloWorld \u003d new Label(\"Hello World!\"); // Creating a new Label control"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        helloWorld.setMinHeight(340);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        helloWorld.setMinWidth(500);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        helloWorld.setTextFill(Color.AQUAMARINE);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        helloWorld.setFont(new Font(\"Cambria\", 70));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        helloWorld.setOnMouseEntered(new EventHandler\u003cMouseEvent\u003e() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            @Override public void handle(MouseEvent e) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                helloWorld.setScaleX(1.5);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                helloWorld.setScaleY(1.5);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        });"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        helloWorld.setOnMouseExited(new EventHandler\u003cMouseEvent\u003e() {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            @Override public void handle(MouseEvent e) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                helloWorld.setScaleX(1);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                helloWorld.setScaleY(1);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        });"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Scene scene \u003d new Scene(helloWorld); // Setting the scene to be our Label"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "      //  stage.setScene(scene); // Setting the stage to show our screen"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "      //  stage.setTitle(\"Show \u0027Hello World\u0027\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "      //  stage.show(); // Render the stage."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Button okBtn \u003d new Button(\"OK\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Button cancelBtn \u003d new Button(\"Cancel\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        cancelBtn.setPrefWidth(342);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        VBox root \u003d new VBox();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        root.getChildren().addAll(okBtn, cancelBtn);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        okBtn.setOnAction(e -\u003e stage.setScene(scene));"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Scene scene1 \u003d new Scene(root);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        stage.setScene(scene1);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        stage.setTitle(\"Overriding Node Sizes\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "*/"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "EvonDong": 183,
      "-": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * DukeException is the base class of all exceptions thrown in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor for DukeException class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param errorMessage the error message to be thrown"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 17
    }
  },
  {
    "path": "src/main/java/seedu/duke/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Represents the exception thrown when the description of the \"todo\", \"deadline\", \"event\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * command is empty."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor of the EmptyDescriptionException class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param errorMessage the error message to be thrown"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public EmptyDescriptionException(String errorMessage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 19
    }
  },
  {
    "path": "src/main/java/seedu/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Represents a Event task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * A \u003ccode\u003eEvent\u003c/code\u003e object corresponds to a task with a command that starts with \"event\" and contains"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * a description and a timestamp e.g., \u003ccode\u003eevent music festival 3/12/2022 0212\u003c/code\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private Date dateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor for Event class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param description the description of the event"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param dateTime the date and time of the event in the format dd/MM/yyyy HHmm"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public Event(String description, Date dateTime) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Appends the status icon to the description and formats the date and time."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the String representation of the Event object"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + PRINT_FORMAT.format(dateTime) + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Appends the status icon to the description and formats the date and time to be stored"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * in the datafile."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the String representation of the Event object to be stored in datafile"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        if (!isDone) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            return (\"E \" + super.writeToFile() + \" | \" + DATE_FORMAT.format(dateTime));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            return (\"E \" + super.writeToFile() + \" | \" + DATE_FORMAT.format(dateTime) + \" | \" + this.getDoneDateTime());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Return dateTime variable of the task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return dateTime of the task"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public Date getDateTime() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return dateTime;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 59
    }
  },
  {
    "path": "src/main/java/seedu/duke/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Represents a Event Command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * A \u003ccode\u003eEventCommand\u003c/code\u003e object corresponds to a command with a description that starts with \"event\" and"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * contains a date and time."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private Date dateTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor of the EventCommand."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param command the description of the command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param dateTime the date and time of the task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public EventCommand(String command, Date dateTime) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Adds the task to the list of tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Prints the adding message, the task added and the number of tasks in the list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Update the data file with the new task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param list the TaskList object that is handling the arraylist of the datafile"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param ui the UserInterface object that handles the interaction with users"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param storage the Storage object that stores and handles the path to datafile"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the output string"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws IOException upon incorrect input"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String execute(TaskList list, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        list.addTask(new Event(command, dateTime));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        String output \u003d ui.printAddMsg() + ui.printLatest(list) + ui.printNumTask(list);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        storage.appendToFile(list);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 45
    }
  },
  {
    "path": "src/main/java/seedu/duke/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Represents a Exit Command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * A \u003ccode\u003eExitCommand\u003c/code\u003e object corresponds to a command with a description \"bye\"."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor of the ExitCommand class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Sets the exit variable to true and prints the exit message."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param list the TaskList object that is handling the arraylist of the datafile"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param ui the UserInterface object that handles the interaction with users"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param storage the Storage object that stores and handles the path to datafile"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the output string"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String execute(TaskList list, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        exit \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return ui.exit();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 28
    }
  },
  {
    "path": "src/main/java/seedu/duke/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Represents a Find Command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * A \u003ccode\u003eFindCommand\u003c/code\u003e object corresponds to a command with a"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * description that starts with \"find\" and a keyword."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private ArrayList\u003cObject\u003e findList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor of FindCommand."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param findList the list of keywords to find"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public FindCommand(ArrayList\u003cObject\u003e findList) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.findList \u003d findList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Prints the matching message and prints out a list of all the tasks containing the keywords."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param list the TaskList object that is handling the arraylist of the datafile"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param ui the UserInterface object that handles the interaction with users"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param storage the Storage object that stores and handles the path to datafile"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the output string"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws IOException upon wrong input"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String execute(TaskList list, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        String output \u003d ui.printMatchingMsg();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        for (Object keyword: findList) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            ArrayList\u003cTask\u003e matchingList \u003d list.findMatching((String) keyword);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            output +\u003d ui.printMatchingList(matchingList);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 43
    }
  },
  {
    "path": "src/main/java/seedu/duke/InvalidFindDescription.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Represents the exception thrown when the find description is invalid."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class InvalidFindDescription extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor of the InvalidFindDescription class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param errorMessage the error message to be thrown"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public InvalidFindDescription(String errorMessage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 17
    }
  },
  {
    "path": "src/main/java/seedu/duke/InvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Represents the exception thrown when the index is invalid."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class InvalidIndexException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor of the InvalidIndexException class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param errorMessage the error message to be thrown"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public InvalidIndexException(String errorMessage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 17
    }
  },
  {
    "path": "src/main/java/seedu/duke/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Represents the exception thrown when the user input is invalid."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class InvalidInputException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor of InvalidInputException class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param errorMessage the error message to be thrown"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public InvalidInputException(String errorMessage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 17
    }
  },
  {
    "path": "src/main/java/seedu/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Launches the application."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param args the arguments passed in"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 20
    }
  },
  {
    "path": "src/main/java/seedu/duke/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Represents a List Command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * A \u003ccode\u003eListCommand\u003c/code\u003e object corresponds to a command with a description \"list\"."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor of the ListCommand class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Prints all the tasks in the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param list the TaskList object that is handling the arraylist of the datafile"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param ui the UserInterface object that handles the interaction with users"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param storage the Storage object that stores and handles the path to datafile"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the output string"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String execute(TaskList list, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return ui.printList(list);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 27
    }
  },
  {
    "path": "src/main/java/seedu/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Loads MainWindow FXML file and create the JavaFX GUI components the file declares."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Sets up a stage and sets the duke."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param stage the stage to be set up"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            stage.setTitle(\"Duke ChatBot\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 38
    }
  },
  {
    "path": "src/main/java/seedu/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    Stage window;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/scenery3.jpeg\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/scenery2.jpeg\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Binds the scroll pane to the dialogContainer so as to set up the main layout."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Adds the welcome message to the Duke dialog box so that it is shown whenever the application starts."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        assert dukeImage !\u003d null : \"dukeImage cannot be null\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(\"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                + \"What can I do for you?\", dukeImage));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Sets the variable duke."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param d the variable duke to be used"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private void handleUserInput() throws IOException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        );"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 70
    }
  },
  {
    "path": "src/main/java/seedu/duke/MissingTimeStampException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Represents the exception thrown when the timestamp of the deadline or event"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * command is empty."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class MissingTimeStampException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor of the MissingTimeStampException."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param errorMessage the error message of missing timestamp"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public MissingTimeStampException(String errorMessage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 18
    }
  },
  {
    "path": "src/main/java/seedu/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import static seedu.duke.Task.DATE_FORMAT;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Parser is a class that deals with making sense of the user\u0027s commands."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private static int indexOfByAt \u003d 0;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private static Date dateTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private static TaskList tasks \u003d null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private static Ui ui \u003d null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor of the Parser class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        indexOfByAt \u003d 0;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        dateTime \u003d null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Parses the string containing the date and time into a Date of the format \"dd/MM/yyyy HHmm\"."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param str the string containing the date and time"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the Date of the format \"dd/MM/yyyy HHmm\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws ParseException exception thrown when the string is of a wrong format"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static Date dateParse(String str) throws ParseException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        assert !str.equals(\"\") : \"The date cannot be an empty string\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return DATE_FORMAT.parse(str);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Takes in a command in the form of a string and direct it to an appropriate command."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param command the command that the user input"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param ui the Ui object being used"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the Command object that the user input correspond to"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws DukeException exception thrown when the timestamp or description is missing, or when input is invalid"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws ParseException exception thrown when the timestamp is of incorrect format"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static Command parse(String command, Ui ui, TaskList tasks) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Parser.tasks \u003d tasks;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Parser.ui \u003d ui;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        assert !command.equals(\"\") : \"The description of the command cannot be an empty string\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        String[] detailsArray \u003d command.split(\" \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        if (detailsArray.length \u003d\u003d 1 \u0026\u0026 detailsArray[0].equalsIgnoreCase(\"sort\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            tasks.sortTask();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        } else if (command.trim().equalsIgnoreCase(\"show stats\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            return new StatisticsCommand();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        } else if (detailsArray.length \u003d\u003d 1 \u0026\u0026 (detailsArray[0].equals(\"todo\") || detailsArray[0].equals(\"deadline\")"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                    || detailsArray[0].equals(\"event\") || detailsArray[0].equals(\"done\")"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                || detailsArray[0].equals(\"delete\") || detailsArray[0].equals(\"find\"))) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            throw new EmptyDescriptionException(ui.getEmptyDescriptionMsg(detailsArray[0]));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            switch (detailsArray[0]) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                return new TodoCommand(String.join(\" \","
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                        Arrays.copyOfRange(detailsArray, 1, detailsArray.length)));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                getDate(detailsArray);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                return new DeadlineCommand(String.join(\" \","
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                        Arrays.copyOfRange(detailsArray, 1, indexOfByAt)), dateTime);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                getDate(detailsArray);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                return new EventCommand(String.join(\" \","
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                        Arrays.copyOfRange(detailsArray, 1, indexOfByAt)), dateTime);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                return new DeleteCommand(getAllIndex(command));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                return new DoneCommand(getAllIndex(command));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                return new FindCommand(getAllIndex(command));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                throw new InvalidInputException(ui.getInvalidInputMsg());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Obtain all valid index for the command and return them."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Check if all the inputs are valid. Else, throw appropriate errors."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param command the input command"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws InvalidFindDescription if the description of find is longer than one"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws InvalidIndexException if the index is invalid"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws InvalidInputException if the input is invalid"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private static ArrayList\u003cObject\u003e getAllIndex(String command) throws InvalidFindDescription,"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            InvalidIndexException, InvalidInputException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        ArrayList\u003cObject\u003e indexList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        String[] arr1 \u003d command.split(\" \", 2);    // to split the command and the index"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        String[] arr2 \u003d arr1[1].split(\"[,] \");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        switch (arr1[0]) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            for (int i \u003d 0; i \u003c arr2.length; i++) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                // split the individual keyword to check if it contains multiple words"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                if (arr2[i].split(\" \").length \u003e\u003d 2) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                    System.out.println(arr2[i]);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                    throw new InvalidFindDescription(ui.getInvalidFindMsg());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                    indexList.add(arr2[i]);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            return indexList;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            for (int i \u003d 0; i \u003c arr2.length; i++) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                if (!(Integer.parseInt(arr2[i]) \u003c\u003d tasks.getSize()) || !(Integer.parseInt(arr2[i]) \u003e 0)) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                    throw new InvalidIndexException(ui.getInvalidIndexMsg(arr1[0]));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                    indexList.add(Integer.parseInt(arr2[i]) - 1);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            return indexList;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            throw new InvalidInputException(ui.getInvalidInputMsg());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Updates the indexOfByAt variable and the dateTime variable according to the array."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param detailsArray the array containing the description of the command"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws ParseException if the timestamp is of incorrect format"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws MissingTimeStampException if the timestamp is missing, or \"/by\" or \"/at\" is missing"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    static void getDate(String[] detailsArray) throws ParseException, MissingTimeStampException {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        if (detailsArray[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            for (int i \u003d 0; i \u003c detailsArray.length; i++) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                if (detailsArray[i].equals(\"/by\")) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                    dateTime \u003d dateParse(String.join(\" \","
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                            Arrays.copyOfRange(detailsArray, i + 1, detailsArray.length)));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                    indexOfByAt \u003d i;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            throw new MissingTimeStampException(\"☹ OOPS!!! Missing timestamp!\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            for (int i \u003d 0; i \u003c detailsArray.length; i++) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                if (detailsArray[i].equals(\"/at\")) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                    dateTime \u003d dateParse(String.join(\" \","
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                            Arrays.copyOfRange(detailsArray, i + 1, detailsArray.length)));"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                    indexOfByAt \u003d i;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            throw new MissingTimeStampException(\"☹ OOPS!!! Missing timestamp!\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Returns the dateTime variable of the command."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the dateTime variable of the command"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    Date getDateTime() {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return this.dateTime;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Returns the indexOfByAt variable of the command."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the indexOfByAt variable of the command"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    int getIndexOfByAt() {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return this.indexOfByAt;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 187
    }
  },
  {
    "path": "src/main/java/seedu/duke/StatisticsCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Represents a Statistics Command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * A \u003ccode\u003eStatisticsCommand\u003c/code\u003e object corresponds to a command with a description that consists of \"show stats\"."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class StatisticsCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor of the StatisticsCommand class."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public StatisticsCommand() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Marked the task as done and updates the status icon of the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Updates the status of the task in the datafile."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param list the TaskList object that is handling the arraylist of the datafile"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param ui the UserInterface object that handles the interaction with users"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param storage the Storage object that stores and handles the path to datafile"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the output string"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws IOException on input error"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String execute(TaskList list, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        list.calculateStats();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        String output \u003d ui.showStatsMsg() + \"Number of Tasks Done: \" + list.getNumTaskDone() + \"\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                + \"Number of Tasks Not Done: \" + list.getNumTaskNotDone() + \"\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                + \"Number of Tasks Done Past Week: \" + list.getNumDonePastWeek() + \"\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 36
    }
  },
  {
    "path": "src/main/java/seedu/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import static seedu.duke.Task.DATE_FORMAT;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Represents the storage that handles the loading of tasks from the file and saving of tasks in the file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    File file;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor of the Storage class."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Creates a new file if it does not exists."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param filepath the filepath to the data file where the list of tasks will be stored"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws IOException exception thrown if wrong input"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public Storage(String filepath) throws IOException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        file \u003d new File(filepath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        file.createNewFile();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.filePath \u003d filepath;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Read in the data stored in the datafile if it exists."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Creates a new arraylist and add the tasks on the datafile to the arraylist."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param fr the filereader that reads the file"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the arraylist containing the tasks in the datafile"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws IOException if incorrect input"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws ParseException if the date and time in the datafile are in wrong format"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private static ArrayList\u003cTask\u003e readFile(FileReader fr) throws IOException, ParseException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        String line \u003d null;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            Task t \u003d null;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            String[] splitArr \u003d line.split(\" [|] \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            if (splitArr[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                t \u003d new Todo(splitArr[2]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            } else if (splitArr[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                Date dateTime \u003d DATE_FORMAT.parse(splitArr[3]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                t \u003d new Event(splitArr[2], dateTime);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            } else if (splitArr[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                Date dateTime \u003d DATE_FORMAT.parse(splitArr[3]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                t \u003d new Deadline(splitArr[2], dateTime);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            if (splitArr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                t.markAsDone();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                t.setDoneDateTime(splitArr[splitArr.length - 1]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            taskList.add(t);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Returns the arraylist of tasks in the datafile."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the arraylist of tasks in the datafile"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws IOException if the input is wrong"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws ParseException if the date and time in the datafile are in wrong format"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws IOException, ParseException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return readFile(new FileReader(file));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Writes new list of tasks to the datafile, overwriting previous tasks."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param taskList the arraylist of tasks to be written"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws IOException on wrong input"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void writeToFile(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                fw.write(taskList.getTask(i).writeToFile());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                fw.write(System.lineSeparator() + taskList.getTask(i).writeToFile());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Appends the latest(last) task in the arraylist to the datafile."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param taskList  the arraylist of tasks"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws IOException on wrong input"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void appendToFile(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        if (taskList.getSize() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            fw.write(taskList.getTask(taskList.getSize() - 1).writeToFile()); // only append the latest task"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            fw.write(System.lineSeparator() + taskList.getTask(taskList.getSize() - 1).writeToFile());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 117
    }
  },
  {
    "path": "src/main/java/seedu/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Represents a task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * A \u003ccode\u003eTask\u003c/code\u003e object corresponds to a task with a command that starts"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * with \"todo\", \"event\" or \"deadline\", followed by description."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class Task implements Comparable\u003cTask\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    static final SimpleDateFormat DATE_FORMAT \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    static final DateFormat PRINT_FORMAT \u003d new SimpleDateFormat(\"dd/MM/yyyy HH.mm aa\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    int doneIcon;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private Date dateTime;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private LocalDateTime doneDateTime;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor of the Task class."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param description the description of the task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        doneIcon \u003d 0;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Return the status icon depending on whether the task is marked done or not."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the status icon"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return (isDone ? \"[✓]\" : \"[✗]\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Sets the isDone variable to true and the doneIcon to 1."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Prints the done message and updates the date when it was marked done."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.doneIcon \u003d 1;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Returns the description of the task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the description of the task"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Appends the status icon with the description of the task."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the string description of the task"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return (this.getStatusIcon() + \" \" + this.description);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Appends the done icon with the description of the task."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the string description of the task in the format to be written in the datafile"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return (\"| \" + doneIcon + \" | \" + this.description);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Return dateTime variable of the task."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return dateTime of the task"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public Date getDateTime() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return dateTime;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Compare the deadline and event tasks by dateTime. Else, compare using the description of the task"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param o the task to compare with"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return an integer"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public int compareTo(Task o) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        if (o instanceof Todo \u0026\u0026 this instanceof Todo) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            return this.getDescription().compareTo(o.getDescription());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        } else if (!(o instanceof Todo) \u0026\u0026 !(this instanceof Todo)) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            return this.getDateTime().compareTo(o.getDateTime());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        } else if (this instanceof Todo \u0026\u0026 !(o instanceof Todo)) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            return 10;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }  else if (!(this instanceof Todo) \u0026\u0026 (o instanceof Todo)) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            return -10;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            return this.getDescription().compareTo(o.getDescription());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Convert date in Date format to LocalDateTime format."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param date the date to be converted"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the date in LocalDateTime format"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public LocalDateTime convertToLocalDateTime(Date date) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return date.toInstant()"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                .atZone(ZoneId.systemDefault())"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                .toLocalDateTime();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Returns the DateTime when the task was marked done."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the DateTime when the task was marked done"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public LocalDateTime getDoneDateTime() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return doneDateTime;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Sets the dateTime of when the task was done."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void setDoneDateTime() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.doneDateTime \u003d LocalDateTime.parse(LocalDateTime.now().format(formatter), formatter);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Sets the dateTime of when the task was done."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void setDoneDateTime(String str) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.doneDateTime \u003d LocalDateTime.parse(str);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 148
    }
  },
  {
    "path": "src/main/java/seedu/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.time.Duration;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * TaskList is a class that represents the list of tasks and contains operations to manipulate the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private static ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private int numTaskDone \u003d 0;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private int numTaskNotDone \u003d 0;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private int numDonePastWeek \u003d 0;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor of the Tasklist class."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Another constructor of the Tasklist class with the list of tasks as parameter."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param taskList the arraylist of tasks"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Adds the task to the list of tasks."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param t the task to be added"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        taskList.add(t);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Deletes the task from the list of tasks using index."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param index the index of the task to be deleted"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Deletes the task from the list of tasks directly."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param t the task to be deleted"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void deleteTask(Task t) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        taskList.remove(t);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Returns the task from the list of tasks."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param index the index of the task to be returned"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the task"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Returns the size of the list of tasks."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the size of the list of tasks"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Loops through the list of tasks to find the tasks containing the keywords."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param keyword the keyword that need to be matched"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return an arraylist tasks containing the keywords"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public ArrayList\u003cTask\u003e findMatching(String keyword) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        ArrayList\u003cTask\u003e matchingList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            String[] arr \u003d taskList.get(i).getDescription().split(\" \");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            for (int j \u003d 0; j \u003c arr.length; j++) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                if (arr[j].equalsIgnoreCase(keyword)) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                    matchingList.add(taskList.get(i));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return matchingList;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Sort the tasks according to the dateTime and the type of tasks."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void sortTask() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Collections.sort(this.taskList);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Calculate the statistics including the number of tasks done and those yet to be done."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void calculateStats() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        for (Task t: this.taskList) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            if (t.isDone) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                this.numTaskDone++;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                Duration duration \u003d Duration.between(t.getDoneDateTime(), LocalDateTime.now());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                if (duration.toDays() \u003c\u003d 7) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                    numDonePastWeek++;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        numTaskNotDone \u003d this.getSize() - numTaskDone;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Return number of tasks done."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the number of tasks done"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public int getNumTaskDone() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return numTaskDone;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Return number of tasks not done."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the number of tasks not done"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public int getNumTaskNotDone() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return numTaskNotDone;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Return number of tasks done in the past week."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the number of tasks done in the past week"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public int getNumDonePastWeek() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return numDonePastWeek;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 150
    }
  },
  {
    "path": "src/main/java/seedu/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Represents a Todo task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * A \u003ccode\u003eTodo\u003c/code\u003e object corresponds to a task with a command that starts with \"todo\" and contains"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * a description e.g., \u003ccode\u003etodo read book\u003c/code\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private Date dateTime \u003d null;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor of a Todo class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param description the description of the task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Appends the status icon to the description of the Todo object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the string representation of the Todo object"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Appends the status icon of the task to the string that will be stored in the data file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return a string that represents the todo task in the data file"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        if (!isDone) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            return (\"T \" + super.writeToFile());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            return (\"T \" + super.writeToFile() + \" | \" + this.getDoneDateTime());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Return dateTime variable of the task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return dateTime of the task"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public Date getDateTime() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return dateTime;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 55
    }
  },
  {
    "path": "src/main/java/seedu/duke/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Represents the Todo Command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * A \u003ccode\u003eTodoCommand\u003c/code\u003e object corresponds to a command with a description that starts with \"todo\"."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    String command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor of the Todo command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param command the description of the command"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public TodoCommand(String command) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Adds the task to the list of tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Prints the adding message, the task added and the number of tasks in the list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Update the data file with the new task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param list the TaskList object that is handling the arraylist of the data file"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param ui the UserInterface object that handles the interaction with users"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param storage the Storage object that stores and handles the path to data file"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the output string"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws IOException on the incorrect input"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String execute(TaskList list, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        list.addTask(new Todo(command));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        String output \u003d ui.printAddMsg() + ui.printLatest(list) + ui.printNumTask(list);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        storage.appendToFile(list);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 41
    }
  },
  {
    "path": "src/main/java/seedu/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Ui is a class that deals with interactions with the user. It contains operations that"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * read commands by the users and prints messages."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor of the Ui class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Returns the greeting message in the form of a string."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static String greet() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        String message \u003d \"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                + \"What can I do for you?\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Returns the exit message in the form of a string."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static String exit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        String byeMessage \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return byeMessage;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Return the statistics of the data."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static String showStatsMsg() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return \"Statistics: \\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Returns the error message in the form of a string if the storage cannot load."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static String showLoadingError() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        String msg \u003d \"Storage cannot be loaded!\\n\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Returns message and all the tasks in the list in the form of a string."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param list the list of tasks"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static String printList(TaskList list) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        assert list !\u003d null : \"TaskList cannot be null\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        String tasksMsg \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        tasksMsg +\u003d IntStream.range(0, list.getSize())"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                .filter((index) -\u003e list.getTask(index) !\u003d null)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                .mapToObj((index) -\u003e String.format(\"%d.%s\\n\", index + 1, list.getTask(index)))"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                .collect(Collectors.joining());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return tasksMsg;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Returns the add message in the form of a string."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static String printAddMsg() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return (\"Got it. I\u0027ve added this task:\\n\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Returns the message stating the number of tasks in the list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param list the list of tasks"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static String printNumTask(TaskList list) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return (\"Now you have \" + list.getSize() + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Returns the remove message in the form of a string."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static String printRemoveMsg() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return (\"Noted. I\u0027ve removed this task:\\n\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Returns the done message in the form of a string."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static String printDoneMsg() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return (\"Nice! I\u0027ve marked this task as done:\\n\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Returns the latest task in the list."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param list the list of tasks"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static String printLatest(TaskList list) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return list.getTask(list.getSize() - 1) + \"\\n\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Returns the matching message."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static String printMatchingMsg() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return (\"Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Returns the tasks in the matching list."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param list the list of matching tasks"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static String printMatchingList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        String joinedString \u003d IntStream.range(0, list.size())"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                .filter((index) -\u003e list.get(index) !\u003d null)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                .mapToObj((index) -\u003e String.format(\"%d.%s\\n\", index + 1, list.get(index)))"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                .collect(Collectors.joining());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return joinedString;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Returns the empty description error message."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param s the type of task"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the empty description error message"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static String getEmptyDescriptionMsg(String s) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return (\"☹ OOPS!!! The description of a \" + s + \" command cannot be empty.\\n\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Returns the invalid input error message."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the invalid input error message"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static String getInvalidInputMsg() {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return (\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Returns the error message."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param s the error message"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String printErrMsg(String s) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return s + \"\\n\";"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Returns the invalid find input error message."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the invalid find input error message"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static String getInvalidFindMsg() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return (\"☹ OOPS!!! The keyword to find must only be one word. :-(\\n\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Returns the invalid index error message."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the invalid index error message"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static String getInvalidIndexMsg(String str) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return (\"☹ OOPS!!! The index of \" + str + \" command must be an integer \""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                + \"and be within the size of the list :-(\\n\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 176
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            \u003cFont name\u003d\"Baskerville\" size\u003d\"16.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "         \u003c/font\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 20
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"seedu.duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 19
    }
  },
  {
    "path": "src/test/java/seedu/duke/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void testStringConversion1() throws ParseException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Date date \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(\"2/12/2019 1521\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        assertEquals(\"[D][✗] return book (by: 02/12/2019 15.21 PM)\", new Deadline(\"return book\", date).toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void testStringConversion2() throws ParseException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Date date \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(\"2/12/2019 1521\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Deadline deadlineTask \u003d new Deadline(\"return book\", date);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        deadlineTask.markAsDone();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        assertEquals(\"[D][✓] return book (by: 02/12/2019 15.21 PM)\", deadlineTask.toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void testWriteToFile1() throws ParseException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Date date \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(\"2/12/2019 1521\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Deadline deadlineTask \u003d new Deadline(\"return book\", date);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        deadlineTask.markAsDone();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        //String[] arr \u003d deadlineTask.writeToFile().split(\" [|] \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        assertEquals(\"D | 1 | return book | 02/12/2019 1521\" + \" | \" + deadlineTask.getDoneDateTime(),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                deadlineTask.writeToFile());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 37
    }
  },
  {
    "path": "src/test/java/seedu/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void test1() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        assertEquals(1, 1);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 14
    }
  },
  {
    "path": "src/test/java/seedu/duke/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void testStringConversion1() throws ParseException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Date date \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(\"2/12/2019 1521\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        assertEquals(\"[E][✗] project meeting (at: 02/12/2019 15.21 PM)\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                new Event(\"project meeting\", date).toString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void testStringConversion2() throws ParseException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Date date \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(\"2/12/2019 1521\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Event eventTask \u003d new Event(\"project meeting\", date);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        eventTask.markAsDone();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        assertEquals(\"[E][✓] project meeting (at: 02/12/2019 15.21 PM)\", eventTask.toString());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void testWriteToFile1() throws ParseException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Date date \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(\"2/12/2019 1521\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Event eventTask \u003d new Event(\"project meeting\", date);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        eventTask.markAsDone();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        assertEquals(\"E | 1 | project meeting | 02/12/2019 1521\" + \" | \" + eventTask.getDoneDateTime(),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                eventTask.writeToFile());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 37
    }
  },
  {
    "path": "src/test/java/seedu/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void dateParseTest() throws ParseException, DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Date date \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(\"3/12/1312 0145\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        assertEquals(date, Parser.dateParse(\"3/12/1312 0145\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void getDateTest1() throws ParseException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        String[] arr \u003d {\"deadline\", \"art\", \"festival\", \"3/12/131\", \"0145\"};  // missing \"/by\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            Parser.getDate(arr);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        } catch (MissingTimeStampException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            assertEquals(\"☹ OOPS!!! Missing timestamp!\", e.getMessage());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void getDateTest2() throws ParseException, DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Date date \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(\"3/12/1332 0145\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        String[] arr \u003d {\"deadline\", \"art\", \"festival\", \"/by\", \"3/12/1332\", \"0145\"};  // missing \"/by\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        parser.getDate(arr);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        assertEquals(date, parser.getDateTime());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        assertEquals(3, parser.getIndexOfByAt());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void parseTest1() throws ParseException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        String str \u003d \"deadline\";  // missing description"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            Parser.parse(str, ui, tasks);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        } catch (InvalidInputException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            assertEquals(\"☹ OOPS!!! The description of a \" + \"deadline\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                    + \" command cannot be empty.\\n\", e.getMessage());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void parseTest2() throws ParseException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        String str \u003d \"blahh\";  // invalid input"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            Parser.parse(str, ui, tasks);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        } catch (InvalidInputException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            assertEquals(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\", e.getMessage());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 77
    }
  },
  {
    "path": "src/test/java/seedu/duke/TasklistTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class TasklistTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void getTaskTest() throws ParseException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        list.add(new Todo(\"Workout\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Date date \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(\"3/12/1312 0145\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Event eventTask \u003d new Event(\"music fest\", date);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        list.add(eventTask);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        TaskList taskList \u003d new TaskList(list);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        assertEquals(eventTask, taskList.getTask(1));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void getSizeTest() throws ParseException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        list.add(new Todo(\"Workout\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Date date \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(\"3/12/1312 0145\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Event eventTask \u003d new Event(\"music fest\", date);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        list.add(eventTask);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        TaskList taskList \u003d new TaskList(list);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        assertEquals(2, taskList.getSize());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 35
    }
  },
  {
    "path": "src/test/java/seedu/duke/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void testStringConversion1() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        assertEquals(\"[T][✗] read book\", new Todo(\"read book\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void testStringConversion2() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Todo todoTask \u003d new Todo(\"read book\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        todoTask.markAsDone();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        assertEquals(\"[T][✓] read book\", todoTask.toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void testWriteToFile1() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Todo todoTask \u003d new Todo(\"read book\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        todoTask.markAsDone();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        String actualOutput \u003d todoTask.writeToFile();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        assertEquals(\"T | 1 | read book\" + \" | \" + todoTask.getDoneDateTime(), actualOutput);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 28
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "  [T][✗] borrow book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "  [D][✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "  [E][✗] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "[T][✓] borrow book"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "1.[T][✓] borrow book"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "2.[D][✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "3.[E][✗] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "☹ OOPS!!! The description of a todo cannot be empty."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "  [T][✓] borrow book"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 23
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "blah"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "todo"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 9
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "if ! javac -cp ../src/main/java/*.java -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 34
    }
  }
]
