[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "test {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    //mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 15,
      "tohcejasmine": 23
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    private DukeData dukeData;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // Constructor"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public Duke() throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        // Get data from hard disk if available"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        dukeData \u003d new DukeData();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        taskList \u003d dukeData.getIsExist() ?"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                dukeData.toArrayList() : new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public static void main(String[] args) throws DukeException, IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        // First greetings"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    private boolean inProgram;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    private void run() throws DukeException, IOException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        // Initialise Scanner object"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        String taskDescription;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        // More general than taskDescription, includes \"/by\", \"/at\" info"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        // Continually receive commands until exit"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        inProgram \u003d true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        while (inProgram) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            String userInput \u003d input.nextLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            ArrayList\u003cString\u003e userInputArr \u003d splitStrIntoArr(userInput, \" \");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            // Identify command by first word"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            switch (userInputArr.get(0)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                displaySentence(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                // Exit program"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                inProgram \u003d false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                if (taskList.isEmpty()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    displaySentence(\"You have no tasks yet!\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    displayTasks();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                // Empty description"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                if (userInputArr.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    throw new EmptyDescriptionException(\"todo\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    // Splice back the description"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    taskDescription \u003d String.join(\" \","
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                            userInputArr.subList(1, userInputArr.size()));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    newTask \u003d new ToDo(taskDescription);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    addTask(newTask);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                addTaskWithSubcommand(\"deadline\", userInputArr);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                addTaskWithSubcommand(\"event\",userInputArr);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                // Empty/no list index of task provided"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                if (userInputArr.size() \u003d\u003d 1 || userInputArr.size() \u003e 2) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    throw new DukeException(\"Please put the list index of the \" +"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                            \"completed task after \\\"done\\\" and nothing else.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    // Check if integer is provided"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                        int doneIdx \u003d Integer.parseInt(userInputArr.get(1));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                        // Check if integer is within range of number of tasks"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                        if (doneIdx \u003e taskList.size() || doneIdx \u003c 1) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                            throw new DukeException(\"Integer is not within range of tasks.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                        Task doneTask \u003d taskList.get(doneIdx-1);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                        markDoneTask(doneTask);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                        throw new DukeException(\"Please enter a valid integer after \\\"Done\\\".\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                // Empty/no list index of task provided"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                if (userInputArr.size() \u003d\u003d 1 || userInputArr.size() \u003e 2) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    throw new DukeException(\"Please put the list index of the \" +"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                            \"completed task after \\\"delete\\\" and nothing else.\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    // Check if integer is provided"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                        int deleteIdx \u003d Integer.parseInt(userInputArr.get(1));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                        // Check if integer is within range of number of tasks"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                        if (deleteIdx \u003e taskList.size() || deleteIdx \u003c 1) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                            throw new DukeException(\"Integer is not within range of tasks.\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                        Task deletedTask \u003d taskList.get(deleteIdx-1);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                        deleteTask(deletedTask);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                        throw new DukeException(\"Please enter a valid integer after \\\"delete\\\".\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                throw new UnknownCommandException();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    //////////////////////"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // MODIFY TASK LIST //"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    /////////////////////"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // For commands with subcommands"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // (deadline/by, event/at)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    private void addTaskWithSubcommand(String command, ArrayList\u003cString\u003e userInputArr) throws DukeException, IOException {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        String subCommand \u003d command.equals(\"deadline\") ? \"/by\" : \"/at\";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        // Empty Description"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        // (only \"deadline\" or \"deadline /by\") or (only \"event\" or \"deadline /at\")"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        if (userInputArr.size() \u003d\u003d 1 || userInputArr.get(1).equalsIgnoreCase(subCommand)) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            throw new EmptyDescriptionException(command);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            int firstByIdx \u003d userInputArr.indexOf(subCommand);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            int lastByIdx \u003d userInputArr.lastIndexOf(subCommand);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            // No \"/by\" or multiple \"/by\"s provided"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            if (firstByIdx \u003d\u003d -1 || firstByIdx !\u003d lastByIdx) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                throw new IncorrectInfoInputException(subCommand);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                // No description of \"/by\" or \"/at\""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            } else if (firstByIdx \u003d\u003d userInputArr.size()-1) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                throw new EmptyDescriptionException(subCommand);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                // Splice words after first-word command and before \"/by\" or \"/at\""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                String taskDescription \u003d String.join(\" \","
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                        userInputArr.subList(1, firstByIdx));"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                // Description for \u0027/by\u0027, \u0027/at\u0027"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                String subCommandDescription \u003d String.join(\" \","
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                        userInputArr.subList(firstByIdx+1, userInputArr.size()));"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                Task newTask \u003d command.equals(\"deadline\") ?"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                        new Deadline(taskDescription, subCommandDescription) :"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                        new Event(taskDescription, subCommandDescription);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                addTask(newTask);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // Adds task and saves changes in hard disk"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    private void addTask(Task newTask) throws IOException {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        taskList.add(newTask);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        dukeData.saveData(taskList);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        addTaskResponse(newTask);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // Deletes task and saves changes in hard disk"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    private void deleteTask(Task deletedTask) throws IOException {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        taskList.add(deletedTask);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        dukeData.saveData(taskList);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        deleteTaskResponse(deletedTask);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // Marks task as done and saves changes in hard disk"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    private void markDoneTask(Task doneTask) throws IOException {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        doneTask.markDone();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        dukeData.saveData(taskList);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        markDoneResponse(doneTask);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    /////////////////////"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // HELPER METHODS //"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    ///////////////////"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // Splits a string by given regex pattern to AL"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // E.g. \"A B C\" to [A, B, C]"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public ArrayList\u003cString\u003e splitStrIntoArr(String input, String pattern) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        ArrayList\u003cString\u003e result \u003d new ArrayList\u003cString\u003e("
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                // Split string by pattern"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                Arrays.asList(input.split(pattern))"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        );"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    ////////////////////"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // PRINT METHODS //"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    //////////////////"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    private String indentStr \u003d \"    \";"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    private String borderStr \u003d \"-----\";"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    private String indentResponse(String response) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        return indentStr + response;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // Sandwich text between -----s"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    private void displaySentence(String response) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(borderStr);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(indentResponse(response));"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(borderStr);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // List out added tasks (list)"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    private void displayTasks() {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(borderStr);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(indentStr + \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            // Format: 1. [T/D/E][v/x] task-description (by/at: ...)"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            System.out.println(indentStr +"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    (taskList.indexOf(task)+1) + \".\" +"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    task.toString());"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(borderStr);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // Acknowledgement response for commands which adds, deletes tasks"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    private void addTaskResponse(Task task) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        this.modifyTaskListResponse(\"Got it. I\u0027ve added this task:\", task);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    private void deleteTaskResponse(Task task) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        this.modifyTaskListResponse(\"Noted. I\u0027ve removed this task:\", task);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // During additions and deletions to list"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    private void modifyTaskListResponse(String message, Task task) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(borderStr);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(indentResponse(message));"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(indentResponse(\"  \" + task.toString()));"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(indentResponse("
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                \"Now you have \" + taskList.size() +"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                        (taskList.size() \u003d\u003d 1? \" task\":\" tasks\") +"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                        \" in the list.\"));"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(borderStr);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    private void markDoneResponse(Task doneTask) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(borderStr);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(indentResponse(\"Nice! I\u0027ve marked this task as done:\"));"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(indentResponse(\"  \" + doneTask.toString()));"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(borderStr);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 10,
      "tohcejasmine": 249
    }
  },
  {
    "path": "src/main/java/DukeData.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "// Class of saved tasks in hard disk"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "public class DukeData {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    private File f;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    private boolean isExists;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // Format of file"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // T | 1 | read book"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // D | 0 | return book | June 6th"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // E | 0 | project meeting | Aug 6th 2-4pm"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // T | 1 | join sports club"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public DukeData() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        f \u003d new File(\"F:\\\\CS2103\\\\duke\\\\data\\\\duke.txt\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        isExists \u003d f.exists();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // Convert contents of data to ArrayList"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public ArrayList\u003cTask\u003e toArrayList() throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            // Represents one line of file"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            ArrayList\u003cString\u003e taskData;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            Task currTask \u003d null;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            String taskType; // T (todo), D (deadline), E (event)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            boolean isTaskDone;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            Scanner input \u003d new Scanner(f);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            while (input.hasNextLine()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                // Splits data from A | B | C to [A, B, C]"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                taskData \u003d new ArrayList\u003cString\u003e("
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                        Arrays.asList(input.nextLine().split(\" \\\\| \"))"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                );"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                taskType \u003d taskData.get(0);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                isTaskDone \u003d taskData.get(1).equals(\"1\") ? true : false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    currTask \u003d new ToDo(taskData.get(2));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    currTask \u003d new Deadline(taskData.get(2), taskData.get(3));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    currTask \u003d new Event(taskData.get(2), taskData.get(3));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                if (isTaskDone) { currTask.markDone(); }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                taskList.add(currTask);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            throw new DukeDataException();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // Save changes in task list to hard disk"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public void saveData(ArrayList\u003cTask\u003e taskList) throws IOException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        // Note: Overwrites file if currently exists"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        FileWriter fw \u003d new FileWriter(\"F:\\\\CS2103\\\\duke\\\\data\\\\duke.txt\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        String separatorStr \u003d \" | \";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        for (Task currTask : taskList) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            fw.write("
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    // Format: D | 0 | return book | June 6th"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    currTask.getTaskType() + separatorStr +"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                            (currTask.isDone()? 1 : 0) + separatorStr +"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                            currTask.getDescription() +"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                            (currTask.getTaskType().equals(\"T\")?"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                                    \"\" : separatorStr + currTask.getSubDescription())"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            );"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            fw.write(\"\\n\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // Returns whether data in hard disk exists"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public boolean getIsExist() { return isExists; }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "tohcejasmine": 87
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        super(\"OOPS! \" + message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//Empty description after command (todo, event, deadline, list, done)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public EmptyDescriptionException (String command) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        super(\"The description of a \" + command +"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                \" cannot be empty.\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//Unrecognised first word command"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "class UnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public UnknownCommandException() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        super(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//Incorrect usage of \u0027deadline\u0027 or \u0027event\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//Commands requiring additional info of \"/by\" or \"/at\" (either absent or occuring more than once)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "class IncorrectInfoInputException extends DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public IncorrectInfoInputException(String subCommand) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        super(\"Please have one \\\"\" + subCommand + \"\\\" provided.\" );"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "// When no existing data in hard disk"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "class DukeDataException extends DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public DukeDataException() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        super(\"Dang it! No data in hard disk yet.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohcejasmine": 35
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    protected String subDescription; // For /by, /at"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public Task(String description, String subDescription) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        this.subDescription \u003d subDescription;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        //return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        return (isDone? \"v\" : \"x\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public String getSubDescription() {return subDescription; }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public boolean isDone() { return isDone; }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    //Display \"[status-icon] task-description\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                this.description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // Mainly for use in saving data to hard disk"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public String getTaskType() { return \"?\"; }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "class ToDo extends Task {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        super(description, null);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public String getTaskType() { return \"T\"; }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "class Deadline extends Task {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        super(description, by);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        // If deadline /by is of correct format"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        if (isValidDateTimeFormat(by)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                SimpleDateFormat displayFormat \u003d new SimpleDateFormat(\"dd MMMM yyyy, hh:mm a\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                SimpleDateFormat inputFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                Date date \u003d inputFormat.parse(by);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                // Output: 2nd of December 2019, 6pm"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                by \u003d displayFormat.format(date);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                this.subDescription \u003d by;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                throw new DukeException(\"Unable to recognise date-time provided.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + subDescription + \")\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public String getTaskType() { return \"D\"; }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // Returns true if string is of format 2/12/2019 1800"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    private boolean isValidDateTimeFormat(String str) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        SimpleDateFormat inputFormat \u003d new SimpleDateFormat(\"dd/MM/yyy hhmm\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            /*str.matches(\"([1-9]|[1-2][0-9]|3[0-1])/\" +"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    \"([1-9]|1[0-2])/\" +"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    \"([0-9]{4})\" +"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    \"\\\\s[0-2][0-9]([0-5]{2})\")"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "             */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            inputFormat.parse(str);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "class Event extends Task {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        super(description, at);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + subDescription + \")\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public String getTaskType() { return \"E\"; }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohcejasmine": 106
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "-----"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "      [T][x] read book"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    Now you have 1 task in the list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "-----"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "-----"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "      [D][x] return book (by: June 6th)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "-----"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "-----"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "      [T][v] return book"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "-----"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "-----"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "      [E][x] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "-----"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "-----"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "      [T][x] join sports club"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    Now you have 4 task in the list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "-----"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "-----"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "      [T][v] join sports club"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "-----"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "-----"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "      [T][x] borrow book"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    Now you have 5 task in the list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "-----"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "-----"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    Here are the tasks in your list:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    1.[T][v] read book"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    2.[D][x] return book (by: June 6th)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    3.[E][x] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    4.[T][v] join sports club"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    5.[T][x] borrow book"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "-----"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "-----"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "      [D][x] return book (by: Sunday)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "-----"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "-----"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "      [E][x] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    Now you have 7 tasks in the list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "-----"
      }
    ],
    "authorContributionMap": {
      "tohcejasmine": 54
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "tohcejasmine": 21
    }
  }
]
