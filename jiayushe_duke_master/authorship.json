[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "# DukeBot User Guide [![Status](https://travis-ci.org/jiayushe/duke.svg?branch\u003dmaster)](https://travis-ci.org/jiayushe/duke)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "## User Interface"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "![UI](docs/Ui.png)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "### Task Manager"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "DukeBot is a personal task manager. It allows users to add, delete, search and tag tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "### 1. `bye` - Exits application"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Exits DukeBot application."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "bye"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "☀ Bye! Hope to see you again soon!"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "### 2. `deadline DESCRIPTION /by DATETIME` - Adds a deadline"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Adds a Deadline Task to task list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "deadline hello world /by 01/01/2019 1800"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Got it! I\u0027ve added this task:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "[D][✘] hello world (by: 1 Jan 2019 18:00)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Now you have 1 task in the list!"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "### 3. `delete TASKID` - Deletes a task"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Deletes a task from task list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Noted! I\u0027ve removed this task:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "[D][✘] hello world (by: 1 Jan 2019 18:00)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Now you have 0 tasks in the list!"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "### 4. `done TASKID` - Marks a task as done"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Marks a task as done in task list."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "[D][✓] hello world (by: 1 Jan 2019 18:00)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "### 5. `event DESCRIPTION /at DATETIME` - Adds an event"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Adds an Event Task to task list."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "event hello world /at 01/01/2019 1800"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Got it! I\u0027ve added this task:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "[E][✘] hello world (at: 1 Jan 2019 18:00)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Now you have 1 task in the list!"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "### 6. `find TASKID` - Searches tasks"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Searches tasks by keyword in the task list."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "find world"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "1.[E][✘] hello world (at: 1 Jan 2019 18:00)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "### 7. `list` - Lists tasks"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Lists all tasks in the task list."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "list"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "1.[E][✘] hello world (at: 1 Jan 2019 18:00)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "### 8. `tag TASKID /as TAGNAME` - Adds a tag to a task"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Adds a tag to a task in the task list."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "tag 1 /as life"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Tag life added to this task:"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "[E][✘][#life] hello world (at: 1 Jan 2019 18:00)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "### 9. `todo DESCRIPTION` - Adds a Todo Task"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Adds a Todo Task to task list."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "todo hello world"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Got it! I\u0027ve added this task:"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "[T][✘] hello world"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Now you have 2 tasks in the list!"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "jiayushe": 157,
      "-": 10
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    archiveVersion \u003d \"0.2.2\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "test {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "version \u00270.2.1\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiayushe": 42,
      "-": 18
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "# Developer Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "## Setting up"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "[![Status](https://travis-ci.org/jiayushe/duke.svg?branch\u003dmaster)](https://travis-ci.org/jiayushe/duke)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "## Tutorials "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Duke Increment | Tutorial"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](../tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](../tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "[fx1]: \u003c../tutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "[fx2]: \u003c../tutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "[fx3]: \u003c../tutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "[fx4]: \u003c../tutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "## Feedback, Bug Reports"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "jiayushe": 43
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "# DukeBot User Guide [![Status](https://travis-ci.org/jiayushe/duke.svg?branch\u003dmaster)](https://travis-ci.org/jiayushe/duke)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "## User Interface"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "![UI](Ui.png)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "### Task Manager"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "DukeBot is a personal task manager. It allows users to add, delete, search and tag tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "### 1. `bye` - Exits application"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Exits DukeBot application."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "bye"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "☀ Bye! Hope to see you again soon!"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "### 2. `deadline DESCRIPTION /by DATETIME` - Adds a deadline"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Adds a Deadline Task to task list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "deadline hello world /by 01/01/2019 1800"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Got it! I\u0027ve added this task:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "[D][✘] hello world (by: 1 Jan 2019 18:00)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Now you have 1 task in the list!"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "### 3. `delete TASKID` - Deletes a task"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Deletes a task from task list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Noted! I\u0027ve removed this task:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "[D][✘] hello world (by: 1 Jan 2019 18:00)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Now you have 0 tasks in the list!"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "### 4. `done TASKID` - Marks a task as done"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Marks a task as done in task list."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "[D][✓] hello world (by: 1 Jan 2019 18:00)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "### 5. `event DESCRIPTION /at DATETIME` - Adds an event"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Adds an Event Task to task list."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "event hello world /at 01/01/2019 1800"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Got it! I\u0027ve added this task:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "[E][✘] hello world (at: 1 Jan 2019 18:00)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Now you have 1 task in the list!"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "### 6. `find TASKID` - Searches tasks"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Searches tasks by keyword in the task list."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "find world"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "1.[E][✘] hello world (at: 1 Jan 2019 18:00)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "### 7. `list` - Lists tasks"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Lists all tasks in the task list."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "list"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "1.[E][✘] hello world (at: 1 Jan 2019 18:00)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "### 8. `tag TASKID /as TAGNAME` - Adds a tag to a task"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Adds a tag to a task in the task list."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "tag 1 /as life"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Tag life added to this task:"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "[E][✘][#life] hello world (at: 1 Jan 2019 18:00)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "### 9. `todo DESCRIPTION` - Adds a Todo Task"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Adds a Todo Task to task list."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "todo hello world"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Got it! I\u0027ve added this task:"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "[T][✘] hello world"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "Now you have 2 tasks in the list!"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "jiayushe": 147,
      "-": 20
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Constructs a DialogBox based on given text and avatar for Duke output."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param text Text to be printed."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param img Avatar to be displayed."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        dialog.setMinHeight(Region.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        dialog.setMinWidth(Region.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Generates a DialogBox based on given text and avatar for user input."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param text Text to be printed."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param img Avatar to be displayed."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @return JavaFX DialogBox containing the given text and avatar."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        BackgroundFill backFill \u003d new BackgroundFill("
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            Color.web(\"#c5dae3\"),"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            new CornerRadii(20),"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            new Insets(5, 5, 5, 5)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        );"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        Background background \u003d new Background(backFill);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        db.setBackground(background);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Generates a DialogBox based on given text and avatar for Duke output."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param text Text to be printed."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param img Avatar to be displayed."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @return JavaFX DialogBox containing the given text and avatar."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        BackgroundFill backFill \u003d new BackgroundFill("
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            Color.web(\"#cfe8d5\"),"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            new CornerRadii(20),"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            new Insets(5, 5, 5, 5)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        );"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        Background background \u003d new Background(backFill);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        db.setBackground(background);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiayushe": 104
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.util.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " * Main class for Duke application."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Constructs a Duke object with disk storage located at filepath\"."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param filePath filepath for disk storage"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        assert filePath !\u003d null : \"Filepath cannot be null.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        this.taskList \u003d new TaskList(storage);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Generates a response to user input."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param input User input to be processed."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @return response to be printed."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    protected String getResponse(String input) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            Command command \u003d Parser.parseCommand(input);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            return String.join(\"\\n\", command.execute(taskList));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            //CHECKSTYLE.OFF: AvoidEscapedUnicodeCharactersCheck"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            return \"\\u26A0 OOPS! \" + e.getMessage();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            //CHECKSTYLE.ON: AvoidEscapedUnicodeCharactersCheck"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiayushe": 42,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/Gui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "public class Gui extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private Duke duke \u003d new Duke(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Gui.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            stage.setTitle(\"DukeBot\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            stage.getIcons().add(new Image(\"/images/favicon.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiayushe": 34
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        Application.launch(Gui.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiayushe": 12
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private static String WELCOME_MESSAGE \u003d"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        \"Hello! I\u0027m\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        + \" ____        _        \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        + \"What can I do for you?\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.png\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private void initialize() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            DialogBox.getDukeDialog(WELCOME_MESSAGE, dukeImage)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        );"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        );"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            new Thread(() -\u003e {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                    Thread.sleep(200);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                    System.exit(0);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                } catch (InterruptedException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                    dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                        DialogBox.getDukeDialog(\"DukeBot exiting!\", dukeImage)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                    );"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            }).start();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiayushe": 76
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " * ByeCommand class."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public String[] execute(TaskList taskList) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        //CHECKSTYLE.OFF: AvoidEscapedUnicodeCharactersCheck"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return new String[] {\"\\u2600 Bye! Hope to see you again soon!\"};"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        //CHECKSTYLE.ON: AvoidEscapedUnicodeCharactersCheck"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiayushe": 24
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " * Abstract Command class, for inheritance of various commands."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param taskList List of tasks for operation of command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @return message to be printed."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public abstract String[] execute(TaskList taskList) throws DukeException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Checks if the command should cause the application to exit."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @return true if command should cause the application to exit, or false otherwise."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiayushe": 24
    }
  },
  {
    "path": "src/main/java/duke/command/CommandEnum.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " * Enum class for Command class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "public enum CommandEnum {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    BYE,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    FIND,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    TAG,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    TODO;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiayushe": 16
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " * DeadlineCommand class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Constructs a DeadlineCommand object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param description Description of deadline."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param by Due date of deadline."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public DeadlineCommand(String description, String by) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public String[] execute(TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return taskList.addNewTask(new Deadline(this.description, this.by));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiayushe": 38
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " * DeleteCommand class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Constructs a DeleteCommand object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param taskNumber Index of task for operation of command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public DeleteCommand(int taskNumber) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public String[] execute(TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return taskList.deleteTask(this.taskNumber);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiayushe": 34
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " * DoneCommand class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Constructs a DoneCommand object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param taskNumber Index of task for operation of command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public DoneCommand(int taskNumber) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public String[] execute(TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return taskList.doTask(this.taskNumber);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiayushe": 34
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " * EventCommand class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Constructs a EventCommand object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param description Description of event."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param at Timing of event."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public EventCommand(String description, String at) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public String[] execute(TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return taskList.addNewTask(new Event(this.description, this.at));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiayushe": 38
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " * FindCommand class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Constructs a FindCommand object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param keyword Keyword to be searched."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public String[] execute(TaskList taskList) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        ArrayList\u003cTask\u003e filteredList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            if ((task.getDescription() + task.getTag()).contains(this.keyword)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                filteredList.add(task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return TaskList.printExternalList(filteredList, \"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiayushe": 42
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " * ListCommand class."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public String[] execute(TaskList taskList) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return taskList.printList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiayushe": 22
    }
  },
  {
    "path": "src/main/java/duke/command/TagCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " * TagCommand class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "public class TagCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private String tag;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Constructs a TagCommand object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param taskNumber Index of task for operation of command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public TagCommand(int taskNumber, String tag) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        this.tag \u003d tag;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public String[] execute(TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return taskList.tagTask(this.taskNumber, this.tag);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiayushe": 36
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " * TodoCommand class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Constructs a TodoCommand object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param description Description of ToDo task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public TodoCommand(String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public String[] execute(TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return taskList.addNewTask(new ToDo(this.description));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiayushe": 35
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " * Exception class for Duke application."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Constructs a DukeException object with the given message."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param message Message of exception."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiayushe": 15
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.util.Formatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.util.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " * Deadline class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private LocalDateTime by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Constructs a Deadline object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param description Description of deadline."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param by Due date of deadline."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        this.by \u003d Parser.parseDateTime(by);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public String toDataString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return \"D | \" + super.toDataString() + \" | \" + Formatter.standardFormatDateTime(this.by);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + Formatter.prettyFormatDateTime(by) + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiayushe": 37
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.util.Formatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.util.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private LocalDateTime at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Constructs a Event object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param description Description of event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param at Timing of event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public Event(String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        this.at \u003d Parser.parseDateTime(at);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public String toDataString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return \"E | \" + super.toDataString() + \" | \" + Formatter.standardFormatDateTime(this.at);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + Formatter.prettyFormatDateTime(at) + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiayushe": 34
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " * Task class, for inheritance of various tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private String tag;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private boolean isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Constructs a Task object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        this.tag \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Returns status icon of the task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @return the tick icon [✓] if task is done, or cross icon [✗] otherwise."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        //CHECKSTYLE.OFF: AvoidEscapedUnicodeCharactersCheck"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return this.isDone ? \"[\\u2713]\" : \"[\\u2718]\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        //CHECKSTYLE.ON: AvoidEscapedUnicodeCharactersCheck"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Returns the string representation of the tag."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @return the string representation of the tag."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private String getTagString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return this.tag.equals(\"\") ? \"\" : \"[#\" + this.tag + \"]\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Adds tag to the task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public void addTag(String tag) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        this.tag \u003d tag;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Extracts description of the task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @return description of the task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Extracts tag of the task."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @return tag of the task."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public String getTag() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return this.tag;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Gives a string representation of the task for storage."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @return a string representation of the task for storage."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public String toDataString() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return (this.isDone ? 1 : 0)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            + \" | \" + this.description"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            + (this.tag.equals(\"\") ? \"\" : \" | \" + this.tag);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return this.getStatusIcon()"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            + this.getTagString()"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            + \" \" + this.description;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiayushe": 90
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " * TaskList class, for in memory storage of tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "public class TaskList implements Iterable\u003cTask\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Constructs a TaskList object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param storage Disk storage for task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public TaskList(Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            this.taskList \u003d new ArrayList\u003cTask\u003e(this.storage.load());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            this.taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Updates task list in disk storage."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @throws DukeException if encountered IO exceptions."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private void updateDatabase() throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        this.storage.store(this.taskList);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Adds the given task to task list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param task Task to be added to task list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @return message to be printed."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @throws DukeException if encountered IO exceptions while updating disk storage."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public String[] addNewTask(Task task) throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        assert task !\u003d null : \"Task cannot be null.\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        this.taskList.add(task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        this.updateDatabase();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return new String[] {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            \"Got it! I\u0027ve added this task:\","
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            task.toString(),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            taskList.size() \u003d\u003d 1"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                ? \"Now you have 1 task in the list!\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                : \"Now you have \" + taskList.size() + \" tasks in the list!\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        };"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Marks the given task as done in task list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param index Index of task to be marked as done."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @return message to be printed."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @throws DukeException if task index is invalid or encountered IO exceptions while updating disk storage."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public String[] doTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            Task task \u003d taskList.get(index - 1);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            this.updateDatabase();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            return new String[] {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                \"Nice! I\u0027ve marked this task as done:\","
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                task.toString()"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            };"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            throw new DukeException(\"Task number invalid!\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Deletes the given task in task list."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param index Index of task to be deleted."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @return message to be printed."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @throws DukeException if task index is invalid or encountered IO exceptions while updating disk storage."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public String[] deleteTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            Task task \u003d taskList.remove(index - 1);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            this.updateDatabase();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            return new String[]{"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                \"Noted! I\u0027ve removed this task:\","
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                task.toString(),"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                taskList.size() \u003d\u003d 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                    ? \"Now you have 1 task in the list!\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                    : \"Now you have \" + taskList.size() + \" tasks in the list!\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            };"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            throw new DukeException(\"Task number invalid!\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Tags the given task."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param index Index of task to be marked as done."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param tag Tag to be added to the task."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @return message to be printed."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @throws DukeException if task index is invalid or encountered IO exceptions while updating disk storage."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public String[] tagTask(int index, String tag) throws DukeException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            Task task \u003d taskList.get(index - 1);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            task.addTag(tag);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            this.updateDatabase();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            return new String[] {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                \"Tag \" + tag + \" added to this task:\","
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                task.toString()"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            };"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            throw new DukeException(\"Task number invalid!\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Prints the entire task list to ui."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @return list to be printed."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public String[] printList() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        String[] output \u003d new String[this.taskList.size() + 1];"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        output[0] \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        for (Task task : this.taskList) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            output[counter] \u003d counter++ + \".\" + task;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Prints an external task list to ui."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param taskList External task list to be printed."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param message Message to be printed with the task items."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @return list to be printed."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public static String[] printExternalList(ArrayList\u003cTask\u003e taskList, String message) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        String[] output \u003d new String[taskList.size() + 1];"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        output[0] \u003d message;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            output[counter] \u003d counter++ + \".\" + task;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public Iterator\u003cTask\u003e iterator() {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return taskList.iterator();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiayushe": 160
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Constructs a ToDo object."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param description Description of ToDo task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public String toDataString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return \"T | \" + super.toDataString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiayushe": 25
    }
  },
  {
    "path": "src/main/java/duke/util/Formatter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " * Formatter class, to handle various formatting in Duke application."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "public class Formatter {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private static final DateTimeFormatter PRETTY_FORMAT \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy HH:mm\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private static final DateTimeFormatter STANDARD_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Converts the given datetime to human readable format."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param dateTime Datetime to be converted."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @return the given datetime in human readable format."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public static String prettyFormatDateTime(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return dateTime.format(PRETTY_FORMAT);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Converts the given datetime to standard format for disk storage."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param dateTime Datetime to be converted."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @return the given datetime in standard format for disk storage."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public static String standardFormatDateTime(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return dateTime.format(STANDARD_FORMAT);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiayushe": 32
    }
  },
  {
    "path": "src/main/java/duke/util/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.command.CommandEnum;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.command.TagCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.command.TodoCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " * Parser class, to handle various parsing in Duke application."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private static final DateTimeFormatter STANDARD_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Converts the input string to a Command object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param commandString Input string representing a command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @return a Command object corresponding to the input string."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @throws DukeException if the command is invalid."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public static Command parseCommand(String commandString) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        String[] commandArr \u003d commandString.split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        CommandEnum commandEnum;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            commandEnum \u003d CommandEnum.valueOf(commandArr[0].toUpperCase());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            throw new DukeException(\"I can\u0027t do it!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        switch (commandEnum) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        case BYE:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            if (commandArr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                throw new DukeException(\"Keyword missing!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            return new FindCommand(commandArr[1]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            if (commandArr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                throw new DukeException(\"Task number missing!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            return new DoneCommand(parseTaskNumber(commandArr[1]));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            if (commandArr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                throw new DukeException(\"Task number missing!\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            return new DeleteCommand(parseTaskNumber(commandArr[1]));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        case TAG:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            if (commandArr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                throw new DukeException(\"Tag description missing!\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            String[] tagInputArr \u003d parseTag(commandArr[1]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            return new TagCommand(parseTaskNumber(tagInputArr[0]), tagInputArr[1]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            if (commandArr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                throw new DukeException(\"Todo description missing!\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            return new TodoCommand(commandArr[1]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            if (commandArr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                throw new DukeException(\"Deadline description missing!\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            String[] deadlineInputArr \u003d parseDeadline(commandArr[1]);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            return new DeadlineCommand(deadlineInputArr[0], deadlineInputArr[1]);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            if (commandArr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                throw new DukeException(\"Event description missing!\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            String[] eventInputArr \u003d parseEvent(commandArr[1]);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            return new EventCommand(eventInputArr[0], eventInputArr[1]);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            throw new DukeException(\"I can\u0027t do it!\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Converts the input string to a DateTime object."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param dateTimeString Input string representing a datetime."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @return a DateTime object corresponding to the input string."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @throws DukeException if the datetime is invalid."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public static LocalDateTime parseDateTime(String dateTimeString) throws DukeException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            return LocalDateTime.parse(dateTimeString, STANDARD_FORMAT);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            throw new DukeException(\"Date Time format invalid!\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Parses the input string to an array of useful information."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param deadlineString Input string representing a deadline."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @return an array of useful information corresponding to the input string."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @throws DukeException if the string format is invalid."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private static String[] parseDeadline(String deadlineString) throws DukeException {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        String[] deadlineArr \u003d deadlineString.split(\" /by \");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        if (deadlineArr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            if (deadlineString.indexOf(\"/by\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                throw new DukeException(\"Deadline description format invalid!\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                throw new DukeException(\"Deadline due date missing!\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return deadlineArr;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Parses the input string to an array of useful information."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param eventString Input string representing a event."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @return an array of useful information corresponding to the input string."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @throws DukeException if the string format is invalid."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private static String[] parseEvent(String eventString) throws DukeException {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        String[] eventArr \u003d eventString.split(\" /at \");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        if (eventArr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            if (eventString.indexOf(\"/at\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                throw new DukeException(\"Event description format invalid!\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                throw new DukeException(\"Event timing missing!\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return eventArr;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Parses the input string to an array of useful information."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param tagString Input string representing a tag."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @return an array of useful information corresponding to the input string."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @throws DukeException if the string format is invalid."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private static String[] parseTag(String tagString) throws DukeException {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        String[] tagArr \u003d tagString.split(\" /as \");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        if (tagArr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            if (tagString.indexOf(\"/as\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                throw new DukeException(\"Tag description format invalid!\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                throw new DukeException(\"Tag name missing!\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return tagArr;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Parses the input string to an array of useful information."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param intString Input string representing a task number."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @return a task number corresponding to the input string."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @throws DukeException if the task number format is invalid."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private static int parseTaskNumber(String intString) throws DukeException {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        int result;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            result \u003d Integer.parseInt(intString);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            throw new DukeException(\"Task number format invalid!\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiayushe": 176
    }
  },
  {
    "path": "src/main/java/duke/util/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " * Parser class, to handle disk storage in Duke application."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiayushe"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Constructs a Storage object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param filePath File path for disk storage."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Initializes the file for disk storage."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    private void setup() throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            if (!this.file.exists()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                File directory \u003d new File(this.file.getParent());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                if (!directory.exists()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                    directory.mkdirs();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                this.file.createNewFile();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            throw new DukeException(\"Errors occurred while setting up database!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Loads saved tasks from disk storage."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @return an ArrayList of tasks corresponding to saved file in disk storage."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @throws DukeException if no file found in disk storage."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            Scanner sc \u003d new Scanner(this.file);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                String[] description \u003d sc.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                switch (description[0]) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                    assert description.length \u003d\u003d 3 || description.length \u003d\u003d 4 : \"Wrong todo task format stored.\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                    task \u003d new ToDo(description[2]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                    if (description.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                        task.addTag(description[3]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                    assert description.length \u003d\u003d 4 || description.length \u003d\u003d 5 : \"Wrong deadline task format stored.\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                    task \u003d new Deadline(description[2], description[3]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                    if (description.length \u003d\u003d 5) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                        task.addTag(description[4]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                    assert description.length \u003d\u003d 4 || description.length \u003d\u003d 5 : \"Wrong event task format stored.\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                    task \u003d new Event(description[2], description[3]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                    if (description.length \u003d\u003d 5) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                        task.addTag(description[4]);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                    throw new DukeException(\"Task description invalid!\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                assert description[1].equals(\"0\") || description[1].equals(\"1\") : \"Wrong task format stored.\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                if (description[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                taskList.add(task);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            sc.close();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            throw new DukeException(\"File not found!\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * Saves tasks in disk storage."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @param taskList ArrayList of tasks to be saved."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     * @throws DukeException if errors occurred due to IO exceptions."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    public void store(ArrayList\u003cTask\u003e taskList) throws DukeException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            this.setup();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            FileWriter fw \u003d new FileWriter(this.file);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            for (Task task : taskList) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                fw.write(task.toDataString() + \u0027\\n\u0027);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            throw new DukeException(\"Errors occurred while updating database!\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiayushe": 116
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003c?import javafx.scene.shape.Circle?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                \u003cFont name\u003d\"Courier New\" size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            \u003cclip\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                \u003cCircle centerX\u003d\"48.0\" centerY\u003d\"48.0\" radius\u003d\"48.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            \u003c/clip\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "jiayushe": 26
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"500.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"424.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"424.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"500.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"488.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "jiayushe": 19
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "class DukeTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiayushe": 4
    }
  },
  {
    "path": "src/test/java/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    void testDeadlineCreation() throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        //CHECKSTYLE.OFF: AvoidEscapedUnicodeCharactersCheck"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        assertEquals(\"[D][\\u2718] Rest (by: 1 Sep 2019 00:00)\", new Deadline(\"Rest\", \"01/09/2019 0000\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        //CHECKSTYLE.ON: AvoidEscapedUnicodeCharactersCheck"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    void testDeadlineDataString() throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        assertEquals(\"D | 0 | Rest | 01/09/2019 0000\", new Deadline(\"Rest\", \"01/09/2019 0000\").toDataString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiayushe": 19
    }
  },
  {
    "path": "src/test/java/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    void testEventCreation() throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        //CHECKSTYLE.OFF: AvoidEscapedUnicodeCharactersCheck"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        assertEquals(\"[E][\\u2718] Rest (at: 1 Sep 2019 00:00)\", new Event(\"Rest\", \"01/09/2019 0000\").toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        //CHECKSTYLE.ON: AvoidEscapedUnicodeCharactersCheck"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    void testEventDataString() throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        assertEquals(\"E | 0 | Rest | 01/09/2019 0000\", new Event(\"Rest\", \"01/09/2019 0000\").toDataString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiayushe": 20
    }
  },
  {
    "path": "src/test/java/duke/task/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "class ToDoTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    void testToDoCreation() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        //CHECKSTYLE.OFF: AvoidEscapedUnicodeCharactersCheck"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        assertEquals(\"[T][\\u2718] Rest\", new ToDo(\"Rest\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        //CHECKSTYLE.ON: AvoidEscapedUnicodeCharactersCheck"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    void testToDoDataString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "        assertEquals(\"T | 0 | Rest\", new ToDo(\"Rest\").toDataString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiayushe": 18
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e Hello! I\u0027m"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e  ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e What can I do for you?"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e Got it! I\u0027ve added this task:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e [T][✘] read lecture notes"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e Now you have 1 task in the list!"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e Got it! I\u0027ve added this task:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e [E][✘] attend lecture (at: Monday 8-10am)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e Now you have 2 tasks in the list!"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e Got it! I\u0027ve added this task:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e [D][✘] finish quiz (by: Sunday)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e Now you have 3 tasks in the list!"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e Here are the tasks in your list:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e 1.[T][✘] read lecture notes"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e 2.[E][✘] attend lecture (at: Monday 8-10am)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e 3.[D][✘] finish quiz (by: Sunday)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e [E][✓] attend lecture (at: Monday 8-10am)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e Here are the tasks in your list:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e 1.[T][✘] read lecture notes"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e 2.[E][✓] attend lecture (at: Monday 8-10am)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e 3.[D][✘] finish quiz (by: Sunday)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e Noted! I\u0027ve removed this task:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e [E][✓] attend lecture (at: Monday 8-10am)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e Now you have 2 tasks in the list!"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e Here are the tasks in your list:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e 1.[T][✘] read lecture notes"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e 2.[D][✘] finish quiz (by: Sunday)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e ☹ OOPS! Task number missing!"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e ☹ OOPS! Task number format invalid!"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e ☹ OOPS! Task number invalid!"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e ☹ OOPS! Task number missing!"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e ☹ OOPS! Task number format invalid!"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e ☹ OOPS! Task number invalid!"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e ☹ OOPS! Todo description missing!"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e ☹ OOPS! Deadline description missing!"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e ☹ OOPS! Deadline description format invalid!"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e ☹ OOPS! Deadline due date missing!"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e ☹ OOPS! Deadline due date missing!"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e ☹ OOPS! Event description missing!"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e ☹ OOPS! Event description format invalid!"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e ☹ OOPS! Event timing missing!"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e ☹ OOPS! Event timing missing!"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e ☹ OOPS! I can\u0027t do it!"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "\u003e Bye! Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "jiayushe": 49
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "todo read lecture notes"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "event attend lecture /at Monday 8-10am"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "deadline finish quiz /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "done"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "done a"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "done 100"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "delete"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "delete a"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "delete 100"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "todo"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "deadline /by Sunday"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "deadline finish quiz"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "deadline finish quiz /by"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "event"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "event /at Monday 8-10am"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "event attend lecture"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "event attend lecture /at"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "sleep"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "jiayushe": 25
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiayushe"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiayushe"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "jiayushe": 34
    }
  }
]
