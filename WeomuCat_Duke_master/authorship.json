[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "group \u0027weomucat.duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "version \u00270.1\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    mainClassName \u003d \"weomucat.duke.Duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "run {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    systemProperty \"file.encoding\", \"UTF-8\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "test {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 16,
      "-": 13
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "rootProject.name \u003d \u0027Duke\u0027"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 1
    }
  },
  {
    "path": "src/main/java/weomucat/duke/Controller.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.command.listener.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.UnknownCommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.ui.listener.UserInputListener;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class Controller implements UserInputListener {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate static final String COMMAND_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate static final String COMMAND_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate static final String COMMAND_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate static final String COMMAND_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate static final String COMMAND_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate static final String COMMAND_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate static final String COMMAND_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate HashMap\u003cString, Command\u003e commands;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate ArrayList\u003cAddTaskCommandListener\u003e addTaskCommandListeners;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate ArrayList\u003cDeleteTaskCommandListener\u003e deleteTaskCommandListeners;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate ArrayList\u003cDoneTaskCommandListener\u003e doneTaskCommandListeners;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate ArrayList\u003cListTaskCommandListener\u003e listTaskCommandListeners;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate ArrayList\u003cByeCommandListener\u003e byeCommandListeners;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic Controller() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.addTaskCommandListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.deleteTaskCommandListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.doneTaskCommandListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.listTaskCommandListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.byeCommandListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.commands \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.commands.put(COMMAND_DEADLINE, new DeadlineCommand() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t@Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tpublic void updateListeners(Task task) throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\tfor (AddTaskCommandListener listener : addTaskCommandListeners) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\t\tlistener.addTaskCommandUpdate(task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t});"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.commands.put(COMMAND_EVENT, new EventCommand() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t@Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tpublic void updateListeners(Task task) throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\tfor (AddTaskCommandListener listener : addTaskCommandListeners) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\t\tlistener.addTaskCommandUpdate(task);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t});"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.commands.put(COMMAND_TODO, new TodoCommand() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t@Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tpublic void updateListeners(Task task) throws DukeException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\tfor (AddTaskCommandListener listener : addTaskCommandListeners) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\t\tlistener.addTaskCommandUpdate(task);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t});"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.commands.put(COMMAND_DELETE, new DeleteCommand() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t@Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tpublic void updateListeners(int i) throws DukeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\tfor (DeleteTaskCommandListener listener : deleteTaskCommandListeners) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\t\tlistener.deleteTaskCommandUpdate(i);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t});"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.commands.put(COMMAND_DONE, new DoneCommand() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t@Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tpublic void updateListeners(int i) throws DukeException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\tfor (DoneTaskCommandListener listener : doneTaskCommandListeners) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\t\tlistener.doneTaskCommandUpdate(i);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t});"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.commands.put(COMMAND_LIST, new ListCommand() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t@Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tpublic void updateListeners() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\tfor (ListTaskCommandListener listener : listTaskCommandListeners) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\t\tlistener.listTaskCommandUpdate();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t});"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.commands.put(COMMAND_BYE, new ByeCommand() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t@Override"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tpublic void updateListeners() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\tfor (ByeCommandListener listener : byeCommandListeners) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\t\tlistener.byeCommandUpdate();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t});"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void newAddTaskCommandListener(AddTaskCommandListener listener) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.addTaskCommandListeners.add(listener);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void newDeleteTaskCommandListener(DeleteTaskCommandListener listener) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.deleteTaskCommandListeners.add(listener);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void newDoneTaskCommandListener(DoneTaskCommandListener listener) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.doneTaskCommandListeners.add(listener);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void newListTaskCommandListener(ListTaskCommandListener listener) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.listTaskCommandListeners.add(listener);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void newByeCommandListener(ByeCommandListener listener) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.byeCommandListeners.add(listener);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void userInputUpdate(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t// Initialize parser for this line of user input."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tParser parser \u003d new Parser(userInput);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t// Get the command of the user input."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tString commandString \u003d parser.getCommand();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t// Resolve the string command to a Command object."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tCommand command \u003d commands.get(commandString);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t// Command not known, throw an exception."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tif (command \u003d\u003d null) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tthrow new UnknownCommandException();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t// Get what parameters the command accepts."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tString[] parameterOptions \u003d command.getParameterOptions();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t// Parse the parameters from user input."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tHashMap\u003cString, String\u003e parameters \u003d parser.parseParameters(parameterOptions);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t// Set the parameters to the Command object."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tcommand.setParameters(parser.getBody(), parameters);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t// Finally, run the command."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tcommand.run();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 146
    }
  },
  {
    "path": "src/main/java/weomucat/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.command.listener.ByeCommandListener;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.StorageException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.storage.TaskListStorage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class Duke implements ByeCommandListener {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate static final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t+ \"\t|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t+ \"\t| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t+ \"\t| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t+ \"\t|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic static final String DATETIME_PARSE_PATTERN \u003d \"dd/MM/yy HHmm\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic static final String DATETIME_FORMAT_PATTERN \u003d \"dd MMMM yyyy, hh:mma, O\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate boolean running;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate Controller controller;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate TaskList taskList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate TaskListStorage storage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate Ui ui;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic static void main(String[] args) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tnew Duke(\"data/tasks\").run();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic Duke(String taskListPath) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.controller \u003d new Controller();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.storage \u003d new TaskListStorage(taskListPath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t// Read from user input from stdin."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.ui \u003d new Ui(System.in);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate void run() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t// Try to initialize TaskList from disk if database exists."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tif (this.storage.exists()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\ttry {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\tthis.taskList \u003d new TaskList(this.storage.load());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\tthis.ui.displayMessage(\"Loaded tasks from disk.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t} catch (StorageException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\tthis.ui.displayError(e.getMessage());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t// Set up event listeners"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.ui.newUserInputListener(this.controller);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.controller.newAddTaskCommandListener(this.taskList);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.controller.newDeleteTaskCommandListener(this.taskList);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.controller.newDoneTaskCommandListener(this.taskList);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.controller.newListTaskCommandListener(this.taskList);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.controller.newByeCommandListener(this);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.taskList.newAddTaskListener(this.storage);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.taskList.newDeleteTaskListener(this.storage);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.taskList.newDoneTaskListener(this.storage);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.taskList.newAddTaskListener(this.ui);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.taskList.newDeleteTaskListener(this.ui);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.taskList.newDoneTaskListener(this.ui);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.taskList.newListTaskListener(this.ui);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t// Greet user"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.ui.displayMessage(LOGO, \"Hello! I\u0027m Duke\", \"What can I do for you?\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.running \u003d true;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\twhile (this.running) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\ttry {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\t// Handle next user input"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\tthis.ui.nextUserInput();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t} catch (DukeException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\tthis.ui.displayError(e.getMessage());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t// Farewell user"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.ui.displayMessage(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void byeCommandUpdate() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.running \u003d false;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 85,
      "-": 5
    }
  },
  {
    "path": "src/main/java/weomucat/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate String command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate String body;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate String[] tokens;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic Parser(String input) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t// Split input by whitespace."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.tokens \u003d input.trim().split(\" \");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tLinkedList\u003cString\u003e tokens \u003d new LinkedList\u003c\u003e(Arrays.asList(this.tokens));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.command \u003d tokens.pollFirst();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.body \u003d String.join(\" \", tokens).trim();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic String getCommand() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\treturn command;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic String getBody() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\treturn body;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic HashMap\u003cString, String\u003e parseParameters(String... parameters) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tLinkedList\u003cString\u003e tokens \u003d new LinkedList\u003c\u003e(Arrays.asList(this.tokens));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t// Remove command from tokens."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\ttokens.pollFirst();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t// Put parameters into a HashSet for O(1) lookup."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tHashSet\u003cString\u003e lookup \u003d new HashSet\u003c\u003e(Arrays.asList(parameters));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tHashMap\u003cString, String\u003e result \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t// Initialize result parameters to empty string."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tfor (String p : lookup) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tresult.put(p, \"\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tLinkedList\u003cString\u003e parameter \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\twhile (!tokens.isEmpty()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tString token \u003d tokens.pollLast();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t// If token is a parameter, put parameter in result."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tif (lookup.contains(token)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\tresult.put(token, String.join(\" \", parameter).trim());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\t// Clear for next parameter."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\tparameter.clear();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t} else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\t// Append token to the parameter."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\tparameter.addFirst(token);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t// Last parameter is body."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.body \u003d String.join(\" \", parameter).trim();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\treturn result;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 66
    }
  },
  {
    "path": "src/main/java/weomucat/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public abstract class ByeCommand implements Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic String[] getParameterOptions() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\treturn new String[0];"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void setParameters(String body, HashMap\u003cString, String\u003e parameters) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void run() throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tupdateListeners();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic abstract void updateListeners();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 24
    }
  },
  {
    "path": "src/main/java/weomucat/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tString PARAMETER_AT \u003d \"/at\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tString PARAMETER_BY \u003d \"/by\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tString[] getParameterOptions();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tvoid setParameters(String body, HashMap\u003cString, String\u003e parameters) throws DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tvoid run() throws DukeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 16
    }
  },
  {
    "path": "src/main/java/weomucat/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.DeadlineTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public abstract class DeadlineCommand implements Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate String by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic String[] getParameterOptions() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\treturn new String[]{PARAMETER_BY};"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void setParameters(String body, HashMap\u003cString, String\u003e parameters) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.description \u003d body;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.by \u003d parameters.get(PARAMETER_BY);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void run() throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tDeadlineTask task \u003d new DeadlineTask(this.description, this.by);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tupdateListeners(task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic abstract void updateListeners(Task task) throws DukeException;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 30
    }
  },
  {
    "path": "src/main/java/weomucat/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.InvalidParameterException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public abstract class DeleteCommand implements Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate int index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic String[] getParameterOptions() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\treturn new String[0];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void setParameters(String body, HashMap\u003cString, String\u003e parameters) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t// Get index of task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tthis.index \u003d Integer.parseInt(body) - 1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t} catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tthrow new InvalidParameterException(\"The index is not a valid number.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void run() throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tupdateListeners(this.index);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic abstract void updateListeners(int i) throws DukeException;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 32
    }
  },
  {
    "path": "src/main/java/weomucat/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.InvalidParameterException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public abstract class DoneCommand implements Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate int index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic String[] getParameterOptions() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\treturn new String[0];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void setParameters(String body, HashMap\u003cString, String\u003e parameters) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t// Get index of task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tthis.index \u003d Integer.parseInt(body) - 1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t} catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tthrow new InvalidParameterException(\"The index is not a valid number.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void run() throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tupdateListeners(this.index);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic abstract void updateListeners(int i) throws DukeException;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 32
    }
  },
  {
    "path": "src/main/java/weomucat/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.EventTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public abstract class EventCommand implements Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate String at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic String[] getParameterOptions() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\treturn new String[]{PARAMETER_AT};"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void setParameters(String body, HashMap\u003cString, String\u003e parameters) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.description \u003d body;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.at \u003d parameters.get(PARAMETER_AT);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void run() throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tEventTask task \u003d new EventTask(this.description, this.at);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tupdateListeners(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic abstract void updateListeners(Task task) throws DukeException;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 31
    }
  },
  {
    "path": "src/main/java/weomucat/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public abstract class ListCommand implements Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic String[] getParameterOptions() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\treturn new String[0];"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void setParameters(String body, HashMap\u003cString, String\u003e parameters) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void run() throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tupdateListeners();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic abstract void updateListeners() throws DukeException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 24
    }
  },
  {
    "path": "src/main/java/weomucat/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.TodoTask;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public abstract class TodoCommand implements Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic String[] getParameterOptions() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\treturn new String[0];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void setParameters(String body, HashMap\u003cString, String\u003e parameters) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.description \u003d body;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void run() throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tTodoTask task \u003d new TodoTask(this.description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tupdateListeners(task);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic abstract void updateListeners(Task task) throws DukeException;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 29
    }
  },
  {
    "path": "src/main/java/weomucat/duke/command/listener/AddTaskCommandListener.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.command.listener;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public interface AddTaskCommandListener {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tvoid addTaskCommandUpdate(Task task) throws DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 8
    }
  },
  {
    "path": "src/main/java/weomucat/duke/command/listener/ByeCommandListener.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.command.listener;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public interface ByeCommandListener {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tvoid byeCommandUpdate();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 5
    }
  },
  {
    "path": "src/main/java/weomucat/duke/command/listener/DeleteTaskCommandListener.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.command.listener;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public interface DeleteTaskCommandListener {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tvoid deleteTaskCommandUpdate(int i) throws DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 7
    }
  },
  {
    "path": "src/main/java/weomucat/duke/command/listener/DoneTaskCommandListener.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.command.listener;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public interface DoneTaskCommandListener {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tvoid doneTaskCommandUpdate(int i) throws DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 7
    }
  },
  {
    "path": "src/main/java/weomucat/duke/command/listener/ListTaskCommandListener.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.command.listener;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public interface ListTaskCommandListener {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tvoid listTaskCommandUpdate();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 5
    }
  },
  {
    "path": "src/main/java/weomucat/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tsuper(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 7
    }
  },
  {
    "path": "src/main/java/weomucat/duke/exception/InvalidParameterException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class InvalidParameterException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic InvalidParameterException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tsuper(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 7
    }
  },
  {
    "path": "src/main/java/weomucat/duke/exception/InvalidTaskIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class InvalidTaskIndexException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic InvalidTaskIndexException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tsuper(\"That is not a valid index of a task.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 7
    }
  },
  {
    "path": "src/main/java/weomucat/duke/exception/StorageException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class StorageException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic StorageException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tsuper(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 7
    }
  },
  {
    "path": "src/main/java/weomucat/duke/exception/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class UnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic UnknownCommandException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tsuper(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 7
    }
  },
  {
    "path": "src/main/java/weomucat/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.StorageException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public abstract class Storage\u003cT\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprotected String path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic Storage(String path) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.path \u003d path;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic boolean exists() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\treturn new File(path).exists();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tabstract void save(T t) throws StorageException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tabstract T load() throws StorageException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 21
    }
  },
  {
    "path": "src/main/java/weomucat/duke/storage/TaskListStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.StorageException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.TaskListTasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.listener.AddTaskListener;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.listener.DeleteTaskListener;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.listener.DoneTaskListener;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class TaskListStorage extends Storage\u003cTaskListTasks\u003e implements AddTaskListener, DeleteTaskListener, DoneTaskListener {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic TaskListStorage(String path) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tsuper(path);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void save(TaskListTasks tasks) throws StorageException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tFileOutputStream fileOutputStream \u003d new FileOutputStream(this.path);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tObjectOutputStream objectOutputStream \u003d new ObjectOutputStream(fileOutputStream);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t// Serialize tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tobjectOutputStream.writeObject(tasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tobjectOutputStream.close();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tfileOutputStream.close();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t} catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tthrow new StorageException(String.format(\"I cannot create a file at \u0027%s\u0027\", this.path));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t} catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tthrow new StorageException(\"An I/O error occurred.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic TaskListTasks load() throws StorageException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tFileInputStream fileInputStream \u003d new FileInputStream(this.path);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tObjectInputStream objectInputStream \u003d new ObjectInputStream(fileInputStream);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t// Deserialize tasks"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tTaskListTasks tasks \u003d (TaskListTasks) objectInputStream.readObject();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tobjectInputStream.close();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tfileInputStream.close();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\treturn tasks;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t} catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tthrow new StorageException(String.format(\"I cannot read a file at \u0027%s\u0027\", this.path));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t} catch (ClassNotFoundException | ClassCastException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tthrow new StorageException(\"I do not know how to deserialize this file.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t} catch (IOException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tthrow new StorageException(\"An I/O error occurred.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void addTaskUpdate(TaskListTasks tasks, Task task) throws DukeException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tsave(tasks);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void deleteTaskUpdate(TaskListTasks tasks, Task task) throws DukeException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tsave(tasks);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void doneTaskUpdate(TaskListTasks tasks, Task task) throws DukeException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tsave(tasks);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 72
    }
  },
  {
    "path": "src/main/java/weomucat/duke/task/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.InvalidParameterException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.ZonedDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static weomucat.duke.Duke.DATETIME_FORMAT_PATTERN;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static weomucat.duke.Duke.DATETIME_PARSE_PATTERN;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate ZonedDateTime by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic DeadlineTask(String description, String by) throws InvalidParameterException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tsuper(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tif (description.equals(\"\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tthrow new InvalidParameterException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tif (by.equals(\"\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tthrow new InvalidParameterException(\"The date of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t// Parse \u0027by\u0027 into a ZonedDateTime object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tDateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(DATETIME_PARSE_PATTERN)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\t\t.withZone(ZoneId.systemDefault());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tthis.by \u003d ZonedDateTime.parse(by, dateTimeFormatter);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t} catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tthrow new InvalidParameterException(String.format(\"I do not understand the date. Please enter in \u0027%s\u0027 format.\", DATETIME_PARSE_PATTERN));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t// Format ZonedDateTime object into a String."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tDateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(DATETIME_FORMAT_PATTERN);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\treturn String.format(\"[D]%s (by: %s)\", super.toString(), this.by.format(dateTimeFormatter));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 43
    }
  },
  {
    "path": "src/main/java/weomucat/duke/task/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.InvalidParameterException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate String at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic EventTask(String description, String at) throws InvalidParameterException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tsuper(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tif (description.equals(\"\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tthrow new InvalidParameterException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tif (at.equals(\"\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tthrow new InvalidParameterException(\"The location of an event cannot be empty.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tthis.at \u003d at;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\treturn String.format(\"[E]%s (at: %s)\", super.toString(), this.at);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 26
    }
  },
  {
    "path": "src/main/java/weomucat/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public abstract class Task implements Serializable {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate boolean done;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void setDone(boolean done) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.done \u003d done;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tString done_icon \u003d this.done ? \"[\\u2713]\" : \"[\\u2718]\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\treturn String.format(\"%s %s\", done_icon, this.description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 22
    }
  },
  {
    "path": "src/main/java/weomucat/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.command.listener.AddTaskCommandListener;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.command.listener.DeleteTaskCommandListener;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.command.listener.DoneTaskCommandListener;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.command.listener.ListTaskCommandListener;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.InvalidTaskIndexException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.listener.AddTaskListener;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.listener.DeleteTaskListener;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.listener.DoneTaskListener;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.listener.ListTaskListener;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class TaskList implements AddTaskCommandListener, DeleteTaskCommandListener, DoneTaskCommandListener, ListTaskCommandListener {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate TaskListTasks tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate ArrayList\u003cAddTaskListener\u003e addTaskListeners;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate ArrayList\u003cDeleteTaskListener\u003e deleteTaskListeners;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate ArrayList\u003cDoneTaskListener\u003e doneTaskListeners;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate ArrayList\u003cListTaskListener\u003e listTaskListeners;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic TaskList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.tasks \u003d new TaskListTasks();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tinit();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic TaskList(TaskListTasks tasks) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.tasks \u003d tasks;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tinit();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate void init() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.addTaskListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.deleteTaskListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.doneTaskListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.listTaskListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void newAddTaskListener(AddTaskListener listener) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.addTaskListeners.add(listener);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void newDeleteTaskListener(DeleteTaskListener listener) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.deleteTaskListeners.add(listener);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void newDoneTaskListener(DoneTaskListener listener) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.doneTaskListeners.add(listener);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void newListTaskListener(ListTaskListener listener) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.listTaskListeners.add(listener);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void addTask(Task task) throws DukeException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t// Add task to Tasks"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.tasks.add(task);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t// Update AddTaskListeners"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tfor (AddTaskListener listener : addTaskListeners) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tlistener.addTaskUpdate(this.tasks, task);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void deleteTask(int i) throws DukeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t// Get task from tasks"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tTask task \u003d this.tasks.get(i);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t// Remove task"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tthis.tasks.remove(i);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t// Update DeleteTaskListeners"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tfor (DeleteTaskListener listener : deleteTaskListeners) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\tlistener.deleteTaskUpdate(this.tasks, task);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t} catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tthrow new InvalidTaskIndexException();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void doneTask(int i) throws DukeException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t// Get task from tasks"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tTask task \u003d this.tasks.get(i);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t// Set task to done"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\ttask.setDone(true);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t// Update DoneTaskListeners"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tfor (DoneTaskListener listener : doneTaskListeners) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\tlistener.doneTaskUpdate(this.tasks, task);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t} catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tthrow new InvalidTaskIndexException();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void listTask() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t// Update ListTaskListeners"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tfor (ListTaskListener listener : listTaskListeners) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tlistener.listTaskUpdate(this.tasks);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void addTaskCommandUpdate(Task task) throws DukeException {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\taddTask(task);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void deleteTaskCommandUpdate(int i) throws DukeException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tdeleteTask(i);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void doneTaskCommandUpdate(int i) throws DukeException {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tdoneTask(i);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void listTaskCommandUpdate() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tlistTask();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 126
    }
  },
  {
    "path": "src/main/java/weomucat/duke/task/TaskListTasks.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class TaskListTasks extends ArrayList\u003cTask\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 7
    }
  },
  {
    "path": "src/main/java/weomucat/duke/task/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.InvalidParameterException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class TodoTask extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic TodoTask(String description) throws InvalidParameterException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tsuper(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tif (description.equals(\"\")) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tthrow new InvalidParameterException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\treturn String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 18
    }
  },
  {
    "path": "src/main/java/weomucat/duke/task/listener/AddTaskListener.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.task.listener;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.TaskListTasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public interface AddTaskListener {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tvoid addTaskUpdate(TaskListTasks tasks, Task task) throws DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 9
    }
  },
  {
    "path": "src/main/java/weomucat/duke/task/listener/DeleteTaskListener.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.task.listener;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.TaskListTasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public interface DeleteTaskListener {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tvoid deleteTaskUpdate(TaskListTasks tasks, Task task) throws DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 9
    }
  },
  {
    "path": "src/main/java/weomucat/duke/task/listener/DoneTaskListener.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.task.listener;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.TaskListTasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public interface DoneTaskListener {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tvoid doneTaskUpdate(TaskListTasks tasks, Task task) throws DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 9
    }
  },
  {
    "path": "src/main/java/weomucat/duke/task/listener/ListTaskListener.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.task.listener;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.TaskListTasks;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public interface ListTaskListener {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tvoid listTaskUpdate(TaskListTasks tasks);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 7
    }
  },
  {
    "path": "src/main/java/weomucat/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.TaskListTasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.listener.AddTaskListener;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.listener.DeleteTaskListener;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.listener.DoneTaskListener;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.listener.ListTaskListener;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.ui.listener.UserInputListener;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class Ui implements AddTaskListener, DeleteTaskListener, DoneTaskListener, ListTaskListener {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate static final String SAY_INDENTATION \u003d \"\\t\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate static final String SAY_HORIZONTAL_LINE \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate ArrayList\u003cUserInputListener\u003e userInputListeners;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate Scanner scanner;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic Ui(InputStream inputStream) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.userInputListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.scanner \u003d new Scanner(inputStream);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void newUserInputListener(UserInputListener listener) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.userInputListeners.add(listener);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void nextUserInput() throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tString userInput \u003d this.scanner.nextLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tfor (UserInputListener listener : userInputListeners) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tlistener.userInputUpdate(userInput);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void displayMessage(String... lines) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tSystem.out.println(SAY_INDENTATION + SAY_HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tfor (String line : lines) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tSystem.out.println(SAY_INDENTATION + line);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tSystem.out.println(SAY_INDENTATION + SAY_HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void displayError(String... lines) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tlines[0] \u003d \"\\u2639 OOPS!!! \" + lines[0];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tdisplayMessage(lines);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void addTaskUpdate(TaskListTasks tasks, Task task) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tdisplayMessage(\"Got it. I\u0027ve added this task:\","
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\ttask.toString(),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\tString.format(\"Now you have %d task(s) in the list.\", tasks.size()));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void deleteTaskUpdate(TaskListTasks tasks, Task task) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tdisplayMessage(\"Noted. I\u0027ve removed this task:\","
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\ttask.toString(),"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\tString.format(\"Now you have %d task(s) in the list.\", tasks.size()));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void doneTaskUpdate(TaskListTasks tasks, Task task) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tdisplayMessage(\"Nice! I\u0027ve marked this task as done:\", task.toString());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void listTaskUpdate(TaskListTasks tasks) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tArrayList\u003cString\u003e out \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tout.add(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tfor (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t// Get task from tasks"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tTask task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t// Format task with no. in front"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tout.add(String.format(\"%d. %s\", i + 1, task));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tdisplayMessage(out.toArray(new String[0]));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 86
    }
  },
  {
    "path": "src/main/java/weomucat/duke/ui/listener/UserInputListener.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.ui.listener;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public interface UserInputListener {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tvoid userInputUpdate(String userInput) throws DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 7
    }
  },
  {
    "path": "src/test/java/weomucat/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void commandShouldBeEmptyString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tString[] tests \u003d {\"\", \" \", \"  \", \"   \"};"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tfor (String test : tests) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tParser parser \u003d new Parser(test);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tString command \u003d parser.getCommand();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tassertEquals(\"\", command, formatMessage(test));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void commandShouldBeOneWord() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tString[] tests \u003d {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\t\"todo\", \" todo \", \"  todo  \", \"   todo   \","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\t\"todo one\", \" todo one \", \"  todo  one  \", \"   todo   one   \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t};"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tfor (String test : tests) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tParser parser \u003d new Parser(test);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tString command \u003d parser.getCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tassertEquals(\"todo\", command, formatMessage(test));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void parametersShouldBeEmptyString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tString[] tests \u003d {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\t\"event\", \" event \", \"  event  \", \"   event   \","
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\t\"event /from /to\", \" event /from /to \", \"  event  /from  /to  \", \"   event   /from   /to   \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t};"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tfor (String test : tests) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tParser parser \u003d new Parser(test);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tString command \u003d parser.getCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tHashMap\u003cString, String\u003e parameters \u003d parser.parseParameters(\"/from\", \"/to\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tassertEquals(\"event\", command, formatMessage(test));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tassertEquals(\"\", parser.getBody(), formatMessage(test));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tassertEquals(\"\", parameters.get(\"/from\"), formatMessage(test));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tassertEquals(\"\", parameters.get(\"/to\"), formatMessage(test));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void parametersShouldBeOneWord() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tString[] tests \u003d {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\t\"todo one /from two /to three\", \" todo one /from two /to three \", \"  todo  one  /from  two  /to  three  \", \"   todo   one   /from   two   /to   three   \""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t};"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tfor (String test : tests) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tParser parser \u003d new Parser(test);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tString command \u003d parser.getCommand();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tHashMap\u003cString, String\u003e parameters \u003d parser.parseParameters(\"/from\", \"/to\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tassertEquals(\"todo\", command, formatMessage(test));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tassertEquals(\"one\", parser.getBody(), formatMessage(test));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tassertEquals(\"two\", parameters.get(\"/from\"), formatMessage(test));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tassertEquals(\"three\", parameters.get(\"/to\"), formatMessage(test));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void parametersShouldBeWords() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tString[] tests \u003d {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\t\"todo one two three /from four five six /to seven eight nine\","
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\t\" todo one two three /from four five six /to seven eight nine \","
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\t\"  todo  one two three  /from  four five six  /to  seven eight nine  \","
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\t\"   todo   one two three   /from   four five six   /to   seven eight nine   \""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t};"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tfor (String test : tests) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tParser parser \u003d new Parser(test);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tString command \u003d parser.getCommand();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tHashMap\u003cString, String\u003e parameters \u003d parser.parseParameters(\"/from\", \"/to\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tassertEquals(\"todo\", command, formatMessage(test));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tassertEquals(\"one two three\", parser.getBody(), formatMessage(test));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tassertEquals(\"four five six\", parameters.get(\"/from\"), formatMessage(test));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tassertEquals(\"seven eight nine\", parameters.get(\"/to\"), formatMessage(test));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void parametersShouldPreserveSpaces() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tString[] tests \u003d {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\t\"todo one   two   three /from four   five   six /to seven   eight   nine\","
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\t\" todo one   two   three /from four   five   six /to seven   eight   nine \","
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\t\"  todo  one   two   three  /from  four   five   six  /to  seven   eight   nine  \","
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\t\"   todo   one   two   three   /from   four   five   six   /to   seven   eight   nine   \""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t};"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tfor (String test : tests) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tParser parser \u003d new Parser(test);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tString command \u003d parser.getCommand();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tHashMap\u003cString, String\u003e parameters \u003d parser.parseParameters(\"/from\", \"/to\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tassertEquals(\"todo\", command, formatMessage(test));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tassertEquals(\"one   two   three\", parser.getBody(), formatMessage(test));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tassertEquals(\"four   five   six\", parameters.get(\"/from\"), formatMessage(test));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tassertEquals(\"seven   eight   nine\", parameters.get(\"/to\"), formatMessage(test));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void parametersOrderDoesNotMatter() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tString[] tests \u003d {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\t\"todo one two /a three four /b five six /c seven eight\","
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\t\"todo one two /b five six /c seven eight /a three four\","
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\t\t\"todo one two /c seven eight /a three four /b five six\","
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t};"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tfor (String test : tests) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tParser parser \u003d new Parser(test);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tString command \u003d parser.getCommand();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tHashMap\u003cString, String\u003e parameters \u003d parser.parseParameters(\"/a\", \"/b\", \"/c\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tassertEquals(\"todo\", command, formatMessage(test));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tassertEquals(\"one two\", parser.getBody(), formatMessage(test));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tassertEquals(\"three four\", parameters.get(\"/a\"), formatMessage(test));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tassertEquals(\"five six\", parameters.get(\"/b\"), formatMessage(test));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tassertEquals(\"seven eight\", parameters.get(\"/c\"), formatMessage(test));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate String formatMessage(String input) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\treturn String.format(\"Input: \u0027%s\u0027\", input);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 140
    }
  },
  {
    "path": "src/test/java/weomucat/duke/task/DeadlineTaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.InvalidParameterException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static weomucat.duke.Duke.DATETIME_PARSE_PATTERN;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class DeadlineTaskTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void descriptionShouldNotBeEmptyString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tDateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(DATETIME_PARSE_PATTERN);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tString by \u003d LocalDateTime.now().format(dateTimeFormatter);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertThrows(InvalidParameterException.class, () -\u003e new DeadlineTask(\"\", by), formatMessage(\"\", by));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void byShouldBeProperlyFormatted() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tString[] descriptions \u003d {\"one\", \"one two\", \"one two three\"};"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tfor (String description : descriptions) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tassertThrows(InvalidParameterException.class, () -\u003e new DeadlineTask(description, \"\"), formatMessage(description, \"\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void validUsage() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tString[] descriptions \u003d {\"one\", \"one two\", \"one two three\"};"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tDateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(DATETIME_PARSE_PATTERN);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tfor (String description : descriptions) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tString by \u003d LocalDateTime.now().format(dateTimeFormatter);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tassertDoesNotThrow(() -\u003e new DeadlineTask(description, by), formatMessage(description, by));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate String formatMessage(String description, String by) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\treturn String.format(\"Input: new DeadlineTask(\u0027%s\u0027,\u0027%s\u0027)\", description, by);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 45
    }
  },
  {
    "path": "src/test/java/weomucat/duke/task/EventTaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.InvalidParameterException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static weomucat.duke.Duke.DATETIME_PARSE_PATTERN;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class EventTaskTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void descriptionShouldNotBeEmptyString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tString[] locations \u003d {\"one\", \"one two\", \"one two three\"};"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tfor (String location : locations) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tassertThrows(InvalidParameterException.class, () -\u003e new EventTask(\"\", location), formatMessage(\"\", location));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void atShouldNotBeEmptyString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tString[] descriptions \u003d {\"one\", \"one two\", \"one two three\"};"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tfor (String description : descriptions) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tassertThrows(InvalidParameterException.class, () -\u003e new EventTask(description, \"\"), formatMessage(description, \"\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void validUsage() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tString[] descriptions \u003d {\"one\", \"one two\", \"one two three\"};"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tString[] locations \u003d {\"four\", \"four five\", \"four five six\"};"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tfor (int i \u003d 0; i \u003c descriptions.length; i++) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tString description \u003d descriptions[i];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tString location \u003d locations[i];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tassertDoesNotThrow(() -\u003e new EventTask(description, location), formatMessage(description, location));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate String formatMessage(String description, String at) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\treturn String.format(\"Input: new EventTask(\u0027%s\u0027,\u0027%s\u0027)\", description, at);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 47
    }
  },
  {
    "path": "src/test/java/weomucat/duke/task/StubTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class StubTask extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic StubTask(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tsuper(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 7
    }
  },
  {
    "path": "src/test/java/weomucat/duke/task/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.InvalidTaskIndexException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.listener.StubAddTaskListener;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.listener.StubDeleteTaskListener;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void deleteTaskShouldNotBeInvalidIndex() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tTaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertThrows(InvalidTaskIndexException.class, () -\u003e taskList.deleteTask(0));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertDoesNotThrow(() -\u003e taskList.addTask(new StubTask(\"one\")));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertThrows(InvalidTaskIndexException.class, () -\u003e taskList.deleteTask(-1));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertThrows(InvalidTaskIndexException.class, () -\u003e taskList.deleteTask(1));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertDoesNotThrow(() -\u003e taskList.addTask(new StubTask(\"two\")));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertThrows(InvalidTaskIndexException.class, () -\u003e taskList.deleteTask(-1));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertThrows(InvalidTaskIndexException.class, () -\u003e taskList.deleteTask(2));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertDoesNotThrow(() -\u003e taskList.addTask(new StubTask(\"three\")));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertThrows(InvalidTaskIndexException.class, () -\u003e taskList.deleteTask(-1));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertThrows(InvalidTaskIndexException.class, () -\u003e taskList.deleteTask(3));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void doneTaskShouldNotBeInvalidIndex() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tTaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertThrows(InvalidTaskIndexException.class, () -\u003e taskList.doneTask(0));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertDoesNotThrow(() -\u003e taskList.addTask(new StubTask(\"one\")));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertThrows(InvalidTaskIndexException.class, () -\u003e taskList.doneTask(-1));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertThrows(InvalidTaskIndexException.class, () -\u003e taskList.doneTask(1));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertDoesNotThrow(() -\u003e taskList.addTask(new StubTask(\"two\")));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertThrows(InvalidTaskIndexException.class, () -\u003e taskList.doneTask(-1));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertThrows(InvalidTaskIndexException.class, () -\u003e taskList.doneTask(2));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertDoesNotThrow(() -\u003e taskList.addTask(new StubTask(\"three\")));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertThrows(InvalidTaskIndexException.class, () -\u003e taskList.doneTask(-1));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertThrows(InvalidTaskIndexException.class, () -\u003e taskList.doneTask(3));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void validUsage() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tStubTask taskOne \u003d new StubTask(\"one\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tStubTask taskTwo \u003d new StubTask(\"two\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tStubTask taskThree \u003d new StubTask(\"three\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tTaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tStubAddTaskListener addTaskListener \u003d new StubAddTaskListener();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tStubDeleteTaskListener deleteTaskListener \u003d new StubDeleteTaskListener();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t// Initialize Listeners"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\ttaskList.newAddTaskListener(addTaskListener);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\ttaskList.newDeleteTaskListener(deleteTaskListener);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t/* Add Tasks */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t// Expect 1 task."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertDoesNotThrow(() -\u003e taskList.addTask(taskOne));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertEquals(1, addTaskListener.getTasks().size());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t// Validate that the tasks are correct"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertEquals(taskOne, addTaskListener.getTask());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertTrue(addTaskListener.getTasks().contains(taskOne));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t// Expect 2 tasks."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertDoesNotThrow(() -\u003e taskList.addTask(taskTwo));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertEquals(2, addTaskListener.getTasks().size());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t// Validate that the tasks are correct"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertEquals(taskTwo, addTaskListener.getTask());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertTrue(addTaskListener.getTasks().contains(taskOne));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertTrue(addTaskListener.getTasks().contains(taskTwo));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t// Expect 3 tasks."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertDoesNotThrow(() -\u003e taskList.addTask(taskThree));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertEquals(3, addTaskListener.getTasks().size());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t// Validate that the tasks are correct"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertEquals(taskThree, addTaskListener.getTask());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertTrue(addTaskListener.getTasks().contains(taskOne));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertTrue(addTaskListener.getTasks().contains(taskTwo));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertTrue(addTaskListener.getTasks().contains(taskThree));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t/* Delete Tasks */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t// Expect 2 tasks."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertDoesNotThrow(() -\u003e taskList.deleteTask(0));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertEquals(2, addTaskListener.getTasks().size());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t// Validate that the tasks are correct"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertEquals(taskOne, deleteTaskListener.getTask());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertTrue(deleteTaskListener.getTasks().contains(taskTwo));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertTrue(deleteTaskListener.getTasks().contains(taskThree));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t// Expect 1 task."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertDoesNotThrow(() -\u003e taskList.deleteTask(0));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertEquals(1, addTaskListener.getTasks().size());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t// Validate that the tasks are correct"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertEquals(taskTwo, deleteTaskListener.getTask());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertTrue(deleteTaskListener.getTasks().contains(taskThree));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t// Expect 0 tasks."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertDoesNotThrow(() -\u003e taskList.deleteTask(0));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertEquals(0, addTaskListener.getTasks().size());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t// Validate that the tasks are correct"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertEquals(taskThree, deleteTaskListener.getTask());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 114
    }
  },
  {
    "path": "src/test/java/weomucat/duke/task/TodoTaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.InvalidParameterException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class TodoTaskTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void descriptionShouldNotBeEmptyString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tassertThrows(InvalidParameterException.class, () -\u003e new TodoTask(\"\"), formatMessage(\"\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void validUsage() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tString[] descriptions \u003d {\"one\", \"one two\", \"one two three\"};"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tfor (String description : descriptions) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t\tassertDoesNotThrow(() -\u003e new TodoTask(description), formatMessage(description));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate String formatMessage(String description) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\treturn String.format(\"Input: new TodoTask(\u0027%s\u0027)\", description);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 27
    }
  },
  {
    "path": "src/test/java/weomucat/duke/task/listener/StubAddTaskListener.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.task.listener;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.TaskListTasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.listener.AddTaskListener;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class StubAddTaskListener implements AddTaskListener {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate Task task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate TaskListTasks tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void addTaskUpdate(TaskListTasks tasks, Task task) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.task \u003d task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.tasks \u003d tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic Task getTask() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\treturn this.task;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic TaskListTasks getTasks() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\treturn this.tasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 25
    }
  },
  {
    "path": "src/test/java/weomucat/duke/task/listener/StubDeleteTaskListener.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package weomucat.duke.task.listener;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import weomucat.duke.task.TaskListTasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class StubDeleteTaskListener implements DeleteTaskListener {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate Task task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tprivate TaskListTasks tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic void deleteTaskUpdate(TaskListTasks tasks, Task task) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.task \u003d task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\tthis.tasks \u003d tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic Task getTask() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\treturn task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\tpublic TaskListTasks getTasks() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t\treturn tasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 24
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "deadline return book /by 27/08/19 2000"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "event project meeting /at School"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 15
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "REM create \\build\\text-ui-test directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "if not exist ..\\build\\text-ui-test mkdir ..\\build\\text-ui-test"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\build\\text-ui-test ..\\src\\main\\java\\weomucat\\duke\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\techo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\texit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "java -classpath ..\\build\\text-ui-test -Dfile.encoding\u003dUTF-8 weomucat.duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 21
    }
  }
]
