[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    archiveBaseName \u003d \u0027duke\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    archiveVersion \u003d \u00270.1\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "test {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    mainClassName \u003d \u0027Launcher\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 15,
      "weihaw08": 28
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "-": 83,
      "weihaw08": 17
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private final Circle clip \u003d new Circle(47, 50, 45);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        displayPicture.setClip(clip);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * Helps to create the dialog box for the user."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param text the text that has been entered by the user"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param img the image that represents the user profile picture"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @return a {@code DialogBox} object containing the text and the image"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * Helps to create the dialog box for Duke."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param text the text reply that is going to be displayed on the GUI"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param img  the image that is going to be displayed on the GUI"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @return a {@code DialogBox} object containing the text and the image"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weihaw08": 76
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.exception.InvalidTimeAndDateException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.exception.WrongInstructionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.functionality.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.functionality.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.functionality.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.functionality.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        this(\"./data/tasks.txt\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private Duke(String filePath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        this.taskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    String sayHi() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        return ui.giveHelloMessage();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * Retrieves the relevant response from Duke based on the input command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param command the input response of the user"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @return a string representing the response from Duke"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    String getResponse(String command) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            Command processed \u003d new Parser(command).parse();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            return processed.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        } catch (WrongInstructionException | InvalidTimeAndDateException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            return e.toString() + \"\\n\" + e.getMessage();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            return e.toString();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            return ui.getInvalidDateFormatMessage();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            return ui.getInvalidIndexMessage();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "weihaw08": 47
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weihaw08": 7
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            MainWindow userInterface \u003d fxmlLoader.getController();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            userInterface.setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            userInterface.printWelcomeMessage();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weihaw08": 32
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import javafx.scene.Group;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    void printWelcomeMessage() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                DialogBox.getDukeDialog(duke.sayHi(), dukeImage));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        Group userDialog \u003d new Group(DialogBox.getUserDialog(input, userImage));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        Group dukeDialog \u003d new Group(DialogBox.getDukeDialog(response, dukeImage));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        dialogContainer.getChildren().addAll(userDialog, dukeDialog);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weihaw08": 55
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.functionality.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.functionality.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.functionality.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.tasks.FormattedDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " * Represents the command that will add a {@code Task} object into a {@code TaskList} object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private FormattedDate date1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private FormattedDate date2;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private AddCommand(String taskName, FormattedDate date1, FormattedDate date2) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        this.date1 \u003d date1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        this.date2 \u003d date2;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * Instantiates an {@code AddCommand} object depending on the number of {@code FormattedDate} objects given"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * by the user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param taskName a string that indicates the name of the {@code Task} object"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param dates    the timing of the dates if applicable"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @return an {@code AddCommand} object"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public static AddCommand createAddCommand(String taskName, FormattedDate... dates) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        if (dates.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            return new AddCommand(taskName, null, null);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        } else if (dates.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            return new AddCommand(taskName, dates[0], null);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            return new AddCommand(taskName, dates[0], dates[1]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * Executes the add command that the {@code AddCommand} object represents. A {@code Task} object will be"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * added to the {@code TaskList} object."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param taskList the {@code TaskList} object in Duke"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param ui       the {@code Ui} object in Duke"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param storage  the {@code Storage} object in Duke"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @return a string containing the information of the task that has been added"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        if (date1 \u003d\u003d null \u0026\u0026 date2 \u003d\u003d null) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            newTask \u003d new ToDo(taskName);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        } else if (date2 \u003d\u003d null) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            newTask \u003d new Deadline(taskName, date1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            newTask \u003d new Event(taskName, date1, date2);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        taskList.addTask(newTask);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        return ui.printTaskModification(taskList.size(), newTask, \"add\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weihaw08": 66
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.functionality.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.functionality.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.functionality.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " * Represents the command that will bid Duke goodbye."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * Executes the command fed into {@code ByeCommand} object. This will terminate the Duke program and Duke will bid"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * fare well to the user while saving the tasks in the task list onto a text file."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param taskList the {@code TaskList} object in Duke"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param ui       the {@code Ui} object in Duke"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param storage  the {@code Storage} object in Duke"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @return a string representing the bye message of Duke"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        storage.save(taskList.obtainList());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        return ui.giveBye();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weihaw08": 25
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.functionality.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.functionality.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.functionality.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public abstract String execute(TaskList taskList, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weihaw08": 12
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.functionality.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.functionality.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.functionality.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " * Represents the command that will instruct Duke to delete a {@code Task} object from the {@code TaskList} object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private int indexToRemove;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * Instantiates a {@code DeleteCommand} object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param indexToRemove the index of the task to be deleted"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public DeleteCommand(int indexToRemove) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        this.indexToRemove \u003d indexToRemove;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * Executes the delete command that the {@code DeleteCommand} object represents. A {@code Task} object will be"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * deleted from the {@code TaskList} object, if an object is present at that index."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param taskList the {@code TaskList} object in Duke"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param ui       the {@code Ui} object in Duke"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param storage  the {@code Storage} object in Duke"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @return a string representing the information of the task that has been deleted or a string representing an"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     *     exception encountered"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            Task toBeRemoved \u003d taskList.retrieveTask(indexToRemove);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            taskList.deleteTask(indexToRemove);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            return ui.printTaskModification(taskList.size(), toBeRemoved, \"delete\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                return ui.getEmptyListMessage();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                return ui.getIndexNotFoundMessage(indexToRemove);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weihaw08": 46
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.functionality.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.functionality.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.functionality.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " * Represents a command that informs Duke that a particular task has been completed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private int indexToComplete;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * Instantiates a {@code DoneCommand} object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param indexToComplete the index of the task to be marked as done"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public DoneCommand(int indexToComplete) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        this.indexToComplete \u003d indexToComplete;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * Executes the done command that the {@code DoneCommand} object represents. The {@code Task} object at the index"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * given will be marked as completed, if such an object is present."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param taskList the {@code TaskList} object in Duke"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param ui       the {@code Ui} object in Duke"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param storage  the {@code Storage} object in Duke"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @return a string representing the information of the task that has been marked as done or a string representing"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     *     the exception encountered"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            Task completedTask \u003d taskList.retrieveTask(indexToComplete);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            completedTask.markAsDone();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            return ui.printTaskModification(taskList.size(), completedTask, \"done\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                return ui.getEmptyListMessage();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                return ui.getIndexNotFoundMessage(indexToComplete);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weihaw08": 46
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.functionality.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.functionality.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.functionality.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " * Represents a command to instruct Duke to find tasks that contain specific keyword(s)."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * Instantiates a {@code FindCommand} object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param keyword the keyword that the user wants to search for"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * Executes the find command inside the {@code FindCommand} object. Duke will perform a linear search through the"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * {@code TaskList} object to look for the {@code Task} objects that match the specific keyword(s)."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param taskList the {@code TaskList} object in Duke"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param ui       the {@code Ui} object in Duke"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param storage  the {@code Storage} object in Duke"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @return a string containing the possible matches that are found in the task list"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        boolean isFound \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        StringBuilder message \u003d new StringBuilder();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            Task task \u003d taskList.retrieveTask(i);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            if (task.getTaskName().contains(keyword)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                if (!isFound) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                    message.append(\"It\u0027s a match!\\n\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                    isFound \u003d true;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                message.append(count).append(\". \").append(task.toString()).append(\"\\n\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        if (!isFound) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            message \u003d new StringBuilder(\"UwU\\\" No matches found. Please try again.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        return message.toString();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weihaw08": 52
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.functionality.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.functionality.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.functionality.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " * Represents the command that instructs Duke to print out the current tasks that are inside the task list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * Executes the command represented by the {@code ListCommand} object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param taskList the {@code TaskList} object in Duke"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param ui       the {@code Ui} object in Duke"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param storage  the {@code Storage} object in Duke"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @return a string representing the tasks inside taskList"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        StringBuilder msg;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        int size \u003d taskList.size();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        if (size \u003d\u003d 0) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            msg \u003d new StringBuilder(\"HOORAY!! FREE SPIRIT!! You have no tasks!!\\n\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        } else if (size \u003c\u003d 5) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            String pluralOrNot \u003d (size \u003d\u003d 1) ? \"task\" : \"tasks\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            msg \u003d new StringBuilder(\"\u003c(^.^\u003c) You must be quite free! You only have \" + size + \" \""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                + pluralOrNot + \"!\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        } else if (size \u003c\u003d 10) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            msg \u003d new StringBuilder(\"O.O\\\" You are quite busy! You have \" + size + \" tasks!\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            msg \u003d new StringBuilder(\"T_T Please don\u0027t be stressed over your \" + size + \" tasks!\\n\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d size; i++) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            msg.append(i).append(\". \").append(taskList.retrieveTask(i)).append(\"\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        return msg.toString();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weihaw08": 39
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "public class EmptyDescriptionException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public EmptyDescriptionException(String taskType) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        return \"o_O OOPS!!! The description of a \" + this.taskType + \" cannot be empty.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weihaw08": 14
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidTimeAndDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "public class InvalidTimeAndDateException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private static final String MESSAGE \u003d \"o_O OOPS!!! You are breaking the space-time continuum!\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public InvalidTimeAndDateException(String errorInput) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        super(errorInput);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        return MESSAGE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        return \"The date(s) you entered could be incorrect: \\n\" + super.getMessage();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weihaw08": 19
    }
  },
  {
    "path": "src/main/java/duke/exception/WrongInstructionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "public class WrongInstructionException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private static final String ERROR_MESSAGE \u003d \"o_O OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public WrongInstructionException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        return ERROR_MESSAGE;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        return this.message;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weihaw08": 20
    }
  },
  {
    "path": "src/main/java/duke/functionality/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "package duke.functionality;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.exception.InvalidTimeAndDateException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.exception.WrongInstructionException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.tasks.FormattedDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import static duke.command.AddCommand.createAddCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " * Represents a command parser that interprets a command. The {@code Parser} object creates a new {@code Command}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " * object if the command that it is fed with is a valid command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * Instantiates a {@code Parser} object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param command an input command"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public Parser(String command) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * Interprets the command stored in the {@code Parser} instance and produces an output if the command is valid."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @return a {@code Command} object representing the command the {@code Parser} is fed with"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @throws WrongInstructionException   if the command fed to the {@code Parser} object is invalid"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @throws EmptyDescriptionException   if the command fed to the {@code Parser} object is correct but incomplete"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @throws ParseException              if the command fed to the {@code Parser} object has invalid date format"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @throws InvalidTimeAndDateException if the command fed to the {@code Parser} object has incorrect time and date"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @throws NumberFormatException       if the command fed to the {@code Parser} object has incorrect array index"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public Command parse() throws WrongInstructionException, EmptyDescriptionException, ParseException,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            InvalidTimeAndDateException, NumberFormatException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        String[] tokens \u003d this.command.split(\" \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        switch (tokens[0]) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            if (tokens.length \u003c 2) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                throw new EmptyDescriptionException(\"todo\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                return createAddCommand(command.replace(\"todo\", \"\"));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            if (tokens.length \u003d\u003d 1 || tokens[1].equals(\"/by\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                throw new EmptyDescriptionException(\"deadline\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            } else if (!this.command.contains(\"/by\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                throw new WrongInstructionException(\"I only recognise \\\"deadline task_name /by date\\\"!\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                String modifiedCommand \u003d this.command.replace(\"deadline\", \"\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                String[] split \u003d modifiedCommand.split(\" /by \");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                FormattedDate deadlineDate \u003d new FormattedDate(split[1]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                return createAddCommand(split[0], deadlineDate);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            if (tokens.length \u003d\u003d 1 || tokens[1].equals(\"/at\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                throw new EmptyDescriptionException(\"event\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            } else if (!this.command.contains(\"/at\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                throw new WrongInstructionException(\"I only recognise \\\"event task_name /at start_date \""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                        + \"- end_date\\\"!\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                String modifiedCommand \u003d this.command.replace(\"event\", \"\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                String[] split \u003d modifiedCommand.split(\" /at \");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                String[] splitDates \u003d split[1].split(\" - \");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                if (splitDates.length !\u003d 2) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                    throw new WrongInstructionException(\"I only recognise \\\"event event_name /at start_date \""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                            + \"- end_date\\\"!\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                    FormattedDate start \u003d new FormattedDate(splitDates[0]);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                    FormattedDate end \u003d new FormattedDate(splitDates[1]);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                    if (start.compareTo(end) \u003e 0) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                        throw new InvalidTimeAndDateException(split[1]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                    return createAddCommand(split[0], start, end);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            if (tokens.length !\u003d 1) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                throw new WrongInstructionException(\"Say goodbye to me by entering \\\"bye\\\"!\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                return new ByeCommand();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            if (tokens.length \u003e 2) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                throw new WrongInstructionException(\"Make me delete tasks by entering \\\"delete index\\\"!\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            } else if (tokens.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                throw new EmptyDescriptionException(\"delete\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                int index \u003d Integer.parseInt(tokens[1]);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                return new DeleteCommand(index);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            if (tokens.length \u003e 2) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                throw new WrongInstructionException(\"Make me mark a task as done by entering \\\"done index\\\"!\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            } else if (tokens.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                throw new EmptyDescriptionException(\"done\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                int index \u003d Integer.parseInt(tokens[1]);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                return new DoneCommand(index);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            if (tokens.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                throw new EmptyDescriptionException(\"find\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                String modifiedCommand \u003d this.command.replace(\"find\", \"\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                return new FindCommand(modifiedCommand);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            if (tokens.length !\u003d 1) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                throw new WrongInstructionException(\"I will only give you your list of tasks if you say \\\"list\\\"!\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            throw new WrongInstructionException(\"Please stick to the list of commands that I know!\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weihaw08": 129
    }
  },
  {
    "path": "src/main/java/duke/functionality/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "package duke.functionality;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.exception.InvalidTimeAndDateException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.tasks.FormattedDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " * Represents the storage system of Duke. A {@code Storage} object helps to load the previously stored text file in"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " * Duke and saves the updates that have been made."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private File tasktext;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * Instantiates a {@code Storage} object. A new directory and file is created if the file has yet to be created."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param filePath the path of the file"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            this.tasktext \u003d new File(filePath);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            if (!tasktext.exists()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                tasktext.getParentFile().mkdir();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                tasktext.createNewFile();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            System.out.println(\"Invalid file path! Unable to find Duke\u0027s memory.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * Initialises the list of items that have been stored in the text file of the {@code Storage} instance."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @return an {@code ArrayList} of {@code Task} objects that are stored in text format in the file."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        ArrayList\u003cTask\u003e initialisedList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            Scanner scanItems \u003d new Scanner(this.tasktext);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            while (scanItems.hasNext()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                initialisedList.add(processLine(scanItems.nextLine()));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            System.out.println(\"Unable to find Duke\u0027s memory. Please provide the correct file!\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            System.out.println(\"Wrong text formatting in the file! Please format the file properly!\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        } catch (InvalidTimeAndDateException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            System.out.println(\"Are you sure you are not travelling to the past? Please check again!\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        return initialisedList;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private Task processLine(String line) throws ParseException, InvalidTimeAndDateException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        String[] tokens \u003d line.split(\" ~ \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        boolean isDone \u003d Boolean.parseBoolean(tokens[1]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        if (tokens[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            return new ToDo(tokens[2], isDone);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        } else if (tokens[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            String[] startAndEnd \u003d tokens[3].split(\" - \");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            FormattedDate start \u003d new FormattedDate(startAndEnd[0]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            FormattedDate end \u003d new FormattedDate(startAndEnd[1]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            return new Event(tokens[2], isDone, start, end);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            FormattedDate by \u003d new FormattedDate(tokens[3]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            return new Deadline(tokens[2], isDone, by);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * Saves the {@code Task} objects that are stored in the list in text format."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param list an {@code ArrayList} of {@code Task} objects"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            for (Task task : list) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                fw.write(task.convertToText() + \"\\n\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            System.out.println(\"Unable to find Duke\u0027s memory location!\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weihaw08": 98
    }
  },
  {
    "path": "src/main/java/duke/functionality/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "package duke.functionality;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " * Represents the list that is used to store the tasks in Duke. This class provides utility functions that allow Duke"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " * to retrieve, delete and add tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * Instantiates a {@code TaskList} object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param list an {@code ArrayList} of {@code Task} objects"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * Adds a new {@code Task} object into the {@code TaskList}."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param newTask a {@code Task} object"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public void addTask(Task newTask) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        this.list.add(newTask);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * Deletes a {@code Task} object that is found at a given index."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param index the index where the task to be deleted is"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            this.list.remove(index - 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            if (this.list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                System.out.println(\"     O_O Your task list is completely empty!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                System.out.println(\"     O_O The index \" + index + \" cannot be found!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * Retrieves a {@code Task} object at a given index."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param index the index where the task to be retrieved is at"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @return a {@code Task} object"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public Task retrieveTask(int index) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        return this.list.get(index - 1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * Obtains an {@code ArrayList} of {@code Task} objects that are stored in the {@code TaskList} object."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @return an {@code ArrayList} of {@code Task} object"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public ArrayList\u003cTask\u003e obtainList() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * Gives the number of items that are currently inside the {@code TaskList} object."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @return the number of items in the {@code TaskList} object"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        return this.list.size();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weihaw08": 76
    }
  },
  {
    "path": "src/main/java/duke/functionality/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "package duke.functionality;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " * Represents the various user interface features that the user will see while using Duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * Gives the welcoming greeting from Duke."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @return a string representing the hello message from Duke"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public String giveHelloMessage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        return \"Hello from Duke!!\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * Gives the farewell message from Duke."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @return a string representing the goodbye message from Duke"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public String giveBye() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private String listSizeToString(int size) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        if (size \u003d\u003d 1) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            return \"Now you have 1 task in the list.\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            return \"Now you have \" + size + \" tasks in the list.\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * Notifies the user about the changes that have been made to a task or a task list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param size         the size of the {@code TaskList}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param modifiedTask the {@code Task} object that has been modified"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param modification the type of modification: \"done\", \"add\", \"delete\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @return a string representing the information of the modification that has been carried out"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public String printTaskModification(int size, Task modifiedTask, String modification) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        boolean isListModified;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        if (modification.equals(\"add\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            message \u003d \"UWU. A task has been added:\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            isListModified \u003d true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        } else if (modification.equals(\"delete\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            message \u003d \"OWO. A task has been removed:\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            isListModified \u003d true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            message \u003d \"^W^. A task has been marked done:\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            isListModified \u003d false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        message +\u003d \"\\n  \" + modifiedTask.toString() + \"\\n\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        if (isListModified) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            message +\u003d listSizeToString(size);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public String getIndexNotFoundMessage(int index) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        return \"O_O The index \" + index + \" cannot be found!\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public String getEmptyListMessage() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        return \"O_O Your task list is completely empty!\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public String getInvalidDateFormatMessage() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        return \"Please enter your date in \\\"dd/mm/yyyy hhmm\\\" format!\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public String getInvalidIndexMessage() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        return \"Your task index is not a number!\\n Make sure your task index is an integer!\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weihaw08": 82
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " * Represents a task that has to be completed before a certain time. A {@code Deadline} object is a {@code Task}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " * object with a task name and a deadline."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private FormattedDate deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * Instantiates a {@code Deadline} object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param taskName the name of the task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param deadline the time in which the task is due"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public Deadline(String taskName, FormattedDate deadline) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * Instantiates a {@code Deadline} object. The user is allowed to set if the task has been completed or not."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param taskName the name of the task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param isDone   the state of the task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param deadline the time in which the task is due"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public Deadline(String taskName, boolean isDone, FormattedDate deadline) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        super(taskName, isDone);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        String sym \u003d this.isDone ? \"Done\" : \"Not Done\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        return \"[D]\" + \"[\" + sym + \"] \" + this.taskName + \" (by: \" + this.deadline + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * Creates a text version of the {@code Deadline} task. This text version is stored in a text file."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @return a string that represents the state, the name and the deadline of the {@code Deadline} task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public String convertToText() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        return \"D\" + \" ~ \" + this.isDone + \" ~ \" + this.taskName"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            + \" ~ \" + this.deadline;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weihaw08": 49
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " * Represents a task that has a start date and an end date. A {@code Event} task object is a {@code Task} object"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " * with a task name, start date and end date."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private FormattedDate start;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private FormattedDate end;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * Instantiates an {@code Event} object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param taskName the name of the task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param start    the start date of the task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param end      the end date of the task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public Event(String taskName, FormattedDate start, FormattedDate end) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        this.start \u003d start;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        this.end \u003d end;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * Instantiates an {@code Event} object. The user is allowed to set if the task has been completed or not."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param taskName the name of the task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param isDone   the state of the task"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param start    the start date of the task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param end      the end date of the task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public Event(String taskName, boolean isDone, FormattedDate start, FormattedDate end) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        super(taskName, isDone);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        this.start \u003d start;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        this.end \u003d end;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        String sym \u003d this.isDone ? \"Done\" : \"Not Done\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        return \"[E]\" + \"[\" + sym + \"] \" + this.taskName + \" (at: \" + this.start + \" - \" + this.end + \")\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * Creates a text version of the {@code Event} task. This text version is stored in a text file."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @return a string that represents the state, the name, the start date and the end date of the"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * {@code Deadline} task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public String convertToText() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        return \"E\" + \" ~ \" + this.isDone + \" ~ \" + this.taskName + \" ~ \" + this.start + \" - \" + this.end;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weihaw08": 54
    }
  },
  {
    "path": "src/main/java/duke/tasks/FormattedDate.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.exception.InvalidTimeAndDateException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import java.time.YearMonth;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " * Helps to determine if a date is valid and represents a date in the standardised format \"dd/mm/yyyy hhmm\"."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "public class FormattedDate implements Comparable\u003cFormattedDate\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private static final SimpleDateFormat FORMAT \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * Instantiates a {@code FormattedDate} object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param s a string that could possibly represent a date in the format \"dd/mm/yyyy hhmm\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @throws ParseException              if the string is not a date or is not in the \"dd/mm/yyyy hhmm\" format"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @throws InvalidTimeAndDateException if the date and time is not in an official time system"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public FormattedDate(String s) throws ParseException, InvalidTimeAndDateException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        this.date \u003d FORMAT.parse(s);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        String[] tokens \u003d s.split(\" \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        Date currentDate \u003d new Date();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        if (!isValidDate(tokens[0]) || !isValidTime(tokens[1])) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            throw new InvalidTimeAndDateException(s);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private boolean isValidDate(String date) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        String[] tokens \u003d date.split(\"/\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        int day \u003d Integer.parseInt(tokens[0]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        int month \u003d Integer.parseInt(tokens[1]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        int year \u003d Integer.parseInt(tokens[2]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        if (month \u003c 0 || month \u003e 12) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            YearMonth findDays \u003d YearMonth.of(year, month);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            return day \u003c\u003d findDays.lengthOfMonth() \u0026\u0026 day \u003e\u003d 1;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    private boolean isValidTime(String time) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        int value \u003d Integer.parseInt(time);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        return value \u003e\u003d 0 \u0026\u0026 value \u003c\u003d 2359;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        return FORMAT.format(this.date);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public int compareTo(FormattedDate anotherDate) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        return this.date.compareTo(anotherDate.date);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weihaw08": 60
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    String taskName;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    Task(String taskName) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    Task(String taskName, boolean isDone) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * Retrieves the task name of the {@code Task} object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @return the task name of the {@code Task} object"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        return this.taskName;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public abstract String toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public abstract String convertToText();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weihaw08": 34
    }
  },
  {
    "path": "src/main/java/duke/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " * Represents a task that one intends to do. A {@code ToDo} object is a {@code Task} object that contains a task name."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * Instantiates a {@code ToDo} object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param taskName the name of the task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public ToDo(String taskName) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * Instantiates a {@code ToDo} object. The user can state if the task has been completed or not."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param taskName the name of the task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @param isDone   the state of the task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public ToDo(String taskName, boolean isDone) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        super(taskName, isDone);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        String sym \u003d this.isDone ? \"Done\" : \"Not Done\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        return \"[T]\" + \"[\" + sym + \"] \" + this.taskName;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * Creates a text version of the {@code ToDo} task. This text version is stored in a text file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     * @return a string that represents the state and the name of the {@code ToDo} task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public String convertToText() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        return \"T\" + \" ~ \" + this.isDone + \" ~ \" + this.taskName;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weihaw08": 42
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "         maxHeight\u003d\"1.7976931348623157E308\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "         maxWidth\u003d\"1.7976931348623157E308\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "         prefWidth\u003d\"527.0\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "         style\u003d\"-fx-border-color: black;\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "         type\u003d\"javafx.scene.layout.HBox\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "         xmlns\u003d\"http://javafx.com/javafx/11.0.1\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "               text\u003d\"Label\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "               wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                   fitHeight\u003d\"99.0\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                   fitWidth\u003d\"99.0\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                   pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                   preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                left\u003d\"5.0\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                right\u003d\"5.0\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "weihaw08": 32
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            maxWidth\u003d\"-Infinity\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            minHeight\u003d\"-Infinity\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            minWidth\u003d\"-Infinity\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            prefWidth\u003d\"541.0\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            xmlns\u003d\"http://javafx.com/javafx/11.0.1\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                   layoutY\u003d\"558.0\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                   onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                   prefHeight\u003d\"42.0\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                   prefWidth\u003d\"324.0\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                   AnchorPane.bottomAnchor\u003d\"0.0\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                   AnchorPane.leftAnchor\u003d\"0.0\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                   AnchorPane.rightAnchor\u003d\"76.0\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                   AnchorPane.topAnchor\u003d\"557.6\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                layoutX\u003d\"324.0\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                layoutY\u003d\"558.0\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                mnemonicParsing\u003d\"false\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                prefHeight\u003d\"41.0\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                prefWidth\u003d\"76.0\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                text\u003d\"Send\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                AnchorPane.bottomAnchor\u003d\"0.3999999999999986\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                AnchorPane.rightAnchor\u003d\"0.0\" /\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                    hbarPolicy\u003d\"NEVER\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                    hvalue\u003d\"1.0\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                    prefHeight\u003d\"557.0\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                    prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                    vbarPolicy\u003d\"ALWAYS\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                    vvalue\u003d\"1.0\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                    AnchorPane.bottomAnchor\u003d\"42.39999999999998\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                    AnchorPane.leftAnchor\u003d\"0.0\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                    AnchorPane.rightAnchor\u003d\"0.0\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                    AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                      prefHeight\u003d\"556.0\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "                      prefWidth\u003d\"527.0\" /\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "         \u003c/content\u003e\u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "weihaw08": 55
    }
  },
  {
    "path": "src/test/java/duke/tasks/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.exception.InvalidTimeAndDateException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    void testStringConversion() throws InvalidTimeAndDateException, ParseException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        // Testing string conversion for constructor 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        FormattedDateStub date \u003d new FormattedDateStub(\"s\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        Deadline d1 \u003d new Deadline(\"project meeting\", date);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        assertEquals(\"[D][✗] project meeting (by: 20/10/3999 2345)\", d1.toString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        // Testing string conversion for constructor 2"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        Deadline d2 \u003d new Deadline(\"sleep\", true, date);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        assertEquals(\"[D][✓] sleep (by: 20/10/3999 2345)\", d2.toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    void testIsDoneFunction() throws InvalidTimeAndDateException, ParseException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        FormattedDateStub date \u003d new FormattedDateStub(\"s\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        Deadline d1 \u003d new Deadline(\"project meeting\", date);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        d1.markAsDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        assertEquals(\"[D][✓] project meeting (by: 20/10/3999 2345)\", d1.toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    void testTextConversion() throws InvalidTimeAndDateException, ParseException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        FormattedDateStub date \u003d new FormattedDateStub(\"s\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        Deadline d1 \u003d new Deadline(\"sleep\", date);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        Deadline d2 \u003d new Deadline(\"sleep\", true, date);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        assertEquals(\"D ~ false ~ sleep ~ 20/10/3999 2345\", d1.convertToText());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        assertEquals(\"D ~ true ~ sleep ~ 20/10/3999 2345\", d2.convertToText());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weihaw08": 40
    }
  },
  {
    "path": "src/test/java/duke/tasks/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.exception.InvalidTimeAndDateException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    void testStringConversion() throws InvalidTimeAndDateException, ParseException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        // Testing string conversion for constructor 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        FormattedDateStub date \u003d new FormattedDateStub(\"s\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        Event e1 \u003d new Event(\"project meeting\", date, date);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        assertEquals(\"[E][✗] project meeting (at: 20/10/3999 2345 - 20/10/3999 2345)\", e1.toString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        // Testing string conversion for constructor 2"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        Event e2 \u003d new Event(\"sleep\", true, date, date);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        assertEquals(\"[E][✓] sleep (at: 20/10/3999 2345 - 20/10/3999 2345)\", e2.toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    void testIsDoneFunction() throws InvalidTimeAndDateException, ParseException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        FormattedDateStub date \u003d new FormattedDateStub(\"s\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        Event e1 \u003d new Event(\"project meeting\", date, date);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        e1.markAsDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        assertEquals(\"[E][✓] project meeting (at: 20/10/3999 2345 - 20/10/3999 2345)\", e1.toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    void testTextConversion() throws InvalidTimeAndDateException, ParseException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        FormattedDateStub date \u003d new FormattedDateStub(\"s\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        Event e1 \u003d new Event(\"sleep\", date, date);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        Event e2 \u003d new Event(\"sleep\", true, date, date);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        assertEquals(\"E ~ false ~ sleep ~ 20/10/3999 2345 - 20/10/3999 2345\", e1.convertToText());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        assertEquals(\"E ~ true ~ sleep ~ 20/10/3999 2345 - 20/10/3999 2345\", e2.convertToText());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weihaw08": 40
    }
  },
  {
    "path": "src/test/java/duke/tasks/FormattedDateStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.exception.InvalidTimeAndDateException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "class FormattedDateStub extends FormattedDate {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    FormattedDateStub(String s) throws ParseException, InvalidTimeAndDateException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        super(\"20/10/3999 2345\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        return \"20/10/3999 2345\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weihaw08": 17
    }
  },
  {
    "path": "src/test/java/duke/tasks/FormattedDateTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import duke.exception.InvalidTimeAndDateException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import org.junit.jupiter.params.ParameterizedTest;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import org.junit.jupiter.params.provider.ValueSource;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "class FormattedDateTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    @ParameterizedTest"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    @ValueSource(strings \u003d {\"300\", \"i\", \"20/12/2997 8pm\"})"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    void testFormattedDateConstructor_invalidDateFormat_exceptionThrown(String s) throws InvalidTimeAndDateException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            new FormattedDate(s);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            assertEquals(\"java.text.ParseException: Unparseable date: \\\"\" + s + \"\\\"\", e.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    @ParameterizedTest"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    @ValueSource(strings \u003d {\"16/06/1997 2000\", \"17/09/2019 2500\"})"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    void testFormattedDateConstructor_invalidTimeAndDate_exceptionThrown(String s) throws ParseException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            new FormattedDate(s);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        } catch (InvalidTimeAndDateException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "            assertEquals(\"☹ OOPS!!! You are breaking the space-time continuum!\", e.toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    void testStringConversion() throws InvalidTimeAndDateException, ParseException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        FormattedDate date \u003d new FormattedDate(\"23/07/2020 2000\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        assertEquals(\"23/07/2020 2000\", date.toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weihaw08": 40
    }
  },
  {
    "path": "src/test/java/duke/tasks/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "class ToDoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    void testStringConversion() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        // Testing string conversion for constructor 1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        assertEquals(\"[T][✗] sleep\", new ToDo(\"sleep\").toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        // Testing string conversion for constructor 2"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        assertEquals(\"[T][✓] talk\", new ToDo(\"talk\", true).toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    void testIsDoneFunction() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        ToDo t \u003d new ToDo(\"sleep\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        t.markAsDone();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        assertEquals(\"[T][✓] sleep\", t.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    void testTextConversion() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        assertEquals(\"T ~ false ~ sleep\", new ToDo(\"sleep\").convertToText());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "        assertEquals(\"T ~ true ~ talk\", new ToDo(\"talk\", true).convertToText());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weihaw08": 30
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weihaw08"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "       [T][?] read book"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     Now you have 1 task in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "       [D][?] return book (by: June 6th)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "       [E][?] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "       [T][?] join sports club"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     [T][?] read book"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     [T][?] join sports club"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "       [T][?] borrow book"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     1. [T][?] read book"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     2. [D][?] return book (by: June 6th)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     3. [E][?] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     4. [T][?] join sports club"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     5. [T][?] borrow book"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "       [D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "       [E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     Now you have 7 tasks in the list."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "weihaw08": 65
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "weihaw08": 11
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "java -classpath ..\\bin Duke  \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weihaw08"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weihaw08"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "weihaw08": 21
    }
  }
]
