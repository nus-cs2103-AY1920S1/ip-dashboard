[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public static ArrayList\u003cTask\u003e actions \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        ui.greetUser();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                ui.drawLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                ui.printException(e);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                ui.drawLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        new Duke(\"C:\\\\Users\\\\Yi Yin\\\\Documents\\\\Year 2\\\\Semester 1\\\\CS2103\\\\duke\\\\data\\\\duke.txt\").run();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiyin": 45,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        String userInput \u003d fullCommand.replaceAll(\"\\\\s+\", \" \");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else if (userInput.equals(\"list\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else if (userInput.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            String details \u003d userInput.replaceFirst(\"todo\", \"\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return new AddTodoCommand(details.trim());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else if (userInput.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            String details \u003d userInput.replaceFirst(\"deadline\", \"\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return new AddDeadlineCommand(details.trim());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else if (userInput.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            String details \u003d userInput.replaceFirst(\"event\", \"\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return new AddEventCommand(details.trim());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else if (userInput.contains(\"done\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            String[] doneDetails \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            if (doneDetails.length \u003c 2) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                throw new DukeException(\"\\u2639 OOPS!!! The description of done cannot be empty.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            String listActionIndex \u003d doneDetails[1].trim();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            int arrayActionIndex \u003d Integer.parseInt(listActionIndex) - 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return new DoneCommand(arrayActionIndex);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else if (userInput.contains(\"delete\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            String[] deleteDetails \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            if (deleteDetails.length \u003c 2) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                throw new DukeException(\"\\u2639 OOPS!!! The description of delete cannot be empty.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            String listActionIndex \u003d deleteDetails[1].trim();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            int arrayActionIndex \u003d Integer.parseInt(listActionIndex) - 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return new DeleteCommand(arrayActionIndex);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiyin": 42
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.calendar.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.calendar.Time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    protected String filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            Scanner fileReader \u003d new Scanner(file);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            while (fileReader.hasNext()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                String taskInformation \u003d fileReader.nextLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                String[] information \u003d taskInformation.split(\" \\\\| \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                String type \u003d information[0];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                boolean isDone \u003d Integer.parseInt(information[1]) \u003d\u003d 1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                String description \u003d information[2];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    String date \u003d information[3];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    String time \u003d \"\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    if (information.length \u003d\u003d 5) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                        time \u003d information[4];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    Deadline deadline \u003d new Deadline(description, new Date(date), new Time(time));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    if (isDone) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                        deadline.setDone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    tasks.add(deadline);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                } else if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    Todo todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    if (isDone) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                        todo.setDone();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    tasks.add(todo);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    String startDate \u003d information[3];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    String startTime \u003d information.length \u003e 4 ? information[4] : \"\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    String endDate \u003d information.length \u003e 5 ? information[5] : \"\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    String endTime \u003d information.length \u003e 6 ? information[6] : \"\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    Event event \u003d new Event(description, new Date(startDate), new Time(startTime), new Date(endDate), new Time(endTime));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    if (isDone) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                        event.setDone();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    tasks.add(event);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } catch (FileNotFoundException exception) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! Storage not found\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void writeToHardDisk(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            ArrayList\u003cTask\u003e taskList \u003d tasks.getList();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.getListSize(); i++) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                Task task \u003d taskList.get(i);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                String type \u003d task.getType();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                int isDone \u003d task.isDone() ? 1 : 0;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                String description \u003d task.getDescription();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                StringBuilder taskInformation \u003d new StringBuilder();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    Deadline deadline \u003d (Deadline) task;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    String date \u003d deadline.getUnprocessedDate();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    String time \u003d deadline.getUnprocessedTime();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    taskInformation.append(type + \" | \" + isDone + \" | \" + description + \" | \" + date + \" | \" + time);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                } else if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    taskInformation.append(type + \" | \" + isDone + \" | \" + description);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    Event event \u003d (Event) task;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    String startDate \u003d event.getUnprocessedStartDate();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    String startTime \u003d event.getUnprocessedStartTime();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    String endDate \u003d event.getUnprocessedEndDate();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    String endTime \u003d event.getUnprocessedEndTime();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    taskInformation.append(type + \" | \" + isDone + \" | \" + description + \" | \" );"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    taskInformation.append(startDate + \" | \" + startTime + \" | \" + endDate + \" | \" + endTime);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                fileWriter.write(taskInformation.toString() + \"\\n\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            throw new DukeException(\"\\u2539 OOPS!!! Something went wrong :\" + exception.getMessage());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiyin": 104
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public int getListSize() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiyin": 36
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    Scanner userInput \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void greetUser() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        drawLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        System.out.println(\"\\tHello! I\u0027m Duke\\n\\tWhat can I do for you?\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        drawLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void drawLine() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        System.out.println(\"\\t-----------------------------------------------------------------------------\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void printExitMessage() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        printMessage(\"\\t Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return userInput.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void closeScanner() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        userInput.close();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void printMessage(String message) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void printException(DukeException exception) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        String message \u003d exception.getMessage();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        System.out.println(\"\\t \" + message);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void printDeleteMessage(Task task, int numberOfTasks) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        printMessage(\"\\t Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        printMessage(\"\\t\\t \" + task);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        printMessage(\"\\t Now you have \" + numberOfTasks + (numberOfTasks \u003d\u003d 1 ? \" task\": \" tasks\") + \" in the list.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void printDoneMessage(Task task) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        printMessage(\"\\t Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        printMessage(\"\\t\\t \" + task);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void printAddedMessage(Task task, int numberOfTasks) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        printMessage(\"\\t Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        printMessage(\"\\t\\t \" + task);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        printMessage(\"\\t Now you have \" + numberOfTasks + (numberOfTasks \u003d\u003d 1 ? \" task\": \" tasks\") + \" in the list.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        printMessage(\"\\t \\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiyin": 68
    }
  },
  {
    "path": "src/main/java/duke/calendar/Date.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "package duke.calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import java.time.Month;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "public class Date {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    protected String unprocessedDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    protected int day;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    protected Month month;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    protected int year;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public Date(String unprocessedDate) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        this.unprocessedDate \u003d unprocessedDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        processDate();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void processDate() throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (unprocessedDate.equals(\"\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        String[] dateSplit \u003d unprocessedDate.split(\"/\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (dateSplit.length \u003c 3) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! Please specify the date\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    \" in the format date/month/year e.g. 2/12/2019.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        int monthNumber \u003d Integer.parseInt(dateSplit[1]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (isValidMonth(monthNumber)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            this.month \u003d Month.of(monthNumber);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! Please input a valid month.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        this.year \u003d Integer.parseInt(dateSplit[2]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        int inputDay \u003d Integer.parseInt(dateSplit[0]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (isValidDay(inputDay, monthNumber, year)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            this.day \u003d inputDay;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! Please input a valid day.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public boolean isValidMonth(int monthNumber) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (monthNumber \u003e\u003d 1 \u0026\u0026 monthNumber \u003c\u003d 12) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public boolean isValidDay(int day, int monthNumber, int year) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        switch(monthNumber) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        case 5:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        case 7:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        case 8:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        case 10:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        case 12:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            if (day \u003e\u003d 1 \u0026\u0026 day \u003c\u003d 31) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        case 4:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        case 6:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        case 9:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        case 11:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            if (day \u003e\u003d 1 \u0026\u0026 day \u003c\u003d 30) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            if (isLeapYear(year) \u0026\u0026 day \u003e\u003d 1 \u0026\u0026 day \u003c\u003d 29) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            } else if (day \u003e\u003d 1 \u0026\u0026 day \u003c\u003d 28) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public boolean isLeapYear(int year) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (year % 400 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else if (year % 100 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else if (year % 4 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public int getDay() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return day;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public Month getMonth() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return month;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public int getYear() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return year;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (month \u003d\u003d null) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (day % 10 \u003d\u003d 1 \u0026\u0026 day !\u003d 11) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return day + \"st of \" + month + \" \" + year;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else if (day % 10 \u003d\u003d 2 \u0026\u0026 day !\u003d 12) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return day + \"nd of \" + month + \" \" + year;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return day + \"th of \" + month + \" \" + year;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public String getUnprocessedDate() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return unprocessedDate;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiyin": 127
    }
  },
  {
    "path": "src/main/java/duke/calendar/Time.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "package duke.calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "public class Time {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    protected String unprocessedTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    protected String processedTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    protected boolean isAfternoon \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public Time(String unprocessedTime) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        this.unprocessedTime \u003d unprocessedTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        processTime();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void processTime() throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (unprocessedTime.equals(\"\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (unprocessedTime.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            int time \u003d Integer.parseInt(unprocessedTime);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            int hour \u003d time / 100;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            int minute \u003d time % 100;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            if (hour \u003e 23 || minute \u003e 59) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                throw new DukeException(\"\\u2639 OOPS!!! Please input a valid time.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            if (hour \u003e 11) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                hour \u003d hour % 12;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                isAfternoon \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            if (hour \u003d\u003d 0) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                hour \u003d 12;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            StringBuilder timing \u003d new StringBuilder();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            timing.append(hour);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            if (minute !\u003d 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                if (minute \u003c 10) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    timing.append(\":\" + \"0\" + minute);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    timing.append(\":\" + minute);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            processedTime \u003d timing.toString();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! Please input a valid time e.g. 1800.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (processedTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (isAfternoon) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return processedTime + \"pm\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return processedTime + \"am\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public String getUnprocessedTime() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return unprocessedTime;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiyin": 63
    }
  },
  {
    "path": "src/main/java/duke/command/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.calendar.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.calendar.Time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "public class AddDeadlineCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    protected String details;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public AddDeadlineCommand(String details) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        this.details \u003d details;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        String[] detailsSplit \u003d details.split(\"/by\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (detailsSplit.length \u003d\u003d 0 || detailsSplit[0].trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (detailsSplit.length \u003c 2 || detailsSplit[1].trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! The description of a deadline requires a task and/or a due date\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        String action \u003d detailsSplit[0].trim();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        String deadline \u003d detailsSplit[1].trim();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        String[] dateAndTimeSplit \u003d deadline.split(\" \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            String date \u003d dateAndTimeSplit[0];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            Date deadlineDate \u003d new Date(date);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            Time deadlineTime;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            if (dateAndTimeSplit.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                deadlineTime \u003d new Time(\"\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            } else if (dateAndTimeSplit.length \u003d\u003d 2){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                deadlineTime \u003d new Time(dateAndTimeSplit[1]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                throw new DukeException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            Task taskDeadline \u003d new Deadline(action, deadlineDate, deadlineTime);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            tasks.addTask(taskDeadline);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            int numberOfTasks \u003d tasks.getListSize();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            ui.printAddedMessage(taskDeadline, numberOfTasks);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            storage.writeToHardDisk(tasks);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            ui.printException(exception);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public String getDetails() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return details;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (o \u003d\u003d this) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else if (o instanceof AddDeadlineCommand) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            AddDeadlineCommand obj \u003d (AddDeadlineCommand) o;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return obj.getDetails().equals(details);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiyin": 71
    }
  },
  {
    "path": "src/main/java/duke/command/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.calendar.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.calendar.Time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "public class AddEventCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    protected String details;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public AddEventCommand(String details) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        this.details \u003d details;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        String[] detailsSplit \u003d details.split( \"/at\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (detailsSplit.length \u003d\u003d 0 || detailsSplit[0].trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (detailsSplit.length \u003c 2 || detailsSplit[1].trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! The description of an event requires a task and/or a scheduled time\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        String event \u003d detailsSplit[0].trim();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        String timings \u003d detailsSplit[1].trim();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            String[] startAndEndSplit \u003d timings.split(\"/to\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            if (startAndEndSplit[0].trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                throw new DukeException(\"\\u2639 OOPS!!! Please input a start time.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            String startDetails \u003d startAndEndSplit[0].trim();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            String[] startDateAndTimeSplit \u003d startDetails.split(\" \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            String startDate \u003d startDateAndTimeSplit[0];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            String startTime \u003d \"\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            if (startDateAndTimeSplit.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                startTime \u003d startDateAndTimeSplit[1];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            } else if (startDateAndTimeSplit.length \u003e 2) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                throw new DukeException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            String endDetails \u003d \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            String endDate \u003d \"\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            String endTime \u003d \"\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            if (startAndEndSplit.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                endDetails \u003d startAndEndSplit[1].trim();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                String[] endDateAndTimeSplit \u003d endDetails.split(\" \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                endDate \u003d endDateAndTimeSplit[0];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                if (endDateAndTimeSplit.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    endTime \u003d endDateAndTimeSplit[1];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                } else if (endDateAndTimeSplit.length \u003e 2){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                    throw new DukeException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            Date eventStartDate \u003d new Date(startDate);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            Time eventStartTime \u003d new Time(startTime);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            Date eventEndDate \u003d new Date(endDate);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            Time eventEndTime \u003d new Time(endTime);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            Task taskEvent \u003d new Event(event, eventStartDate, eventStartTime, eventEndDate, eventEndTime);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            tasks.addTask(taskEvent);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            int numberOfTasks \u003d tasks.getListSize();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            ui.printAddedMessage(taskEvent, numberOfTasks);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            storage.writeToHardDisk(tasks);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            ui.printException(exception);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public String getDetails() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return details;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (o \u003d\u003d this) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else if (o instanceof AddEventCommand) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            AddEventCommand obj \u003d (AddEventCommand) o;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return obj.getDetails().equals(details);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiyin": 90
    }
  },
  {
    "path": "src/main/java/duke/command/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "public class AddTodoCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    protected String details;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public AddTodoCommand(String details) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        this.details \u003d details;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (details.trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        Task todo \u003d new Todo(details.trim());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        tasks.addTask(todo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        int numberOfTasks \u003d tasks.getListSize();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        ui.printAddedMessage(todo, numberOfTasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            storage.writeToHardDisk(tasks);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            ui.printException(exception);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public String getDetails() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return details;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (o \u003d\u003d this) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else if (o instanceof AddTodoCommand) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            AddTodoCommand obj \u003d (AddTodoCommand) o;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return obj.getDetails().equals(details);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiyin": 54
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiyin": 14
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    protected int index;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        Task task \u003d tasks.getTask(index);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (index + 1 \u003e tasks.getListSize()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! This item does not exist.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        tasks.deleteTask(index);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        int numberOfTasks \u003d tasks.getListSize();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        ui.printDeleteMessage(task, numberOfTasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            storage.writeToHardDisk(tasks);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            ui.printException(exception);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public int getIndex() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (o \u003d\u003d this) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else if (o instanceof DeleteCommand) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            DeleteCommand obj \u003d (DeleteCommand) o;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return obj.getIndex() \u003d\u003d index;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "chowyiyin": 52
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    protected int index;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        Task action \u003d tasks.getTask(index);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (index + 1 \u003e tasks.getListSize()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! This item does not exist.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        action.setDone();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        ui.printDoneMessage(action);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            storage.writeToHardDisk(tasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            ui.printException(exception);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public int getIndex() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (o \u003d\u003d this) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else if (o instanceof DoneCommand) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            DoneCommand obj \u003d (DoneCommand) o;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return obj.getIndex() \u003d\u003d index;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiyin": 50
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        ui.printExitMessage();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        ui.closeScanner();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (o \u003d\u003d this) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else if (o instanceof ExitCommand) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "chowyiyin": 33
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        ui.printMessage(\"\\t Here are the tasks in your list: \");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getListSize(); i++) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            System.out.println(\"\\t \" + (i + 1) + \". \" + tasks.getTask(i));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (o \u003d\u003d this) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else if (o instanceof ListCommand) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiyin": 33
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    protected String message;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiyin": 14
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.calendar.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.calendar.Time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    protected Time time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public Deadline(String description, Date date, Time time) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + date.toString() + (time.toString().equals(\"\") ? \"\" : \", \" + time.toString()) + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public String getUnprocessedDate() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return date.getUnprocessedDate();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public String getUnprocessedTime() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return time.getUnprocessedTime();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiyin": 33
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.calendar.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.calendar.Time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    protected Date startDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    protected Time startTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    protected Date endDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    protected Time endTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public Event(String description, Date startDate, Time startTime, Date endDate, Time endTime) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        this.startTime \u003d startTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        this.endTime \u003d endTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public String getUnprocessedStartDate() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return startDate.getUnprocessedDate();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public String getUnprocessedStartTime() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return startTime.getUnprocessedTime();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public String getUnprocessedEndDate() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return endDate.getUnprocessedDate();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public String getUnprocessedEndTime() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return endTime.getUnprocessedTime();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        output.append(\"[E]\" + super.toString() + \" (at: \" + startDate.toString() + (startTime.toString().equals(\"\") ? \"\" : \", \" + startTime.toString()));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        if (endDate.toString().equals(\"\") \u0026\u0026 endTime.toString().equals(\"\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            output.append(\")\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            if (endDate.toString().equals(\"\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                output.append(\" to \" + endTime.toString() + \")\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            } else if (endTime.toString().equals(\"\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                output.append(\" to \" + endDate.toString() + \")\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                output.append(\" to \" + endDate.toString() + \" \" + endTime.toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiyin": 58
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public abstract String getType();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiyin": 35
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiyin": 17
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.command.AddDeadlineCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.command.AddEventCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.command.AddTodoCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import java.util.function.DoubleUnaryOperator;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void parse_bye() throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        assertEquals(new ExitCommand(), Parser.parse(\"bye\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void parse_list() throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        assertEquals(new ListCommand(), Parser.parse(\"list\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void parse_todo() throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        assertEquals(new AddTodoCommand(\"read book\"), Parser.parse(\"todo read book\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void parse_deadline() throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        assertEquals(new AddDeadlineCommand(\"read book /by 2/12/2019 1800\"), Parser.parse(\"deadline read book /by 2/12/2019 1800\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void parse_event() throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        assertEquals(new AddEventCommand(\"book reading /at 2/12/2019 1800 /to 2/12/2019 1900\"),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "                Parser.parse(\"event book reading /at 2/12/2019 1800 /to 2/12/2019 1900\"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void parse_done() throws DukeException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        assertEquals(new DoneCommand(1), Parser.parse(\"done 2\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void parse_delete() throws DukeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        assertEquals(new DeleteCommand(1), Parser.parse(\"delete 2\"));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void parse_error() throws DukeException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            Parser.parse(\"blah\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            assertEquals(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\", e.getMessage());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiyin": 66
    }
  },
  {
    "path": "src/test/java/duke/calendar/DateTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "package duke.calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "public class DateTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void processedDate_success() throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        Date date \u003d new Date(\"2/12/2019\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        assertEquals(\"2nd of DECEMBER 2019\", date.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void processedDate_wrongMonth_exceptionThrown() throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            Date date \u003d new Date(\"2/13/2019\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            assertEquals(\"\\u2639 OOPS!!! Please input a valid month.\", e.getMessage());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void processedDate_wrongDay_exceptionThrown() throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            Date date \u003d new Date(\"29/2/2019\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            assertEquals(\"\\u2639 OOPS!!! Please input a valid day.\", e.getMessage());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void processedDate_wrongFormat_exceptionThrown() throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            Date date \u003d new Date(\"2/2019\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            assertEquals(\"\\u2639 OOPS!!! Please specify the date\" +"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            \" in the format date/month/year e.g. 2/12/2019.\", e.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiyin": 48
    }
  },
  {
    "path": "src/test/java/duke/calendar/TimeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "package duke.calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "public class TimeTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void processedTime_success() throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        Time time \u003d new Time(\"0000\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        assertEquals(\"12am\", time.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void processedDate_wrongHour_exceptionThrown() throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            Time time \u003d new Time(\"2450\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            assertEquals(\"\\u2639 OOPS!!! Please input a valid time.\", e.getMessage());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void processedDate_wrongMinute_exceptionThrown() throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            Time time \u003d new Time(\"2361\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            assertEquals(\"\\u2639 OOPS!!! Please input a valid time.\", e.getMessage());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    public void processedDate_wrongFormat_exceptionThrown() throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            Time time \u003d new Time(\"17092\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "            assertEquals(\"\\u2639 OOPS!!! Please input a valid time e.g. 1800.\", e.getMessage());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiyin"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "chowyiyin": 47
    }
  }
]
