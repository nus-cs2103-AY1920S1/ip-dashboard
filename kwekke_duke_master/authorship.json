[
  {
    "path": ".github/ISSUE_TEMPLATE/bug_report.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "---"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": "name: Bug report"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "about: Create a report to help us improve"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "title: \u0027\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "labels: \u0027\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "assignees: \u0027\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "---"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "**Describe the bug**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "A clear and concise description of what the bug is."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "**To Reproduce**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "Steps to reproduce the behavior:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "1. Go to \u0027...\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "2. Click on \u0027....\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "3. Scroll down to \u0027....\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "4. See error"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "**Expected behavior**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "A clear and concise description of what you expected to happen."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "**Screenshots**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "If applicable, add screenshots to help explain your problem."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "**Desktop (please complete the following information):**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": " - OS: [e.g. iOS]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": " - Browser [e.g. chrome, safari]"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": " - Version [e.g. 22]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": "**Smartphone (please complete the following information):**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": " - Device: [e.g. iPhone6]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": " - OS: [e.g. iOS8.1]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": " - Browser [e.g. stock browser, safari]"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwekke"
        },
        "content": " - Version [e.g. 22]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwekke"
        },
        "content": "**Additional context**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwekke"
        },
        "content": "Add any other context about the problem here."
      }
    ],
    "authorContributionMap": {
      "kwekke": 38
    }
  },
  {
    "path": ".github/ISSUE_TEMPLATE/feature_request.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "---"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": "name: Feature request"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "about: Suggest an idea for this project"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "title: \u0027\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "labels: \u0027\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "assignees: \u0027\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "---"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "**Is your feature request related to a problem? Please describe.**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "A clear and concise description of what the problem is. Ex. I\u0027m always frustrated when [...]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "**Describe the solution you\u0027d like**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "A clear and concise description of what you want to happen."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "**Describe alternatives you\u0027ve considered**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "A clear and concise description of any alternative solutions or features you\u0027ve considered."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "**Additional context**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "Add any other context or screenshots about the feature request here."
      }
    ],
    "authorContributionMap": {
      "kwekke": 20
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "\tid \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": "test {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    archiveVersion \u003d \"0.2\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kwekke"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kwekke"
        },
        "content": "run {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 15,
      "kwekke": 32
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "T||0||Watch webcasts"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": "D||1||CS2103T iP||19/09/2019 2359"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "E||0||Group meeting||17/09/2019 1000"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "D||0||homework||16/09/2019 2359"
      }
    ],
    "authorContributionMap": {
      "kwekke": 4
    }
  },
  {
    "path": "data/filehelp.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "T||0||File Commands"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": "T||0||\u003cfile checkout filename\u003e specifies which file to use as data source. if it doesn\u0027t exist, create a new file with given name"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "T||0||\u003cfile copy filename\u003e creates a copy of a file with a new file name called filename-copy. it has all the tasks copied as well."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "T||0||\u003cfile delete filename\u003e deletes a file with given filename."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "T||0||\u003cfile list\u003e displays all the files in the ./data/ folder."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "T||0||\u003cfile rename oldfilename /to newfilename\u003e rename file. remember to use /to."
      }
    ],
    "authorContributionMap": {
      "kwekke": 6
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": "Duke is a Task Manager."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "### Feature 1 - Tasks"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "Add, update and delete task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "### Feature 2 - Search Task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "Find a task with a keyword."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "### Feature 3 - Flexible Data Source"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "Choose the file for Duke to work on."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "### `todo` - Add task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "Add a ToDo Task to Duke\u0027s list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "#### Example of usage: "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    todo (description of todo task)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "#### Expected Outcome:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        [T][X] (description of todo task) "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    Now you have \u003cn\u003e tasks in the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "### `deadline`/`event` - Add Special Tasks"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "Specify the date and time for tasks with deadlines and events."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": "#### Example of usage: "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "For deadlines,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    deadline (description of deadline task) /by (date and time)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": "For events,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    event (description of event task) /at (date and time)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": "where `date and time` is in the format of `dd/MM/yyyy HHmm`."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwekke"
        },
        "content": "#### Expected Outcome:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        [D][X] (description of deadline task) (date and time)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    Now you have \u003cn\u003e tasks in the list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kwekke"
        },
        "content": "### `list` - View Tasks"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kwekke"
        },
        "content": "View the list of tasks Duke is keeping track of."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kwekke"
        },
        "content": "#### Example of usage: "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    list"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kwekke"
        },
        "content": "#### Expected Outcome:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    Now you have \u003cn\u003e tasks in the list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    (Tasks in the list)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kwekke"
        },
        "content": "### `done` - Complete Task"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kwekke"
        },
        "content": "Mark the task as done."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kwekke"
        },
        "content": "#### Example of usage: "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    done (task number)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kwekke"
        },
        "content": "#### Expected Outcome:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        (task that marked as done)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kwekke"
        },
        "content": "### `delete` - Delete Task    "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kwekke"
        },
        "content": "Delete a task.   "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kwekke"
        },
        "content": "#### Example of usage: "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    delete (task number)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kwekke"
        },
        "content": "#### Expected Outcome:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        (task that marked as done)  "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    Now you have \u003cn\u003e tasks in the list."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kwekke"
        },
        "content": "### `find` - Find tasks"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kwekke"
        },
        "content": "Find tasks which share a keyword."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kwekke"
        },
        "content": "#### Example of usage: "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    find (keyword)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kwekke"
        },
        "content": "#### Expected Outcome:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    \u003cn\u003e tasks found with this (keyword)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    (Tasks found with keyword)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kwekke"
        },
        "content": "### `file list` - View files"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kwekke"
        },
        "content": "View the list of files in the folder."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kwekke"
        },
        "content": "#### Example of usage: "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    file list"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kwekke"
        },
        "content": "#### Expected Outcome:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    You have the following files in this folder."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    (Files in this folder) "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    You are currently on \u003cname of file Duke is on\u003e."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    Use file names only (exclude .txt in commands)."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kwekke"
        },
        "content": "### `file checkout` - Checkout file"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kwekke"
        },
        "content": "Specify the file for Duke to work on."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kwekke"
        },
        "content": "#### Example of usage: "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    file checkout (name of file)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kwekke"
        },
        "content": "#### Expected Outcome:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    Checking out (name of file)!"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    Now you have \u003cn\u003e tasks in the list."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    (Tasks in the list)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kwekke"
        },
        "content": "#### Notes:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kwekke"
        },
        "content": "The command `file checkout (name of file)` creates a new file of that name if the file does not already exists."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kwekke"
        },
        "content": "### `file copy` - Copy file"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kwekke"
        },
        "content": "Copies a file\u0027s content into a new file."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kwekke"
        },
        "content": "#### Example of usage: "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    file copy (name of file)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kwekke"
        },
        "content": "#### Expected Outcome:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    You have copied (name of file)."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    Currently checking out its copy."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    Now you have \u003cn\u003e tasks in the list."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    (Tasks in the list)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kwekke"
        },
        "content": "### `file rename` - Rename file"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kwekke"
        },
        "content": "Rename a file."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kwekke"
        },
        "content": "#### Example of usage: "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    file rename (current name of file) /to (new name of file)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kwekke"
        },
        "content": "#### Expected Outcome:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    You have renamed (current name of file) to (new name of file)."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    You are currently on (new name of file)."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kwekke"
        },
        "content": "### `file delete` - Delete file"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kwekke"
        },
        "content": "Delete a file."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kwekke"
        },
        "content": "#### Example of usage: "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    file delete (name of file)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kwekke"
        },
        "content": "#### Expected Outcome:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    (name of file deleted) deleted. "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kwekke"
        },
        "content": "#### Notes:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kwekke"
        },
        "content": "You cannot rename or delete the file Duke is currently checking out.     "
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kwekke"
        },
        "content": "### `bye` - Exit Duke"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kwekke"
        },
        "content": "Quit the application."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kwekke"
        },
        "content": "#### Example of usage: "
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    bye"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kwekke"
        },
        "content": "#### Expected Outcome:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    (Duke application exits)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      }
    ],
    "authorContributionMap": {
      "-": 14,
      "kwekke": 114
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "-": 83,
      "kwekke": 17
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.MainWindow;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().dukeWelcome();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 33
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Printer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": " * Represents a Command that Parser returns to the main logic in Duke."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public abstract void execute(TaskList tasks, Storage storage, Printer printer) throws DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 17
    }
  },
  {
    "path": "src/main/java/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Printer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeInvalidTaskDateFormatException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import task.DeadlineTask;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": " * Represents a Command which adds a DeadlineTask to the TaskList."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private Date time;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Creates a DeleteCommand with a given description and time."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param time Task deadline date and time in the format of \"dd/mm/yyyy hhmm\"."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public DeadlineCommand(String description, String time) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            this.time \u003d format.parse(time);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            throw new DukeInvalidTaskDateFormatException(time, format.toPattern());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Adds a DeadlineTask to the TaskList."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param tasks TaskList which stores the list of tasks."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param storage Storage which saves the task into the text file."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param printer Printer which generates a response after this command executes."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void execute(TaskList tasks, Storage storage, Printer printer) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        Task task \u003d new DeadlineTask(description, time);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        printer.generateDeadlineResponse(tasks, task);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 53
    }
  },
  {
    "path": "src/main/java/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Printer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeInvalidTaskIndexException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": " * Represents a Command which deletes a task from the TaskList."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Creates a DeleteCommand with a given index to delete from the TaskList."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param index Task index to be deleted."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Deletes a task from the TaskList."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param tasks TaskList which stores the list of tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param storage Storage which saves the task into the text file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param printer Printer which generates a response after this command executes."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @throws DukeException DukeException that may arise from invalid inputs."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void execute(TaskList tasks, Storage storage, Printer printer) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        if (tasks.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            printer.generateEmptyTaskListResponse(\"delete\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        } else if (index \u003c 0 || index \u003e\u003d tasks.getSize()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            throw new DukeInvalidTaskIndexException(\"delete\", tasks.getSize());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            Task task \u003d tasks.getTask(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            tasks.deleteTask(index);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            printer.generateDeleteResponse(tasks, task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 47
    }
  },
  {
    "path": "src/main/java/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Printer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeInvalidTaskIndexException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": " * Represents a Command which marks a task from the TaskList as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Creates a DoneCommand with a given index to mark a task from the TaskList as done."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param index Task index to be marked as done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Marks a task from the TaskList as done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param tasks TaskList which stores the list of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param storage Storage which saves the task into the text file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param printer Printer which generates a response after this command executes."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @throws DukeException DukeException that may arise from invalid inputs."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void execute(TaskList tasks, Storage storage, Printer printer) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        if (tasks.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            printer.generateEmptyTaskListResponse(\"do\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        } else if (index \u003c 0 || index \u003e\u003d tasks.getSize()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            throw new DukeInvalidTaskIndexException(\"do\", tasks.getSize());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            tasks.doneTask(index);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            printer.generateDoneResponse(tasks.getTask(index));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 45
    }
  },
  {
    "path": "src/main/java/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Printer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeInvalidTaskDateFormatException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import task.EventTask;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": " * Represents a Command which adds an EventTask to the TaskList."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private Date time;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Creates a EventCommand with a given description and time."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param time Task event date and time in the format of \"dd/mm/yyyy hhmm\"."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public EventCommand(String description, String time) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            this.time \u003d format.parse(time);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            throw new DukeInvalidTaskDateFormatException(time, format.toPattern());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Adds a EventTask to the TaskList."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param tasks TaskList which stores the list of tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param storage Storage which saves the task into the text file."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param printer Printer which generates a response after this command executes."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void execute(TaskList tasks, Storage storage, Printer printer) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        Task task \u003d new EventTask(description, time);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        printer.generateEventResponse(tasks, task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 55
    }
  },
  {
    "path": "src/main/java/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Printer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": " * Represents a Command which signals the end of the program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Prompts Ui to print a concluding message."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param tasks TaskList which stores the list of tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param storage Storage which saves the task into the text file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param printer Printer which generates a response after this command executes."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void execute(TaskList tasks, Storage storage, Printer printer) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        printer.generateExitResponse();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "kwekke": 26
    }
  },
  {
    "path": "src/main/java/command/FileCheckOutCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Printer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class FileCheckOutCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private String fileName;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public FileCheckOutCommand(String fileName) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        this.fileName \u003d fileName;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void execute(TaskList tasks, Storage storage, Printer printer) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        storage.updateFileName(fileName);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        TaskList newTaskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        printer.generateFileCheckOutMessage(newTaskList, fileName);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 28
    }
  },
  {
    "path": "src/main/java/command/FileCopyCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Printer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class FileCopyCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private String fileName;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public FileCopyCommand(String fileName) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        this.fileName \u003d fileName;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void execute(TaskList tasks, Storage storage, Printer printer) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        ArrayList\u003cString\u003e fileNames \u003d storage.getFileNames();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        if (!(fileNames.contains(String.format(\"%s.txt\", fileName)))) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            throw new DukeException(String.format(\"No file named %s to copy.\", fileName));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        String newFileName \u003d String.format(\"%s-copy\", fileName);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        Path sourceFile \u003d Paths.get(String.format(\"./data/%s.txt\", fileName));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        Path targetFile \u003d Paths.get(String.format(\"./data/%s.txt\", newFileName));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            Files.copy(sourceFile, targetFile);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            storage.updateFileName(newFileName);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            TaskList newTaskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            printer.generateFileCopyMessage(newTaskList, fileName);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            throw new DukeException(\"Close your other duke programs.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 45
    }
  },
  {
    "path": "src/main/java/command/FileDeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Printer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class FileDeleteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private String fileName;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public FileDeleteCommand(String fileName) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        this.fileName \u003d fileName;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void execute(TaskList tasks, Storage storage, Printer printer) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        ArrayList\u003cString\u003e fileNames \u003d storage.getFileNames();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        if (!(fileNames.contains(String.format(\"%s.txt\", fileName)))) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            throw new DukeException(String.format(\"No file named %s to delete.\", fileName));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        String currentFilePath \u003d storage.getFilePath();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        if (currentFilePath.equals(String.format(\"./data/%s.txt\", fileName))) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            throw new DukeException(\"You can\u0027t delete the file you are on.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        storage.deleteFile(fileName);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        printer.generateFileDeleteMessage(fileName);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 36
    }
  },
  {
    "path": "src/main/java/command/FileListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Printer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class FileListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void execute(TaskList tasks, Storage storage, Printer printer) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        ArrayList\u003cString\u003e listOfFileNames \u003d storage.getFileNames();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        printer.generateFileListMessage(listOfFileNames, storage.getFilePath());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 21
    }
  },
  {
    "path": "src/main/java/command/FileRenameCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Printer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class FileRenameCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private String oldFileName;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private String newFileName;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public FileRenameCommand(String oldFileName, String newFileName) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        this.oldFileName \u003d oldFileName;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        this.newFileName \u003d newFileName;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void execute(TaskList tasks, Storage storage, Printer printer) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        ArrayList\u003cString\u003e fileNames \u003d storage.getFileNames();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        if (!(fileNames.contains(String.format(\"%s.txt\", oldFileName)))) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            throw new DukeException(String.format(\"No file named %s to rename.\", oldFileName));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        Path sourceFile \u003d Paths.get(String.format(\"./data/%s.txt\", oldFileName));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        Path targetFile \u003d Paths.get(String.format(\"./data/%s.txt\", newFileName));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            Files.move(sourceFile, targetFile);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            storage.updateFileName(newFileName);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            printer.generateFileRenameMessage(oldFileName, newFileName);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            throw new DukeException(\"Cannot rename file.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 45
    }
  },
  {
    "path": "src/main/java/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Printer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": " * Represents a Command which prompts a printing of a list of tasks with a given keyword."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Creates a FindCommand which prompts the printing of a list of tasks with a given keyword."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param keyword a string representing the keyword to be searched within the list of tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Prompts Ui to print a list of tasks which contain a keyword."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param tasks TaskList which stores the list of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param storage Storage which saves the task into the text file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param printer Printer which generates a response after this command executes."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void execute(TaskList tasks, Storage storage, Printer printer) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        TaskList tasksFound \u003d new TaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        for (Task task : tasks.getList()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            if (task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                tasksFound.addTask(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        printer.generateFindResponse(tasksFound, keyword);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 41
    }
  },
  {
    "path": "src/main/java/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Printer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": " * Represents a Command which prompts a printing of the TaskList."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Prompts Ui to print the list of tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param tasks TaskList which stores the list of tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param storage Storage which saves the task into the text file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param printer Printer which generates a response after this command executes."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void execute(TaskList tasks, Storage storage, Printer printer) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        printer.generateListResponse(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 25
    }
  },
  {
    "path": "src/main/java/command/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Printer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import task.ToDoTask;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": " * Represents a Command which adds an ToDoTask to the TaskList."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class ToDoCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Creates a ToDoCommand with a given description."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public ToDoCommand(String description) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Adds a ToDoTask to the TaskList."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param tasks TaskList which stores the list of tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param storage Storage which saves the task into the text file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param printer Printer which generates a response after this command executes."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @throws DukeException DukeException that may arise from invalid inputs."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void execute(TaskList tasks, Storage storage, Printer printer) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        Task task \u003d new ToDoTask(description);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        printer.generateToDoResponse(tasks, task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 42
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import static javafx.application.Platform.exit;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private Printer printer;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        initialize();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private void initialize() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            this.storage \u003d new Storage();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            this.printer \u003d new Printer();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            this.tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Returns Duke\u0027s response after a user\u0027s input is parsed."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param input user\u0027s input"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @return Duke\u0027s output"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            Command c \u003d Parser.parse(input.trim());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            c.execute(tasks, storage, printer);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            if (c.isExit()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                exit();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            return printer.generateResponse();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            return printer.generateExceptionMessage(e.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Returns Duke\u0027s welcome message."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @return Duke\u0027s welcome message in a string"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public String getWelcomeMessage() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        printer.generateWelcomeMessage(tasks);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return printer.generateResponse();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 54
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import command.DeadlineCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import command.EventCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import command.ExitCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import command.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import command.FileCheckOutCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import command.FileCopyCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import command.FileDeleteCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import command.FileListCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import command.FileRenameCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import command.ListCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import command.ToDoCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeInvalidTaskDescriptionException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeInvalidTaskTimeException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeMissingNumberedTaskException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "class Parser {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Returns a Command that is converted from user\u0027s input."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param input a string that contains the user input."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @return a Command for the main logic in Duke to execute."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @throws DukeException DukeException that may arise from invalid inputs."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        String[] inputSplitBySpace \u003d input.split(\" \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        switch (inputSplitBySpace[0].toLowerCase()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        case \"b\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        case \"bb\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            return parseBye(input);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            return parseDeadline(input);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        case \"delete\" :"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            return parseDelete(input);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            return parseDone(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            return parseEvent(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        case \"file\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            return parseFile(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            return parseFind(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            return parseList(input);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            return parseTodo(input);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private static Command parseBye(String input) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        assert input.equals(\"b\") || input.equals(\"bb\") || input.equals(\"bye\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return new ExitCommand();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private static Command parseDeadline(String input) throws DukeException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        String[] inputSplitBySpace \u003d input.split(\"/by\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        String taskDesc \u003d inputSplitBySpace[0].substring(8).trim();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        if (taskDesc.equals(\"\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            throw new DukeInvalidTaskDescriptionException(\"Deadline\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        } else if (inputSplitBySpace.length \u003c 2) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            throw new DukeInvalidTaskTimeException(\"deadline\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return new DeadlineCommand(taskDesc, inputSplitBySpace[1].trim());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private static Command parseDelete(String input) throws DukeException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        String[] inputSplitBySpace \u003d input.split(\" \");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        if (inputSplitBySpace.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            throw new DukeMissingNumberedTaskException(\"delete\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            int index \u003d Integer.parseInt(inputSplitBySpace[1]);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            return new DeleteCommand(index - 1);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            throw new DukeMissingNumberedTaskException(\"delete\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private static Command parseDone(String input) throws DukeException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        String[] inputSplitBySpace \u003d input.split(\" \");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        if (inputSplitBySpace.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            throw new DukeMissingNumberedTaskException(\"do\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            int index \u003d Integer.parseInt(inputSplitBySpace[1]);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            return new DoneCommand(index - 1);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            throw new DukeMissingNumberedTaskException(\"do\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private static Command parseEvent(String input) throws DukeException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        String[] inputSplitBySpace \u003d input.split(\"/at\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        String taskDesc \u003d inputSplitBySpace[0].substring(5).trim();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        if (taskDesc.equals(\"\")) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            throw new DukeInvalidTaskDescriptionException(\"Event\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        } else if (inputSplitBySpace.length \u003c 2) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            throw new DukeInvalidTaskTimeException(\"event\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return new EventCommand(taskDesc, inputSplitBySpace[1].trim());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private static Command parseFile(String input) throws DukeException {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        String[] inputSplitBySpace \u003d input.split(\" \");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        switch (inputSplitBySpace[1].toLowerCase()) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        case \"checkout\":"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            return parseFileCheckOut(input);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        case \"copy\":"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            return parseFileCopy(input);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            return parseFileDelete(input);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            return parseFileList();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        case \"rename\":"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            return parseFileRename(input);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            throw new DukeException(\"Invalid file command.\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private static Command parseFileCheckOut(String input) throws DukeException {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        String[] inputSplitBySpace \u003d input.split(\" \");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        if (inputSplitBySpace.length \u003c\u003d 2) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            throw new DukeException(\"Give a file name to check out.\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return new FileCheckOutCommand(input.substring(14).trim());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private static Command parseFileCopy(String input) throws DukeException {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        String[] inputSplitBySpace \u003d input.split(\" \");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        if (inputSplitBySpace.length \u003c\u003d 2) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            throw new DukeException(\"Give a file name to copy.\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return new FileCopyCommand(input.substring(10).trim());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private static Command parseFileDelete(String input) throws DukeException {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        String[] inputSplitBySpace \u003d input.split(\" \");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        if (inputSplitBySpace.length \u003c\u003d 2) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            throw new DukeException(\"Give me a file name to delete.\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return new FileDeleteCommand(input.substring(12).trim());"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private static Command parseFileList() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return new FileListCommand();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private static Command parseFileRename(String input) throws DukeException {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        String[] inputSplitByCommandKeyword \u003d input.split(\"/to\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        String oldFileName \u003d inputSplitByCommandKeyword[0].substring(12).trim();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        if (oldFileName.equals(\"\")) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            throw new DukeException(\"Give me a file to rename.\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        if (inputSplitByCommandKeyword.length \u003c 2) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            throw new DukeException(\"Did you remember to use \\\"/to\\\"?\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        String newFileName \u003d inputSplitByCommandKeyword[1].trim();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return new FileRenameCommand(oldFileName, newFileName);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private static Command parseFind(String input) throws DukeException {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        String[] inputSplitBySpace \u003d input.split(\" \");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        if (inputSplitBySpace.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            throw new DukeException(\"Give me a keyword to find.\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return new FindCommand(input.substring(4).trim());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private static Command parseList(String input) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        assert input.equals(\"list\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return new ListCommand();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private static Command parseTodo(String input) throws DukeException {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        String[] inputSplitBySpace \u003d input.split(\" \");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        if (inputSplitBySpace.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            throw new DukeInvalidTaskDescriptionException(\"ToDo\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return new ToDoCommand(input.substring(5).trim());"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 191
    }
  },
  {
    "path": "src/main/java/duke/Printer.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class Printer {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private String response;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private static final String ADDED_MSG \u003d \"Got it. I\u0027ve added this task: \\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private static final String BYE_MSG \u003d \"Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private static final String DELETE_MSG \u003d \"Noted. I\u0027ve removed this task: \\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private static final String DONE_MSG \u003d \"Nice! I\u0027ve marked this task as done: \\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private static final String DUKE_TAUNT \u003d \"are you even trying? lul\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private static final String FILE_CHECKOUT_MESSAGE \u003d \"Checking out %s.txt!\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private static final String FILE_COPY_MESSAGE \u003d \"You have copied %s.txt.\\nCurrently checking out its copy. \\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private static final String FILE_CURRENT_MESSAGE \u003d \"You are currently on %s.\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private static final String FILE_LIST_MESSAGE \u003d \"You have the following files in this folder.\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private static final String FILE_LIST_REMINDER_MESSAGE \u003d \"Use file names only (exclude .txt in commands).\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private static final String FILE_RENAME_MESSAGE \u003d \"You have renamed %s to %s.\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private static final String FIND_MESSAGE \u003d \"%s task%s found with the \\\"%s\\\" keyword.\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public String generateResponse() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private String printTaskListSize(TaskList tasks) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return \"Now you have \" + tasks.getSize() + \" task\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                + (tasks.getSize() \u003d\u003d 1 ? \" \" : \"s \") + \"in the list.\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Generates Duke\u0027s welcome message."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param tasks List of tasks currently saved."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void generateWelcomeMessage(TaskList tasks) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        response \u003d \"hi im duke \\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                + printTaskListSize(tasks)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                + tasks.toString() + \"\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                + \"What can i do for you?\\n\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Generates a response from DeadlineCommand."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param tasks List of tasks currently saved."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param newDeadlineTask The newly added DeadlineTask."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void generateDeadlineResponse(TaskList tasks, Task newDeadlineTask) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        response \u003d ADDED_MSG"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                + \"    \" + newDeadlineTask + \"\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                + printTaskListSize(tasks);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void generateEmptyTaskListResponse(String commandWord) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        response \u003d \"You have no tasks to \" + commandWord;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Generates a response from DeleteCommand."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param tasks List of tasks currently saved."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param deletedTask The newly deleted task."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void generateDeleteResponse(TaskList tasks, Task deletedTask) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        response \u003d DELETE_MSG"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                + \"    \" + deletedTask + \"\\n\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                + printTaskListSize(tasks);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void generateDoneResponse(Task doneTask) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        response \u003d DONE_MSG"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                + \"    \" + doneTask;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Generates a response from EventCommand."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param tasks List of tasks currently saved."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param newEventTask The newly added EventTask."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void generateEventResponse(TaskList tasks, Task newEventTask) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        response \u003d ADDED_MSG"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                + \"    \" + newEventTask + \"\\n\""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                + printTaskListSize(tasks);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void generateExitResponse() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        response \u003d BYE_MSG;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Generates a response from FindCommand."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param tasksFound List of tasks found with the given keyword."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param keyword Keyword used to find tasks in the saved list of tasks."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void generateFindResponse(TaskList tasksFound, String keyword) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        if (tasksFound.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            response \u003d String.format(FIND_MESSAGE, \"No\", \"s\", keyword);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            boolean hasMultipleTasksFound \u003d tasksFound.getSize() \u003e 1;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            response \u003d String.format(FIND_MESSAGE, tasksFound.getSize(), hasMultipleTasksFound ? \"s\" : \"\", keyword)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                    + tasksFound.toString();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void generateListResponse(TaskList tasks) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        response \u003d printTaskListSize(tasks)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                + tasks.toString();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Generates a response from ToDoCommand."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param tasks lists of tasks currently saved"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param newToDoTask the newly added ToDoTask"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void generateToDoResponse(TaskList tasks, Task newToDoTask) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        response \u003d ADDED_MSG"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                + \"    \" + newToDoTask + \"\\n\""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                + printTaskListSize(tasks);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Generates an exception message with Duke\u0027s taunt."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param exceptionMessage the exception message to be displayed"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @return an exception message to be displayed in MainWindow"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    String generateExceptionMessage(String exceptionMessage) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return exceptionMessage + \"\\n\""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                + \"\\n \""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                + DUKE_TAUNT;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Generates a response form FileCheckOutCommand."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param newTaskList the list of tasks in the checked out file"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param fileName the name of the checked out file"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void generateFileCheckOutMessage(TaskList newTaskList, String fileName) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        response \u003d String.format(FILE_CHECKOUT_MESSAGE, fileName)"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                + printTaskListSize(newTaskList)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                + newTaskList.toString();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Generates a response from FileListCommand."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param listOfFileNames the list of file names in the current directory"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param currentFilePath the name of the current file path Storage is using"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void generateFileListMessage(ArrayList\u003cString\u003e listOfFileNames, String currentFilePath) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        Collections.sort(listOfFileNames);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        response \u003d FILE_LIST_MESSAGE;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        for (int i \u003d 0; i \u003c listOfFileNames.size(); i++) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            response +\u003d (i + 1) + \". \" + listOfFileNames.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        String currentFileName \u003d currentFilePath.substring(7);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        response +\u003d String.format(FILE_CURRENT_MESSAGE, currentFileName)"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                + FILE_LIST_REMINDER_MESSAGE;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void generateFileDeleteMessage(String fileName) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        response \u003d fileName + \" deleted.\";"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Generates a response from FileCopyCommand."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param copiedTaskList the current task list."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param fileName the current file name."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void generateFileCopyMessage(TaskList copiedTaskList, String fileName) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        response \u003d String.format(FILE_COPY_MESSAGE, fileName)"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                + printTaskListSize(copiedTaskList)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                + copiedTaskList.toString();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void generateFileRenameMessage(String oldFileName, String newFileName) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        response \u003d String.format(FILE_RENAME_MESSAGE, oldFileName, newFileName)"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                + String.format(FILE_CURRENT_MESSAGE, newFileName);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 179
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import task.DeadlineTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import task.EventTask;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import task.ToDoTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private String filePath \u003d \"./data/duke.txt\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Initializes Storage and ensures that a default .txt file exists."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        if (!doesFileExist()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            createFile();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private boolean doesFileExist() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return Paths.get(filePath).toFile().exists();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private void createFile() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            Path parentDirectory \u003d Paths.get(filePath).getParent();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            Files.createDirectories(parentDirectory);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            Files.createFile(Paths.get(filePath));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Loads a list of tasks in the text file."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @return an ArrayList of tasks."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @throws DukeException DukeException that may arise from invalid inputs."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return readTasksFromFile();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private ArrayList\u003cTask\u003e readTasksFromFile() throws DukeException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            String token \u003d sc.nextLine();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            String[] tokenSplit \u003d token.split(\"\\\\|\\\\|\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                Task task \u003d readLine(token, tokenSplit);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                if (tokenSplit[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private Task readLine(String tokenString, String[] token) throws DukeException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        String time;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        switch (token[0].trim()) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            return new ToDoTask(token[2].trim());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            time \u003d token[3];"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            return new DeadlineTask(token[2].trim(), time);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            time \u003d token[3];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            return new EventTask(token[2].trim(), time);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            throw new DukeException(\"Corrupted file. Bad line is \" + tokenString);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Saves tasks in the text file given a TaskList."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param tasks TaskList to be saved into the text file."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void save(TaskList tasks) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            for (Task task : tasks.getList()) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                String s \u003d task.toFileString() + \"\\n\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                fileWriter.write(s);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private String fileNameToFilePath(String fileName) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return String.format(\"./data/%s.txt\", fileName);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public String getFilePath() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return filePath;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void updateFileName(String fileName) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        this.filePath \u003d fileNameToFilePath(fileName);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Returns a list of file names."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @return a list of file names."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public ArrayList\u003cString\u003e getFileNames() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        ArrayList\u003cString\u003e listOfFileNames \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        File fileDirectory \u003d (new File(filePath)).getParentFile();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        File[] listOfFiles \u003d fileDirectory.listFiles();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        assert listOfFiles !\u003d null;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        for (File file : listOfFiles) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            listOfFileNames.add(file.getName());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return listOfFileNames;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Deletes a file in the current directory with the given file name."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param deleteFileName the name of the file to be deleted."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void deleteFile(String deleteFileName) throws DukeException {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        assert !filePath.equals(fileNameToFilePath(deleteFileName));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        Path deleteFilePath \u003d Paths.get(fileNameToFilePath(deleteFileName));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            Files.deleteIfExists(deleteFilePath);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            throw new DukeException(\"File does not exist.\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 154
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": " * Represents a list of Tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        this(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Creates a TaskList which stores Tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param tasks an ArrayList of Task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void doneTask(int index) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        tasks.get(index).markAsDone();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Returns a string for printing a list of all tasks to the user."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @return a string of all tasks in the list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        String listOfTasks \u003d \"\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            listOfTasks +\u003d (i + 1) + \". \" + tasks.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return listOfTasks;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 60
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return this.getMessage();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 12
    }
  },
  {
    "path": "src/main/java/exception/DukeInvalidTaskDateFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class DukeInvalidTaskDateFormatException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public DukeInvalidTaskDateFormatException(String time, String pattern) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        super(time + \" is not a valid date. Use \" + pattern);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 9
    }
  },
  {
    "path": "src/main/java/exception/DukeInvalidTaskDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class DukeInvalidTaskDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public DukeInvalidTaskDescriptionException(String taskType) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        super(\"☹ OOPS!!! The description of a \" + taskType + \" task cannot be empty.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 9
    }
  },
  {
    "path": "src/main/java/exception/DukeInvalidTaskIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class DukeInvalidTaskIndexException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public DukeInvalidTaskIndexException(String commandWord, int maxSize) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        super(\"Invalid numbered task to \" + commandWord + \". Insert a number from 1 to \" + maxSize + \".\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 9
    }
  },
  {
    "path": "src/main/java/exception/DukeInvalidTaskTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class DukeInvalidTaskTimeException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public DukeInvalidTaskTimeException(String taskType) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        super(\"Did you remember to use\" + (taskType.equals(\"deadline\") ? \" \\\"/by\\\"?\" : \" \\\"/at\\\"?\"));"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 8
    }
  },
  {
    "path": "src/main/java/exception/DukeMissingNumberedTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class DukeMissingNumberedTaskException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public DukeMissingNumberedTaskException(String commandWord) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        super(\"Give me a numbered task to \" + commandWord);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 9
    }
  },
  {
    "path": "src/main/java/javafx/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package javafx;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.scene.effect.DropShadow;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.scene.paint.ImagePattern;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "class DialogBox extends HBox {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private Circle myCircle;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        myCircle.setStroke(Color.SEAGREEN);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        myCircle.setFill(new ImagePattern(img));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        myCircle.setEffect(new DropShadow(+25d, 0d, +2d, Color.DARKSEAGREEN));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Returns Duke\u0027s DialogBox which appears reverse to User\u0027s DialogBox."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param text the text in the dialog"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param img Duke\u0027s profile picture"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @return Duke\u0027s dialog box"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 74
    }
  },
  {
    "path": "src/main/java/javafx/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package javafx;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/shockedPikachu.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/dukePepe.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void dukeWelcome() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(duke.getWelcomeMessage(), dukeImage));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        );"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 58
    }
  },
  {
    "path": "src/main/java/task/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeInvalidTaskDateFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": " * Represents a Task which has a deadline."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private SimpleDateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private Date time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Creates a DeadlineTask with a given description and time."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param time Task deadline date and time in the format of \"dd/mm/yyyy hhmm\"."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public DeadlineTask(String description, String time) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        assert !time.equals(\"\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            this.time \u003d format.parse(time);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            throw new DukeInvalidTaskDateFormatException(time, format.toPattern());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public DeadlineTask(String description, Date time) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return \"D||\" + (this.isDone ? \"1||\" : \"0||\")  + this.description + \"||\" + format.format(this.time);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + format.format(this.time) + \")\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 45
    }
  },
  {
    "path": "src/main/java/task/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeInvalidTaskDateFormatException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": " * Represents a task which has an event time."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private SimpleDateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private Date time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Creates a EventTime with a given description and time."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param time Task event date and time in the format of \"dd/mm/yyyy hhmm\"."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public EventTask(String description, String time) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        assert !time.equals(\"\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            this.time \u003d format.parse(time);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            throw new DukeInvalidTaskDateFormatException(time, format.toPattern());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public EventTask(String description, Date time) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return \"E||\" + (this.isDone ? \"1||\" : \"0||\")  + this.description + \"||\" + format.format(this.time);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" +  format.format(this.time)  + \")\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 45
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": " * Represents a task that the user can add into the TaskList."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Task Constructor used by classes extending Task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        assert !description.equals(\"\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public abstract String toFileString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 37
    }
  },
  {
    "path": "src/main/java/task/ToDoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": " * Represents a Task to do."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class ToDoTask extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Creates a ToDoTask with a given description."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public ToDoTask(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return \"T||\" + (this.isDone ? \"1||\" : \"0||\")  + this.description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 24
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "\u003c?import javafx.scene.shape.Circle?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #fadbd8;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "         \u003c/padding\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "      \u003cCircle fx:id\u003d\"myCircle\" fill\u003d\"GREY\" radius\u003d\"50.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "kwekke": 19
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"javafx.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" style\u003d\"-fx-background: #fdebd0;\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"387.0\" spacing\u003d\"10.0\" style\u003d\"-fx-background-color: #fdebd0;\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "kwekke": 19
    }
  },
  {
    "path": "src/test/java/DeadlineTaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import task.DeadlineTask;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class DeadlineTaskTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void testToFileString() throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        assertEquals(\"D||0||deadlineTest||01/01/2000 2359\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                new DeadlineTask(\"deadlineTest\", \"01/01/2000 2359\").toFileString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void testInvalidTaskDateExceptionThrown() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            new DeadlineTask(\"deadlineTest\", \"01/01\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            assertEquals(\"01/01 is not a valid date. Use dd/MM/yyyy HHmm\", e.getMessage());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 25
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 11
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": " ____        _"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "|  _ \\ _   _| | _____"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "What can i do for you?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "  [T][?] borrow book"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "Now you have 1 task in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "1.[T][?] borrow book"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": "  [D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": "  [E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwekke"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwekke"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwekke"
        },
        "content": "____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "kwekke": 37
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "kwekke": 5
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "   @ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": "   "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "   REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "   if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "   "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "   REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "   del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "   "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "   REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "   javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "   IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "       echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "       exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "   )"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "   REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "   "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "   REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "   java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "   "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "   REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "   FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "kwekke": 21
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": "   "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "kwekke": 34
    }
  }
]
