[
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    Task newTask;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public AddCommand(Task newTask) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        this.newTask \u003d newTask;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        taskList.addTask(newTask);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        String taskDescription \u003d newTask.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        ui.showAddTaskMessage(taskDescription, taskList.getListSize());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 19
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public abstract void execute(TaskList taskList, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 6
    }
  },
  {
    "path": "src/main/java/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private final int day;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private final int month;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private final int year;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private final int time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private final String dateTimeString;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private String dateTimePrintFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public DateTime(int day, int month, int year, int time, String dateTimeString) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        this.day \u003d day;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        this.month \u003d month;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        this.dateTimeString \u003d dateTimeString;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public String toSaveFormat() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        return dateTimeString;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        if (dateTimePrintFormat !\u003d null) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            return dateTimePrintFormat;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            String formattedDay \u003d \"\" + day;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            String formattedMonth \u003d \" of \";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            String formattedYear \u003d \" \" + 20 + year + \", \";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            String formattedTime \u003d \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            int rem \u003d day % 10;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            switch (rem) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case 1:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                formattedDay +\u003d \"st\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case 2:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                formattedDay +\u003d \"nd\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case 3:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                formattedDay +\u003d \"rd\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                formattedDay +\u003d \"th\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            switch (month) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case 1:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                formattedMonth +\u003d \"January\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case 2:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                formattedMonth +\u003d \"February\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case 3:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                formattedMonth +\u003d \"March\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case 4:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                formattedMonth +\u003d \"April\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case 5:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                formattedMonth +\u003d \"May\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case 6:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                formattedMonth +\u003d \"June\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case 7:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                formattedMonth +\u003d \"July\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case 8:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                formattedMonth +\u003d \"August\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case 9:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                formattedMonth +\u003d \"September\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case 10:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                formattedMonth +\u003d \"October\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case 11:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                formattedMonth +\u003d \"November\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case 12:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                formattedMonth +\u003d \"December\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                //Add error handling"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            int minutes \u003d time % 100;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            boolean isMorning \u003d time \u003e\u003d 1200"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    ? false"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    : true;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            int hours \u003d (time - minutes) / 100;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            if (hours \u003e 12) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                hours -\u003d 12;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            formattedTime +\u003d hours;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            if (minutes !\u003d 0) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                formattedTime +\u003d \".\" + minutes;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            if (isMorning) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                formattedTime +\u003d \"am\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                formattedTime +\u003d \"pm\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            dateTimePrintFormat \u003d formattedDay + formattedMonth + formattedYear + formattedTime;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            return dateTimePrintFormat;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 110
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private DateTime deadlineTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private static final String ABBREV_TASK \u003d \"D\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public Deadline(String description, DateTime deadlineTime) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        this.deadlineTime \u003d deadlineTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public String toSaveFormat() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        return ABBREV_TASK + \" | \" + taskIsDoneState + \" | \" + description + \" | \" + deadlineTime.toSaveFormat();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + deadlineTime + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 19
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    int deletedTaskIndex;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public DeleteCommand(int deletedTaskIndex) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        this.deletedTaskIndex \u003d deletedTaskIndex;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        Task deletedTask \u003d taskList.deleteTask(deletedTaskIndex);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        String taskDescription \u003d deletedTask.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        ui.showDeleteTaskMessage(taskDescription, taskList.getListSize());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 19
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    int completedTaskIndex;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public DoneCommand(int completedTaskNum) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        this.completedTaskIndex \u003d completedTaskIndex;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        Task completedTask \u003d taskList.completeTask(completedTaskIndex);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        String taskDescription \u003d completedTask.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        ui.showDoneMessage(taskDescription);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 19
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private static final String INDENT_SPACING \u003d \"    \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private static final String ROOT_DIRECTORY \u003d \"C:/Users/gbrls/OneDrive/Desktop/duke-master/src/main/java\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private static final String SAVE_DIRECTORY \u003d \"/data\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private static final String SAVE_FILE_NAME \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                Command command \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                command.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                isExit \u003d command.isExit();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        new Duke(\"data/tasks.text\").run();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "gabrielseow": 55
    }
  },
  {
    "path": "src/main/java/DukeDeadlineIllegalArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public class DukeDeadlineIllegalArgumentException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public DukeDeadlineIllegalArgumentException(String fieldName) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        super(\"☹ OOPS!!! The \" + fieldName + \" of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 5
    }
  },
  {
    "path": "src/main/java/DukeDeleteIllegalArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public class DukeDeleteIllegalArgumentException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public DukeDeleteIllegalArgumentException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 5
    }
  },
  {
    "path": "src/main/java/DukeEventIllegalArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public class DukeEventIllegalArgumentException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public DukeEventIllegalArgumentException(String fieldName) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        super(\"☹ OOPS!!! The \" + fieldName + \" of an event cannot be empty.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        return this.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 10
    }
  },
  {
    "path": "src/main/java/DukeIllegalArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public class DukeIllegalArgumentException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public DukeIllegalArgumentException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 5
    }
  },
  {
    "path": "src/main/java/DukeSaveFileCorruptedError.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public class DukeSaveFileCorruptedError extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public DukeSaveFileCorruptedError() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        super(\"The save file is corrupted. Creating new save file...\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 5
    }
  },
  {
    "path": "src/main/java/DukeToDoIllegalArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public class DukeToDoIllegalArgumentException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public DukeToDoIllegalArgumentException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        super(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private DateTime eventTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private static final String ABBREV_TASK \u003d \"E\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public Event(String description, DateTime eventTime) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public String toSaveFormat() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        return ABBREV_TASK + \" | \" + taskIsDoneState + \" | \" + description + \" | \" + eventTime.toSaveFormat();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + eventTime + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 19
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        ui.showExit();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        storage.saveTasks(taskList.getTaskList());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 16
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        ArrayList\u003cTask\u003e taskListArray \u003d taskList.getTaskList();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        int taskListSize \u003d taskListArray.size();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        String[] taskDescriptionArray \u003d new String[taskListSize];"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        for (int i \u003d 0; i \u003c taskListSize; i ++) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            taskDescriptionArray[i] \u003d taskListArray.get(i).toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        ui.showList(taskDescriptionArray);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 23
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public static Command parse(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        String[] newTaskSplit \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        String taskType \u003d newTaskSplit[0];"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        switch(taskType) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            return new  ListCommand();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            int completedTaskNum \u003d parseDoneCommand(newTaskSplit);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            return new DoneCommand(completedTaskNum);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            int deletionNum \u003d parseDeleteCommand(newTaskSplit);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            return new DeleteCommand(deletionNum);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            Task newEvent \u003d parseAddEventCommand(newTaskSplit);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            return new AddCommand(newEvent);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            Task newDeadline \u003d parseAddDeadlineCommand(newTaskSplit);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            return new AddCommand(newDeadline);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            Task newToDo \u003d parseAddToDoCommand(newTaskSplit);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            return new AddCommand(newToDo);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            throw new DukeIllegalArgumentException();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private static int parseDoneCommand(String[] newTaskSplit) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        int completedTaskNum \u003d Integer.parseInt(newTaskSplit[1]) - 1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        return completedTaskNum;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private static int parseDeleteCommand(String[] newTaskSplit) throws DukeDeleteIllegalArgumentException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        int newTaskLen \u003d newTaskSplit.length;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        if (newTaskLen \u003c 2) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            throw new DukeDeleteIllegalArgumentException(\"You have not entered a number for deletion\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        } else if (newTaskLen \u003e 2) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            throw new DukeDeleteIllegalArgumentException(\"You have entered too many arguments for deletion\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                int deletionNum \u003d Integer.parseInt(newTaskSplit[1]) - 1;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                return deletionNum;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                throw new DukeDeleteIllegalArgumentException(\"Please enter a valid number for deletion\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                throw new DukeDeleteIllegalArgumentException(\"Please enter a valid number within the range\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private static ToDo parseAddToDoCommand(String[] newTaskSplit) throws DukeToDoIllegalArgumentException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            int newTaskLen \u003d newTaskSplit.length;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            String description \u003d newTaskSplit[1];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            for (int i \u003d 2; i \u003c newTaskLen; i++) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                description +\u003d \" \" + newTaskSplit[i];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            ToDo newToDo \u003d new ToDo(description);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            return newToDo;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            throw new DukeToDoIllegalArgumentException();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private static Deadline parseAddDeadlineCommand(String[] newTaskSplit) throws DukeDeadlineIllegalArgumentException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            int newTaskLen \u003d newTaskSplit.length;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            boolean foundDeadline \u003d false;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            String description \u003d newTaskSplit[1];"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            String deadlineTimeString \u003d \"\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            for (int i \u003d 2; i \u003c newTaskLen; i++) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                if (foundDeadline) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    if (i \u003d\u003d newTaskLen - 1) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                        deadlineTimeString +\u003d newTaskSplit[i];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                        deadlineTimeString +\u003d newTaskSplit[i] + \" \";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    if (newTaskSplit[i].equals(\"/by\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                        foundDeadline \u003d true;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                        description +\u003d \" \" + newTaskSplit[i];"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            if (foundDeadline) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                DateTime deadlineTime \u003d convertDateTime(deadlineTimeString);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                Deadline newDeadline \u003d new Deadline(description, deadlineTime);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                return newDeadline;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                throw new DukeDeadlineIllegalArgumentException(\"deadline\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            throw new DukeDeadlineIllegalArgumentException(\"description\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private static Event parseAddEventCommand(String[] newTaskSplit) throws DukeEventIllegalArgumentException {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            int newTaskLen \u003d newTaskSplit.length;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            boolean foundEvent \u003d false;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            String description \u003d newTaskSplit[1];"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            String eventTimeString \u003d \"\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            for (int i \u003d 2; i \u003c newTaskLen; i++) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                if (foundEvent) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    if (i \u003d\u003d newTaskLen - 1) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                        eventTimeString +\u003d newTaskSplit[i];"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                        eventTimeString +\u003d newTaskSplit[i] + \" \";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    if (newTaskSplit[i].equals(\"/at\")) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                        foundEvent \u003d true;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                        description +\u003d \" \" + newTaskSplit[i];"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            if (foundEvent) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                DateTime eventTime \u003d convertDateTime(eventTimeString);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                Event newEvent \u003d new Event(description, eventTime);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                return newEvent;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                throw new DukeEventIllegalArgumentException(\"event timing\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            throw new DukeEventIllegalArgumentException(\"description\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public static DateTime convertDateTime(String dateTimeString) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        String[] dateTimeStringSplit \u003d dateTimeString.split(\" \");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        String[] dateStringSplit \u003d dateTimeStringSplit[0].split(\"/\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        int day \u003d Integer.parseInt(dateStringSplit[0]);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        int month \u003d Integer.parseInt(dateStringSplit[1]);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        int year \u003d Integer.parseInt(dateStringSplit[2]);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        int time \u003d Integer.parseInt(dateTimeStringSplit[1]);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        return new DateTime(day, month, year, time, dateTimeString);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public static Task parseSaveData(String newTaskString) throws DukeSaveFileCorruptedError {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        String[] newTaskSplit \u003d newTaskString.split(\" \\\\| \");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        String taskType \u003d newTaskSplit[0];"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        boolean taskIsDone \u003d Integer.parseInt(newTaskSplit[1]) \u003d\u003d 1"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                ? true"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                : false;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        String description \u003d newTaskSplit[2];"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        switch(taskType) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            newTask \u003d new ToDo(description);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            DateTime deadlineTime \u003d convertDateTime(newTaskSplit[3]);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            newTask \u003d new Deadline(description, deadlineTime);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            DateTime eventTime \u003d convertDateTime(newTaskSplit[3]);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            newTask \u003d new Event(description, eventTime);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            throw new DukeSaveFileCorruptedError();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        if (newTask !\u003d null) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            if (taskIsDone) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                newTask.taskComplete();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            return newTask;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        } else  {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            throw new DukeSaveFileCorruptedError();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 182
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private String saveFilePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public Storage(String saveFilePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        this.saveFilePath \u003d saveFilePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeSaveFileCorruptedError {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            FileReader tasksFileReader \u003d new FileReader(new File(saveFilePath));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            BufferedReader bTasksFileReader \u003d new BufferedReader(tasksFileReader);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            return readTasksFile(bTasksFileReader);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            createNewSaveFile();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        } catch (DukeSaveFileCorruptedError e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            createNewSaveFile();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        return new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public void saveTasks(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            new File(saveFilePath).delete();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            createNewSaveFile();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(saveFilePath));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                writer.write(task.toSaveFormat() + \"\\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private void createNewSaveFile() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            File newSaveFile \u003d new File(saveFilePath);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            newSaveFile.createNewFile();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private ArrayList\u003cTask\u003e readTasksFile(BufferedReader bTasksFileReader) throws DukeSaveFileCorruptedError {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        String newTaskString \u003d null;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                newTaskString \u003d bTasksFileReader.readLine();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            if (newTaskString \u003d\u003d null) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            Task newTask \u003d Parser.parseSaveData(newTaskString);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            tasks.add(newTask);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            bTasksFileReader.close();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 78
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    protected boolean taskIsDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    protected int taskIsDoneState;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        this.taskIsDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        this.taskIsDoneState \u003d 0;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public void taskComplete() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        taskIsDone \u003d true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        taskIsDoneState \u003d 1;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public abstract String toSaveFormat();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        if (taskIsDone \u003d\u003d true) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            output \u003d \"[✓]\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            output \u003d \"[✗]\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        output +\u003d \" \" + description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 31
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        this.taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public void addTask(Task newTask) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        taskList.add(newTask);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public Task deleteTask(int index) throws IndexOutOfBoundsException{"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        return taskList.remove(index);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public Task completeTask(int completedTaskIndex) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        Task completedTask \u003d taskList.get(completedTaskIndex);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        completedTask.taskComplete();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        return completedTask;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public int getListSize() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 36
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private static final String ABBREV_TASK \u003d \"T\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public String toSaveFormat() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        return ABBREV_TASK + \" | \" + taskIsDoneState + \" | \" + description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 18
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public void showAddTaskMessage(String taskDescription, int listSize) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        String output \u003d \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                + taskDescription"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                + \"\\nNow you have \" + listSize + \" tasks in the list.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        System.out.println(output);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public void showDeleteTaskMessage(String taskDescription, int listSize) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        String output \u003d \"Noted. I\u0027ve removed this task: \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                + taskDescription"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                + \"\\nNow you have \" + listSize + \" tasks in the list.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        System.out.println(output);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public void showDoneMessage(String taskDescription) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\" + taskDescription);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public void showList(String[] taskDescriptionArray) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        int taskLen \u003d taskDescriptionArray.length;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        if (taskLen \u003d\u003d 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            System.out.println(\"You do not have any tasks in your list\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            String output \u003d \"Here are the tasks in your list: \";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            for (int i \u003d 0; i \u003c taskLen; i ++) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                String taskDescription \u003d taskDescriptionArray[i];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                output +\u003d \"\\n\" + (i + 1) + \".\" + taskDescription;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            System.out.println(output);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        String welcomeMessage \u003d \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        System.out.println(welcomeMessage);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        //Consider making DukeLoadingError"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        System.out.println(\"No save file found... creating new save file\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public void showError(String errorMessage) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public void showExit() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 78
    }
  },
  {
    "path": "src/main/java/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "T | 0 | something cool"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 1
    }
  }
]
