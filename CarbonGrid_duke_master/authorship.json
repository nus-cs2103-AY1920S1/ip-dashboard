[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "version \u00270.1\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    mainClassName \u003d \"Main\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "compileJava {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    options.encoding \u003d \u0027UTF-8\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "compileTestJava {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    options.encoding \u003d \u0027UTF-8\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    archiveVersion \u003d \"0.1\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "run{"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "test {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CarbonGrid": 44,
      "-": 11
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "E\u001f0\u001fmusic festival\u001f2/12/2019T2000\u001eT\u001f1\u001fborrow book\u001eE\u001f0\u001fmovie\u001f4/12/2019T1355\u001eD\u001f0\u001fD1 Project Assignment\u001f5/12/2019T1357"
      }
    ],
    "authorContributionMap": {
      "CarbonGrid": 1
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "CarbonGrid": 17,
      "-": 83
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CarbonGrid": 9
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    private Duke duke \u003d new Duke(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * MainWindow loaded from MainWindow."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * DialogBox initialised from DialogBox.java instead of loaded from fxml."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CarbonGrid": 36
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.DialogBox;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.MainUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * Initialise MainWindow."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        MainUi tmpUi \u003d new MainUi();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        tmpUi.showWelcome();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        dialogContainer.getChildren()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            .add(DialogBox.getDukeDialog(new Label(tmpUi.getResponse()), new ImageView(dukeImage)));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * the dialog container."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * Clears the user input after processing."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * Input containing bye as first word will terminate the program."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        String uiInput \u003d userInput.getText().trim();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        int index \u003d uiInput.indexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        if (index \u003c 0) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            index \u003d uiInput.length();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        if (uiInput.substring(0, index).equals(\"bye\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        Label userText \u003d new Label(uiInput);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        Label dukeText \u003d new Label(duke.getResponse(uiInput));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            DialogBox.getUserDialog(userText, new ImageView(userImage)),"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            DialogBox.getDukeDialog(dukeText, new ImageView(dukeImage))"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        );"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CarbonGrid": 75
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * Initializes a DialogBox with Label as text content \u0026 ImageView as Profile Image."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * DialogBox always force enable word wrap for Label and prevents truncations."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @param l  String textContent"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @param iv Profile Image for DialogBox"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        this.setStyle(\"-fx-background-color: #222\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        this.setMinHeight(Region.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        l.setWrapText(true);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        l.setFont(Font.font(\"DejaVu Sans\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        text.setStyle(\"-fx-background-color: #666; -fx-border-color: #222; -fx-border-width: 10; -fx-padding: 5\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        displayPicture.setFitWidth(100);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        displayPicture.setFitHeight(100);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        double length \u003d displayPicture.fitHeightProperty().get() / 2;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        Circle clip \u003d new Circle();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        clip.setRadius(length);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        clip.setCenterX(length);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        clip.setCenterY(length);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        displayPicture.setClip(clip);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        this.getChildren()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            .addAll(text, displayPicture);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        text.setFocusTraversable(true);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        this.getChildren()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            .setAll(tmp);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * Returns UserDialog Box formatted with ObservableList as [Label, ImageView]."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @param l  String textContent"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @param iv Profile Image for DialogBox"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @return DialogBox of [Label, ImageView]"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * Returns UserDialog Box formatted with ObservableList as [ImageView, Label]."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @param l  String textContent"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @param iv Profile Image for DialogBox"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @return DialogBox of [Label, ImageView]"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        DialogBox db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CarbonGrid": 87
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * Initialise Duke with stated filePath."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @param filePath filePath to read and save list data."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            ui.show(e.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * Main loop of Duke."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "                Command c \u003d Parser.parse(ui.readCommand());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "                ui.show(e.getMessage());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        scrollPane.setFitToHeight(true);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        });"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        });"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        );"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        MainUi mui \u003d new MainUi();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            c.execute(tasks, mui, storage);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            mui.show(e.getMessage());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            return mui.getResponse();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CarbonGrid": 163,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/MainUi.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "public class MainUi extends Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    private String tmpBuf;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public void show(String str) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        tmpBuf \u003d str;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * Returns output of the last ui.show() call, then empties the buffer."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @return String expected from last ui.show() call"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public String getResponse() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        String str \u003d tmpBuf;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        tmpBuf \u003d null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CarbonGrid": 21
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.exception.EmptyFieldDukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.exception.InvalidCommandDukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * Looks at first token, determine \u0026 construct duke.command.Command sub-classes as per parsed."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @param str Expects string to be parse as duke.command.Command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @return duke.command.Command object as per parsed."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @throws DukeException if command can\u0027t be parsed."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public static Command parse(String str) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        str \u003d str.trim();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        int lastIndex \u003d str.indexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        if (lastIndex \u003c 0) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            lastIndex \u003d str.length();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        String[] temp;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        switch (str.substring(0, lastIndex)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            return new DeleteCommand(str.substring(lastIndex));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            return new DoneCommand(str.substring(lastIndex));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            return new FindCommand(str.substring(lastIndex));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            temp \u003d str.substring(8)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "                .split(\" /by \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            if (temp.length \u003c 1 || temp[0].isBlank()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "                throw new EmptyFieldDukeException(\"description\", \"deadline\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            if (temp.length \u003c 2 || temp[1].isBlank()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "                throw new EmptyFieldDukeException(\"time\", \"deadline\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            return new AddCommand(new Deadline(temp[0], temp[1]));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            temp \u003d str.substring(5)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "                .split(\" /at \");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            if (temp.length \u003c 1 || temp[0].isBlank()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "                throw new EmptyFieldDukeException(\"description\", \"event\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            if (temp.length \u003c 2 || temp[1].isBlank()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "                throw new EmptyFieldDukeException(\"time\", \"event\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            return new AddCommand(new Event(temp[0], temp[1]));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            return new AddCommand(new Todo(str.substring(4)));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            throw new InvalidCommandDukeException();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CarbonGrid": 70
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.exception.LoadFileFailDukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.exception.WriteFileFailDukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * Initialise filePath for continuous referencing."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @param filePath filePath to save file"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * Try to load raw data from filePath and parse into ArrayList of Tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @return ArrayList of Tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @throws LoadFileFailDukeException if file or raw data can\u0027t be loaded"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws LoadFileFailDukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            for (String record : new BufferedReader(new FileReader(filePath)).readLine()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "                .split(\"\\\\x1e\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "                tasks.add(Task.parseFileTask(record));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            throw new LoadFileFailDukeException(filePath);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * Try to rewrite entire file defined by filePath."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @param content data to be written over into file at filePath"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @throws WriteFileFailDukeException if directory does not exists or unable to write to file"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public void rewrite(String content) throws WriteFileFailDukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath, false);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            fw.write(content);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            throw new WriteFileFailDukeException();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CarbonGrid": 58
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.exception.IndexOutOfBoundsDukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    private ArrayList\u003cTask\u003e ls;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        ls \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e ls) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        this.ls \u003d ls;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public void add(Task t) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        ls.add(t);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * Returns a serialised duke.TaskList."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @return Serialised duke.TaskList as String"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public String getSerialized() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        Iterator\u003cTask\u003e it \u003d ls.iterator();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        while (it.hasNext()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            sb.append(it.next().toFileString())"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "                .append((char) 30);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        if (sb.length() \u003e 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            sb.setLength(sb.length() - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * Returns String with all items to be displayed on duke.Ui."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @return String with all items to be displayed on duke.Ui"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public String toUiString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        Iterator\u003cTask\u003e it \u003d ls.iterator();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        while (it.hasNext()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            sb.append(i++)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "                .append(\".\")"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "                .append(it.next());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        return ls.size();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * Remove the task from duke.TaskList, then returns the task."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @param index index as int"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @return duke.task.Task that is being removed from duke.TaskList"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @throws IndexOutOfBoundsDukeException On index out of bound"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public Task remove(int index) throws IndexOutOfBoundsDukeException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            return ls.remove(index - 1);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            throw new IndexOutOfBoundsDukeException();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * Sets the task at index as done, then returns the task."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @param index index as int"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @return duke.task.Task that is being set as done"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @throws IndexOutOfBoundsDukeException On index out of bound"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public Task setDone(int index) throws IndexOutOfBoundsDukeException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            Task t \u003d ls.get(index - 1);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            t.setDone();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            return t;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            throw new IndexOutOfBoundsDukeException();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * Find all tasks with positive match to given string, then output a UiString of List of Tasks for display."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @param str String to match"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @return UiString to be displayed"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public String findAllIncludesAsUiString(String str) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        Iterator\u003cTask\u003e it \u003d ls.iterator();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        while (it.hasNext()) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            String taskString \u003d it.next()"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "                .toString();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            if (taskString.contains(str)) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "                sb.append(i++)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "                    .append(\".\")"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "                    .append(taskString);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CarbonGrid": 117
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    private Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * Displays given string with 4 spaces indentation on newlines and enclose the display with opening and closing"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * lines."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @param str String to Display on CLI."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public void show(String str) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        if (!str.endsWith(\"\\n\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            str +\u003d \u0027\\n\u0027;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n     \""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            + str.replaceAll(\"\\n(?!$)\", \"\\n     \")"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            + \"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        show(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CarbonGrid": 30
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.exception.WriteFileFailDukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * duke.command.Command for duke.TaskList to be added with duke.task.Task on execute."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @param task duke.task.Task to be added"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * Executes add command which add task to duke.TaskList."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * Then duke.Storage rewrite using duke.TaskList."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @param tasks   duke.TaskList"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @param ui      duke.Ui"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @param storage duke.Storage"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @throws WriteFileFailDukeException On problems with duke.Storage writing"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws WriteFileFailDukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        storage.rewrite(tasks.getSerialized());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        ui.show(\"Got it. I\u0027ve added this task:\\n  \" + task + \"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CarbonGrid": 35
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        return this instanceof ExitCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "CarbonGrid": 15
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.exception.IndexFormatDukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * duke.command.Command for duke.TaskList to remove duke.task.Task at index."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @param indexString Index String"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @throws IndexFormatDukeException On unable to parse string"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public DeleteCommand(String indexString) throws IndexFormatDukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            index \u003d Integer.parseInt(indexString.trim());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            throw new IndexFormatDukeException();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * Executes delete command which remove task, of index parsed by constructor, from duke.TaskList."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * Then duke.Storage rewrite using duke.TaskList."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @param tasks   duke.TaskList"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @param ui      duke.Ui"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @param storage duke.Storage"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @throws DukeException On index out of bound or problems with duke.Storage writing"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        Task t \u003d tasks.remove(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        storage.rewrite(tasks.getSerialized());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        ui.show(\"Noted. I\u0027ve removed this task:\\n  \" + t + \"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CarbonGrid": 41
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.exception.IndexFormatDukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * duke.command.Command for duke.TaskList to set duke.task.Task at index as done."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @param indexString Index String"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @throws IndexFormatDukeException On unable to parse string"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public DoneCommand(String indexString) throws IndexFormatDukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            index \u003d Integer.parseInt(indexString.trim());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            throw new IndexFormatDukeException();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * Executes done command which set task, of index parsed by constructor, from duke.TaskList as done."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * Then duke.Storage rewrite using duke.TaskList."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @param tasks   duke.TaskList"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @param ui      duke.Ui"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @param storage duke.Storage"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @throws DukeException On index out of bound or problems with duke.Storage writing"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        Task t \u003d tasks.setDone(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        storage.rewrite(tasks.getSerialized());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        ui.show(\"Nice! I\u0027ve marked this task as done:\\n\" + t);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CarbonGrid": 41
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * duke.Ui displays exit message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        ui.show(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CarbonGrid": 15
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    private String str;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public FindCommand(String str) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        this.str \u003d str.trim();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        ui.show(tasks.findAllIncludesAsUiString(str));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CarbonGrid": 18
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * duke.Ui lists all tasks in duke.TaskList."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        ui.show(tasks.toUiString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CarbonGrid": 15
    }
  },
  {
    "path": "src/main/java/duke/exception/CorruptedFileDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "public class CorruptedFileDukeException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public CorruptedFileDukeException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        super(\"Save file data could be corrupted \u0026 cannot be parsed.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CarbonGrid": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/DateTimeParseDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "public class DateTimeParseDukeException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * Used to notify DateTime cannot be parsed and hint user with correct usage."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public DateTimeParseDukeException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        super(\"DateTime cannot be resolved.\\nExpected formats:\\n2/12/2019 1800\\nT1800\\n2 Dec \""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            + \"2019\\ndecember2T1300\\nAnd other non-ambiguous derivatives.\\nLeftmost is taken as day unless it is \""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            + \"non-numerical month.\\nNon-provided datetime defaults to current system relative.\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CarbonGrid": 12
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CarbonGrid": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyFieldDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "public class EmptyFieldDukeException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public EmptyFieldDukeException(String attrib, String task) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        super(\"☹ OOPS!!! The \" + attrib + \" of a\" + (task.matches(\"^[aeiou].*?\") ? \"n \" : \u0027 \u0027) + task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            + \" cannot be empty.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CarbonGrid": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/IndexFormatDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "public class IndexFormatDukeException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public IndexFormatDukeException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        super(\"List index not provided or in wrong format.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CarbonGrid": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/IndexOutOfBoundsDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "public class IndexOutOfBoundsDukeException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public IndexOutOfBoundsDukeException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        super(\"Index given is out of bound.\\nUse from 1 to last index of list only.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CarbonGrid": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidCommandDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "public class InvalidCommandDukeException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public InvalidCommandDukeException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CarbonGrid": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/LoadFileFailDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "public class LoadFileFailDukeException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public LoadFileFailDukeException(String filePath) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        super(\"Oops... \" + filePath + \" cannot be loaded.\\nIt will be automatically overwritten once you have a list.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CarbonGrid": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/WriteFileFailDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "public class WriteFileFailDukeException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public WriteFileFailDukeException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        super(\"Oops... Something went wrong with file writing.\\\"\\nPlease \");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CarbonGrid": 7
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.exception.DateTimeParseDukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    private LocalDateTime by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * Constructs a duke.task.Deadline with description and DateTime string."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @param description Description"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @param by          DateTime String"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @throws DukeException On empty fields or DateTime string parse failure"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            this.by \u003d LocalDateTime.parse(by.trim(), super.inDateTimeFormat());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            throw new DateTimeParseDukeException();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(super.outDTF) + \")\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public String childClass() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        return \"deadline\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        return \"D\" + super.toFileString() + (char) 31 + this.by.format(super.fileDTF);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CarbonGrid": 41
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.exception.DateTimeParseDukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    private LocalDateTime at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * Constructs an event with description and DateTime string."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @param description Description"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @param at          DateTime String"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @throws DukeException On empty fields or DateTime string parse failure"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public Event(String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            this.at \u003d LocalDateTime.parse(at.trim(), super.inDateTimeFormat());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            throw new DateTimeParseDukeException();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.at.format(super.outDTF) + \")\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public String childClass() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        return \"event\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        return \"E\" + super.toFileString() + (char) 31 + this.at.format(super.fileDTF);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CarbonGrid": 42
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.exception.CorruptedFileDukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.exception.EmptyFieldDukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import java.time.format.DateTimeFormatterBuilder;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import java.time.temporal.ChronoField;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * DateTimeFormatter meant for duke.Ui output."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    protected static DateTimeFormatter outDTF \u003d DateTimeFormatter.ofPattern(\"MMMM d y, K:mm a\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * DateTimeFormatter meant for File output."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    protected static DateTimeFormatter fileDTF \u003d DateTimeFormatter.ofPattern(\"d/M/y\u0027T\u0027HHmm\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * Constructs an abstract duke.task.Task with description."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @param description Description"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @throws EmptyFieldDukeException On empty description"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public Task(String description) throws EmptyFieldDukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        this.description \u003d description.trim();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        if (this.description.isBlank()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            throw new EmptyFieldDukeException(\"description\", this.childClass());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    protected String getStatusIcon() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        return this.isDone ? \"✓\" : \"✘\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        return (char) 31 + (this.isDone ? \"1\" : \"0\") + (char) 31 + this.description;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    protected abstract String childClass();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * Parses FileString representing Serialised duke.task.Task into duke.task.Task."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @param str Serialised task to be parsed"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @return duke.task.Task as parsed"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     * @throws DukeException On parsing problem"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public static Task parseFileTask(String str) throws DukeException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        String[] prop \u003d str.split(\"\\\\x1f\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        switch (prop[0]) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            t \u003d new Deadline(prop[2], prop[3]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            t \u003d new Event(prop[2], prop[3]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            t \u003d new Todo(prop[2]);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            throw new CorruptedFileDukeException();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        if (prop[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            t.setDone();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    protected static DateTimeFormatter inDateTimeFormat() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        LocalDateTime dt \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        return new DateTimeFormatterBuilder().parseCaseInsensitive()"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            .appendPattern(\"[MMMM][MMM][ ][/][d][ ][/][MMMM][MMM][M][ ][/][yyyy][ \""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "                + \"][\u0027T\u0027][HH[\u0027:\u0027]mm]\")"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            .parseDefaulting(ChronoField.HOUR_OF_DAY, dt.getHour())"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            .parseDefaulting(ChronoField.MINUTE_OF_HOUR, dt.getMinute())"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            .parseDefaulting(ChronoField.YEAR_OF_ERA, dt.getYear())"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            .parseDefaulting(ChronoField.MONTH_OF_YEAR, dt.getMonthValue())"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            .parseDefaulting(ChronoField.DAY_OF_MONTH, dt.getDayOfMonth())"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            .toFormatter();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CarbonGrid": 103
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public Todo(String description) throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        return \"[T]\" + super.toString() + \u0027\\n\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public String childClass() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        return \"todo\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        return \"T\" + super.toFileString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CarbonGrid": 24
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "         minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "                \u003cFont name\u003d\"DejaVu Sans Bold\" size\u003d\"12.0\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "CarbonGrid": 23
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            prefWidth\u003d\"400.0\" style\u003d\"-fx-base: #000;\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"42.0\" prefWidth\u003d\"328.0\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "                   AnchorPane.bottomAnchor\u003d\"2.0\" AnchorPane.leftAnchor\u003d\"2.0\" AnchorPane.rightAnchor\u003d\"72.0\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "                \u003cFont name\u003d\"DejaVu Sans\" size\u003d\"12.0\"/\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        \u003c/TextField\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "                prefHeight\u003d\"42.0\" prefWidth\u003d\"70.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"2.0\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "                AnchorPane.rightAnchor\u003d\"0.0\"/\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "                    prefHeight\u003d\"558.0\" prefWidth\u003d\"400.0\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"46.0\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "                    AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"558.0\" prefWidth\u003d\"388.0\"/\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "CarbonGrid": 31
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.exception.DateTimeParseDukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.exception.IndexFormatDukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.exception.LoadFileFailDukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import java.io.ByteArrayInputStream;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    private StringBuilder tests \u003d new StringBuilder().append(\"todo borrow book\\n\")"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        .append(\"list\\n\")"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        .append(\"deadline D1 Project Assignment /by 2dect1900\\n\")"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        .append(\"done 0\\n\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        .append(\"done 3\\n\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        .append(\"event music festival\\n\")"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        .append(\"bye\\n\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    private String[] expected \u003d {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        \"Got it. I\u0027ve added this task:\\n  [T][✘] borrow book\\nNow you have 1 tasks in the list.\\n\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        \"Here are the tasks in your list:\\n1.[T][✘] borrow book\\n\","
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        \"Got it. I\u0027ve added this task:\\n  [D][✘] D1 Project Assignment (by: December 2 2019, 7:00 PM)\\nNow you have 2\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            + \" tasks in the list.\\n\","
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        \"Index given is out of bound.\\nUse from 1 to last index of list only.\\n\","
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        \"Index given is out of bound.\\nUse from 1 to last index of list only.\\n\","
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        \"☹ OOPS!!! The time of an event cannot be empty.\\n\","
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        \"Bye. Hope to see you again soon!\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    };"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public void fixedTest() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        assertThrows(IndexFormatDukeException.class, () -\u003e Parser.parse(\"done 3k\"));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        assertThrows(IndexFormatDukeException.class, () -\u003e Parser.parse(\"  delete   1.0 \"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        assertDoesNotThrow(() -\u003e Parser.parse(\" list 0\"));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        assertDoesNotThrow(() -\u003e Parser.parse(\"  delete   -10 \"));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        assertDoesNotThrow(() -\u003e Parser.parse(\"  event  music festival  /at dec2t2019 \"));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        assertDoesNotThrow(() -\u003e Parser.parse(\"event golf /at 2 December\"));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        assertDoesNotThrow(() -\u003e Parser.parse(\"event bowling /at 2/12 T2019\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        assertDoesNotThrow(() -\u003e Parser.parse(\"  deadline D1 project assignment   /by t2019 \"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        assertThrows(DateTimeParseDukeException.class, () -\u003e Parser.parse(\"event running /at 2019\"));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        assertThrows(LoadFileFailDukeException.class, () -\u003e new Storage(\"doesNotExist.txt\").load());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public void runTest() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        System.setIn(new ByteArrayInputStream(tests.toString()"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            .getBytes()));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        ui \u003d new TestUi();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        storage \u003d new TestStorage();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "                System.out.println(fullCommand);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "                ui.show(e.getMessage());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "                assertEquals(expected[i++], ui.toString());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CarbonGrid": 89
    }
  },
  {
    "path": "src/test/java/TestStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "public class TestStorage extends Storage {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public TestStorage() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        super(\"\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public void rewrite(String content) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CarbonGrid": 11
    }
  },
  {
    "path": "src/test/java/TestUi.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "public class TestUi extends Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    private String output;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public void show(String str) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        if (!str.endsWith(\"\\n\")) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "            str +\u003d \u0027\\n\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        output \u003d str;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        super.show(str);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        String buf \u003d output;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        output \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "        return buf;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CarbonGrid": 21
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "REM cd to bat\u0027s folder"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "cd %~dp0"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "java -Dfile.encoding\u003dUnicode -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CarbonGrid"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "CarbonGrid": 23
    }
  }
]
