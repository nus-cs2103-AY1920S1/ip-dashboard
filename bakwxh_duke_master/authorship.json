[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @author bakwxh"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * By time of deadline."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate Date by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * @param description Description."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * @param by By time."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public Deadline(final String description, final Date by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * Shows task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public String showTask() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        return \"[D]\" + super.showTask() + \" (by: \" + by.toString() + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * Shows task as its saving format."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \tSimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \tString byString \u003d sdf.format(by);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \tif (super.getDone()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \t\treturn \"donedeadline \" + super.getDesc() + \" /by \" + byString;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \t} else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \t\treturn \"deadline \" + super.getDesc() + \" /by \" + byString;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \t}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * Returns by time."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * @return By time."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public Date getBy() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \treturn this.by;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bakwxh": 53
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @author bakwxh"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Storage object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Task list object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate TaskList tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * UI object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Parser object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate Parser parser;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * @param filePath Path to save file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public Duke(final String filePath) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        ui.setTaskList(tasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * Main run method."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \ttry {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tstorage.load();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (DukeException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tui.showException(e);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \tui.logoAndIntro();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \tScanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\twhile (sc.hasNext()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tString rawInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tString command \u003d parser.getCommand(rawInput);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\ttry {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tif (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tui.printBye();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t} else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tui.printList();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t} else if (command.equals(\"find\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tui.printFind(parser.processFind(rawInput));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t} else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tint index \u003d parser.processDone(rawInput);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\ttasks.doneTask(index);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tui.printDone(index);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t} else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tui.printDeleted(tasks.deleteTask(parser.processDelete(rawInput)));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t    \t\t} else if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\ttasks.addTodo(parser.todoDesc(rawInput));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tui.printAdded();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t} else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\ttasks.addDeadline(parser.deadlineDesc(rawInput), parser.deadlineTime(rawInput));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tui.printAdded();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t} else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\ttasks.addEvent(parser.eventDesc(rawInput), parser.eventTime(rawInput));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tui.printAdded();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t} else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tui.showLoadingError();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tstorage.saveMemory(tasks);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t    \t} catch (DukeException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t    \t\tui.showException(e);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t    \t}"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tsc.close();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Main method."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param args Args."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic static void main(final String[] args) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tString dir \u003d System.getProperty(\"user.dir\") + \"/savedData.txt\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tnew Duke(dir).run();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "bakwxh": 94
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @author bakwxh"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Constructor."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param message Exception message."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic DukeException(final String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tsuper(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Removes \"DukeException: \" from start of message."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t@Override public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tString temp \u003d super.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\treturn temp.substring(15);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bakwxh": 21
    }
  },
  {
    "path": "src/main/java/Duke_BACKUP_242.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c .merge_file_a00820"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e .merge_file_a24788"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tstatic ArrayList\u003cTask\u003e memory;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tstatic String line \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c .merge_file_a00820"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic static void main(String[] args) throws IOException, ParseException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e .merge_file_a24788"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tmemory \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tloadSave();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println(\" Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println(\" What can I do for you?\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tScanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\twhile (sc.hasNext()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tString rawInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tif (rawInput.toLowerCase().equals(\"bye\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tSystem.out.println(\" \" + \"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t} else if (rawInput.toLowerCase().equals(\"list\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tSystem.out.println(\" \" + \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tlist();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t} else if (rawInput.toLowerCase().startsWith(\"done\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tdoneTask(rawInput);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tsaveMemory();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t} else if (rawInput.toLowerCase().startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tdeleteTask(rawInput);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tsaveMemory();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t} else if (rawInput.toLowerCase().startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\taddTodo(rawInput);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tsaveMemory();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t} else if (rawInput.toLowerCase().startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\taddDeadline(rawInput);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tsaveMemory();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t} else if (rawInput.toLowerCase().startsWith(\"event\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\taddEvent(rawInput);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tsaveMemory();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t} else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tSystem.out.println(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tsc.close();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate static void addEvent(String rawInput) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tString[] eventInput \u003d rawInput.substring(6).split(\"/at\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tString description \u003d eventInput[0].trim();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c .merge_file_a00820"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tString at \u003d eventInput[1].trim();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tString atRaw \u003d eventInput[1].trim();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tDate at \u003d sdf.parse(atRaw);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e .merge_file_a24788"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tTask newTask \u003d new Event(description, at);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tmemory.add(newTask);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" \" + \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\"   \" + newTask.showTask());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tif (memory.size() \u003d\u003d 1) System.out.println(\" \" + \"Now you have 1 task in your list\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\telse System.out.println(\" \" + \"Now you have \" + memory.size() + \" tasks in your list.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" ☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" ☹ OOPS!!! The timing of a event cannot be empty.\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c .merge_file_a00820"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (ParseException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" ☹ OOPS!!! The timing of the event is invalid.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e .merge_file_a24788"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate static void addDeadline(String rawInput) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tString[] deadlineInput \u003d rawInput.substring(9).split(\"/by\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tString description \u003d deadlineInput[0].trim();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c .merge_file_a00820"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tString by \u003d deadlineInput[1].trim();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tString byRaw \u003d deadlineInput[1].trim();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tDate by \u003d sdf.parse(byRaw);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e .merge_file_a24788"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tTask newTask \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tmemory.add(newTask);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" \" + \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\"   \" + newTask.showTask());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tif (memory.size() \u003d\u003d 1) System.out.println(\" \" + \"Now you have 1 task in your list\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\telse System.out.println(\" \" + \"Now you have \" + memory.size() + \" tasks in your list.\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" ☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" ☹ OOPS!!! The timing of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c .merge_file_a00820"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (ParseException e) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" ☹ OOPS!!! The timing of the event is invalid.\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e .merge_file_a24788"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate static void addTodo(String rawInput) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tString description \u003d rawInput.substring(5);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tTask newTask \u003d new Todo(description);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tmemory.add(newTask);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" \" + \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\"   \" + newTask.showTask());"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tif (memory.size() \u003d\u003d 1) System.out.println(\" \" + \"Now you have 1 task in your list\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\telse System.out.println(\" \" + \"Now you have \" + memory.size() + \" tasks in your list.\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate static void deleteTask(String rawInput) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tint listIndex \u003d Integer.parseInt(rawInput.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tTask removed \u003d memory.get(listIndex);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tmemory.remove(listIndex);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" \" + \"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\"   \" + removed.showTask());"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tif (memory.size() \u003d\u003d 1) System.out.println(\" \" + \"Now you have 1 task in your list\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\telse System.out.println(\" \" + \"Now you have \" + memory.size() + \" tasks in your list.\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" ☹ OOPS!!! Please indicate which task to delete.\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate static void doneTask(String rawInput) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tint listIndex \u003d Integer.parseInt(rawInput.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tmemory.get(listIndex).markAsDone();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" \" + \"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\"   \" + memory.get(listIndex).showTask());"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" ☹ OOPS!!! Please indicate which task is done.\");"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate static void saveMemory() throws IOException {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tString dir \u003d System.getProperty(\"user.dir\") + \"/savedData.txt\";"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tBufferedWriter out \u003d new BufferedWriter(new FileWriter(dir));"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tfor (Task t : memory) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tout.write(t.toSave() + \"\\n\");"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tout.flush();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tout.close();"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c .merge_file_a00820"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate static void loadSave() throws IOException {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate static void loadSave() throws IOException, ParseException {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e .merge_file_a24788"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tString dir \u003d System.getProperty(\"user.dir\") + \"/savedData.txt\";"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tFileInputStream test \u003d new FileInputStream(dir);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tScanner sc \u003d new Scanner(test);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\twhile (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tString rawInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tif (rawInput.toLowerCase().startsWith(\"done\")) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tString procInput \u003d rawInput.substring(4);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tif (procInput.toLowerCase().startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tString description \u003d procInput.substring(5);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tTask newTask \u003d new Todo(description);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tmemory.add(newTask);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t} else if (procInput.toLowerCase().startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tString[] deadlineInput \u003d procInput.substring(9).split(\"/by\");"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tString description \u003d deadlineInput[0].trim();"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c .merge_file_a00820"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tString by \u003d deadlineInput[1].trim();"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tString byRaw \u003d deadlineInput[1].trim();"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tSimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tDate by \u003d sdf.parse(byRaw);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e .merge_file_a24788"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tTask newTask \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tmemory.add(newTask);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t} else if (procInput.toLowerCase().startsWith(\"event\")) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tString[] eventInput \u003d procInput.substring(6).split(\"/at\");"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tString description \u003d eventInput[0].trim();"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c .merge_file_a00820"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tString at \u003d eventInput[1].trim();"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tString atRaw \u003d eventInput[1].trim();"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tSimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tDate at \u003d sdf.parse(atRaw);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e .merge_file_a24788"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tTask newTask \u003d new Event(description, at);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tmemory.add(newTask);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tmemory.get(memory.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t} else if (rawInput.toLowerCase().startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tString description \u003d rawInput.substring(5);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tTask newTask \u003d new Todo(description);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tmemory.add(newTask);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t} else if (rawInput.toLowerCase().startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tString[] deadlineInput \u003d rawInput.substring(9).split(\"/by\");"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tString description \u003d deadlineInput[0].trim();"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c .merge_file_a00820"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tString by \u003d deadlineInput[1].trim();"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tString byRaw \u003d deadlineInput[1].trim();"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tSimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tDate by \u003d sdf.parse(byRaw);"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e .merge_file_a24788"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tTask newTask \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tmemory.add(newTask);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t} else if (rawInput.toLowerCase().startsWith(\"event\")) {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tString[] eventInput \u003d rawInput.substring(6).split(\"/at\");"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tString description \u003d eventInput[0].trim();"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c .merge_file_a00820"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tString at \u003d eventInput[1].trim();"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tString atRaw \u003d eventInput[1].trim();"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tSimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tDate at \u003d sdf.parse(atRaw);"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e .merge_file_a24788"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tTask newTask \u003d new Event(description, at);"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tmemory.add(newTask);"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tsc.close();"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tFile newData \u003d new File(dir);"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tFileOutputStream fos \u003d new FileOutputStream(newData);"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tfos.flush();"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tfos.close();"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate static void list() {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tint counter \u003d 1;"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tfor (Task t : memory) {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" \" + counter + \".\" + t.showTask());"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tcounter++;"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bakwxh": 331
    }
  },
  {
    "path": "src/main/java/Duke_LOCAL_242.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tstatic ArrayList\u003cTask\u003e memory;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tstatic String line \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tmemory \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tloadSave();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println(\" Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println(\" What can I do for you?\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tScanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\twhile (sc.hasNext()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tString rawInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tif (rawInput.toLowerCase().equals(\"bye\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tSystem.out.println(\" \" + \"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t} else if (rawInput.toLowerCase().equals(\"list\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tSystem.out.println(\" \" + \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tlist();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t} else if (rawInput.toLowerCase().startsWith(\"done\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tdoneTask(rawInput);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tsaveMemory();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t} else if (rawInput.toLowerCase().startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tdeleteTask(rawInput);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tsaveMemory();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t} else if (rawInput.toLowerCase().startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\taddTodo(rawInput);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tsaveMemory();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t} else if (rawInput.toLowerCase().startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\taddDeadline(rawInput);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tsaveMemory();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t} else if (rawInput.toLowerCase().startsWith(\"event\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\taddEvent(rawInput);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tsaveMemory();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t} else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tSystem.out.println(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tsc.close();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate static void addEvent(String rawInput) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tString[] eventInput \u003d rawInput.substring(6).split(\"/at\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tString description \u003d eventInput[0].trim();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tString at \u003d eventInput[1].trim();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tTask newTask \u003d new Event(description, at);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tmemory.add(newTask);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" \" + \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\"   \" + newTask.showTask());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tif (memory.size() \u003d\u003d 1) System.out.println(\" \" + \"Now you have 1 task in your list\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\telse System.out.println(\" \" + \"Now you have \" + memory.size() + \" tasks in your list.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" ☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" ☹ OOPS!!! The timing of a event cannot be empty.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate static void addDeadline(String rawInput) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tString[] deadlineInput \u003d rawInput.substring(9).split(\"/by\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tString description \u003d deadlineInput[0].trim();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tString by \u003d deadlineInput[1].trim();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tTask newTask \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tmemory.add(newTask);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" \" + \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\"   \" + newTask.showTask());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tif (memory.size() \u003d\u003d 1) System.out.println(\" \" + \"Now you have 1 task in your list\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\telse System.out.println(\" \" + \"Now you have \" + memory.size() + \" tasks in your list.\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" ☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" ☹ OOPS!!! The timing of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate static void addTodo(String rawInput) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tString description \u003d rawInput.substring(5);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tTask newTask \u003d new Todo(description);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tmemory.add(newTask);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" \" + \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\"   \" + newTask.showTask());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tif (memory.size() \u003d\u003d 1) System.out.println(\" \" + \"Now you have 1 task in your list\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\telse System.out.println(\" \" + \"Now you have \" + memory.size() + \" tasks in your list.\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate static void deleteTask(String rawInput) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tint listIndex \u003d Integer.parseInt(rawInput.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tTask removed \u003d memory.get(listIndex);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tmemory.remove(listIndex);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" \" + \"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\"   \" + removed.showTask());"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tif (memory.size() \u003d\u003d 1) System.out.println(\" \" + \"Now you have 1 task in your list\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\telse System.out.println(\" \" + \"Now you have \" + memory.size() + \" tasks in your list.\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" ☹ OOPS!!! Please indicate which task to delete.\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate static void doneTask(String rawInput) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tint listIndex \u003d Integer.parseInt(rawInput.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tmemory.get(listIndex).markAsDone();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" \" + \"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\"   \" + memory.get(listIndex).showTask());"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" ☹ OOPS!!! Please indicate which task is done.\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate static void saveMemory() throws IOException {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tString dir \u003d System.getProperty(\"user.dir\") + \"/savedData.txt\";"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tBufferedWriter out \u003d new BufferedWriter(new FileWriter(dir));"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tfor (Task t : memory) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tout.write(t.toSave() + \"\\n\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tout.flush();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tout.close();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate static void loadSave() throws IOException {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tString dir \u003d System.getProperty(\"user.dir\") + \"/savedData.txt\";"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tFileInputStream test \u003d new FileInputStream(dir);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tScanner sc \u003d new Scanner(test);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\twhile (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tString rawInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tif (rawInput.toLowerCase().startsWith(\"done\")) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tString procInput \u003d rawInput.substring(4);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tif (procInput.toLowerCase().startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tString description \u003d procInput.substring(5);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tTask newTask \u003d new Todo(description);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tmemory.add(newTask);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t} else if (procInput.toLowerCase().startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tString[] deadlineInput \u003d procInput.substring(9).split(\"/by\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tString description \u003d deadlineInput[0].trim();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tString by \u003d deadlineInput[1].trim();"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tTask newTask \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tmemory.add(newTask);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t} else if (procInput.toLowerCase().startsWith(\"event\")) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tString[] eventInput \u003d procInput.substring(6).split(\"/at\");"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tString description \u003d eventInput[0].trim();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tString at \u003d eventInput[1].trim();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tTask newTask \u003d new Event(description, at);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tmemory.add(newTask);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tmemory.get(memory.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t} else if (rawInput.toLowerCase().startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tString description \u003d rawInput.substring(5);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tTask newTask \u003d new Todo(description);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tmemory.add(newTask);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t} else if (rawInput.toLowerCase().startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tString[] deadlineInput \u003d rawInput.substring(9).split(\"/by\");"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tString description \u003d deadlineInput[0].trim();"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tString by \u003d deadlineInput[1].trim();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tTask newTask \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tmemory.add(newTask);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t} else if (rawInput.toLowerCase().startsWith(\"event\")) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tString[] eventInput \u003d rawInput.substring(6).split(\"/at\");"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tString description \u003d eventInput[0].trim();"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tString at \u003d eventInput[1].trim();"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tTask newTask \u003d new Event(description, at);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tmemory.add(newTask);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tsc.close();"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tFile newData \u003d new File(dir);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tFileOutputStream fos \u003d new FileOutputStream(newData);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tfos.flush();"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tfos.close();"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate static void list() {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tint counter \u003d 1;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tfor (Task t : memory) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" \" + counter + \".\" + t.showTask());"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tcounter++;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bakwxh": 264
    }
  },
  {
    "path": "src/main/java/Duke_REMOTE_242.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tstatic ArrayList\u003cTask\u003e memory;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tstatic String line \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic static void main(String[] args) throws IOException, ParseException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tmemory \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tloadSave();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println(\" Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println(\" What can I do for you?\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tScanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\twhile (sc.hasNext()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tString rawInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tif (rawInput.toLowerCase().equals(\"bye\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tSystem.out.println(\" \" + \"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t} else if (rawInput.toLowerCase().equals(\"list\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tSystem.out.println(\" \" + \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tlist();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t} else if (rawInput.toLowerCase().startsWith(\"done\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tdoneTask(rawInput);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tsaveMemory();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t} else if (rawInput.toLowerCase().startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tdeleteTask(rawInput);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tsaveMemory();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t} else if (rawInput.toLowerCase().startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\taddTodo(rawInput);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tsaveMemory();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t} else if (rawInput.toLowerCase().startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\taddDeadline(rawInput);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tsaveMemory();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t} else if (rawInput.toLowerCase().startsWith(\"event\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\taddEvent(rawInput);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tsaveMemory();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t} else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tSystem.out.println(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tsc.close();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate static void addEvent(String rawInput) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tString[] eventInput \u003d rawInput.substring(6).split(\"/at\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tString description \u003d eventInput[0].trim();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tString atRaw \u003d eventInput[1].trim();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tDate at \u003d sdf.parse(atRaw);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tTask newTask \u003d new Event(description, at);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tmemory.add(newTask);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" \" + \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\"   \" + newTask.showTask());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tif (memory.size() \u003d\u003d 1) System.out.println(\" \" + \"Now you have 1 task in your list\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\telse System.out.println(\" \" + \"Now you have \" + memory.size() + \" tasks in your list.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" ☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" ☹ OOPS!!! The timing of a event cannot be empty.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (ParseException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" ☹ OOPS!!! The timing of the event is invalid.\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate static void addDeadline(String rawInput) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tString[] deadlineInput \u003d rawInput.substring(9).split(\"/by\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tString description \u003d deadlineInput[0].trim();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tString byRaw \u003d deadlineInput[1].trim();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tDate by \u003d sdf.parse(byRaw);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tTask newTask \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tmemory.add(newTask);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" \" + \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\"   \" + newTask.showTask());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tif (memory.size() \u003d\u003d 1) System.out.println(\" \" + \"Now you have 1 task in your list\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\telse System.out.println(\" \" + \"Now you have \" + memory.size() + \" tasks in your list.\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" ☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" ☹ OOPS!!! The timing of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (ParseException e) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" ☹ OOPS!!! The timing of the event is invalid.\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate static void addTodo(String rawInput) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tString description \u003d rawInput.substring(5);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tTask newTask \u003d new Todo(description);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tmemory.add(newTask);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" \" + \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\"   \" + newTask.showTask());"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tif (memory.size() \u003d\u003d 1) System.out.println(\" \" + \"Now you have 1 task in your list\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\telse System.out.println(\" \" + \"Now you have \" + memory.size() + \" tasks in your list.\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate static void deleteTask(String rawInput) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tint listIndex \u003d Integer.parseInt(rawInput.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tTask removed \u003d memory.get(listIndex);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tmemory.remove(listIndex);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" \" + \"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\"   \" + removed.showTask());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tif (memory.size() \u003d\u003d 1) System.out.println(\" \" + \"Now you have 1 task in your list\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\telse System.out.println(\" \" + \"Now you have \" + memory.size() + \" tasks in your list.\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" ☹ OOPS!!! Please indicate which task to delete.\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate static void doneTask(String rawInput) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tint listIndex \u003d Integer.parseInt(rawInput.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tmemory.get(listIndex).markAsDone();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" \" + \"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\"   \" + memory.get(listIndex).showTask());"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" ☹ OOPS!!! Please indicate which task is done.\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate static void saveMemory() throws IOException {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tString dir \u003d System.getProperty(\"user.dir\") + \"/savedData.txt\";"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tBufferedWriter out \u003d new BufferedWriter(new FileWriter(dir));"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tfor (Task t : memory) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tout.write(t.toSave() + \"\\n\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tout.flush();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tout.close();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate static void loadSave() throws IOException, ParseException {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tString dir \u003d System.getProperty(\"user.dir\") + \"/savedData.txt\";"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tFileInputStream test \u003d new FileInputStream(dir);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tScanner sc \u003d new Scanner(test);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\twhile (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tString rawInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tif (rawInput.toLowerCase().startsWith(\"done\")) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tString procInput \u003d rawInput.substring(4);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tif (procInput.toLowerCase().startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tString description \u003d procInput.substring(5);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tTask newTask \u003d new Todo(description);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tmemory.add(newTask);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t} else if (procInput.toLowerCase().startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tString[] deadlineInput \u003d procInput.substring(9).split(\"/by\");"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tString description \u003d deadlineInput[0].trim();"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tString byRaw \u003d deadlineInput[1].trim();"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tSimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tDate by \u003d sdf.parse(byRaw);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tTask newTask \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tmemory.add(newTask);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t} else if (procInput.toLowerCase().startsWith(\"event\")) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tString[] eventInput \u003d procInput.substring(6).split(\"/at\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tString description \u003d eventInput[0].trim();"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tString atRaw \u003d eventInput[1].trim();"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tSimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tDate at \u003d sdf.parse(atRaw);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tTask newTask \u003d new Event(description, at);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tmemory.add(newTask);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tmemory.get(memory.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t} else if (rawInput.toLowerCase().startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tString description \u003d rawInput.substring(5);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tTask newTask \u003d new Todo(description);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tmemory.add(newTask);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t} else if (rawInput.toLowerCase().startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tString[] deadlineInput \u003d rawInput.substring(9).split(\"/by\");"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tString description \u003d deadlineInput[0].trim();"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tString byRaw \u003d deadlineInput[1].trim();"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tSimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tDate by \u003d sdf.parse(byRaw);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tTask newTask \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tmemory.add(newTask);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t} else if (rawInput.toLowerCase().startsWith(\"event\")) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tString[] eventInput \u003d rawInput.substring(6).split(\"/at\");"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tString description \u003d eventInput[0].trim();"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tString atRaw \u003d eventInput[1].trim();"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tSimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tDate at \u003d sdf.parse(atRaw);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tTask newTask \u003d new Event(description, at);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tmemory.add(newTask);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tsc.close();"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tFile newData \u003d new File(dir);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tFileOutputStream fos \u003d new FileOutputStream(newData);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tfos.flush();"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tfos.close();"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate static void list() {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tint counter \u003d 1;"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tfor (Task t : memory) {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" \" + counter + \".\" + t.showTask());"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tcounter++;"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bakwxh": 289
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @author bakwxh"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @author bakwxh"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * At time."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate Date at;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * @param description Description."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * @param at At time."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public Event(final String description, final Date at) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * Shows task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public String showTask() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        return \"[E]\" + super.showTask() + \" (at: \" + at.toString() + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * Returns at time."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * @return At time."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public Date getAt() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \treturn this.at;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * Shows task as its saving format."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * @return Task as its saving format."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \tSimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \tString atString \u003d sdf.format(at);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \tif (super.getDone()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \t\treturn \"doneevent \" + super.getDesc() + \" /at \" + atString;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \t} else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \t\treturn \"event \" + super.getDesc() + \" /at \" + atString;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \t}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bakwxh": 57
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @author bakwxh"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Retrieve command from user input."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param rawInput Raw input from user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @return The command found in rawInput."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic String getCommand(final String rawInput) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tif (rawInput.toLowerCase().equals(\"bye\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\treturn \"bye\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} else if (rawInput.toLowerCase().equals(\"list\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\treturn \"list\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} else if (rawInput.toLowerCase().startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\treturn \"todo\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} else if (rawInput.toLowerCase().startsWith(\"done\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\treturn \"done\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} else if (rawInput.toLowerCase().startsWith(\"find\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\treturn \"find\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} else if (rawInput.toLowerCase().startsWith(\"event\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\treturn \"event\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} else if (rawInput.toLowerCase().startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\treturn \"delete\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} else if (rawInput.toLowerCase().startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\treturn \"deadline\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\treturn \"none\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Process data from done command."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param rawInput Raw user input."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @return Index of task that is done."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @throws DukeException Exceptions."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic int processDone(final String rawInput) throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\treturn Integer.parseInt(rawInput.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tthrow new DukeException(\"Please indicate which task is done.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Process data from delete command."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param rawInput Raw user input."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @return Index of task that is deleted."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @throws DukeException Exceptions;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic int processDelete(final String rawInput) throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\treturn Integer.parseInt(rawInput.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tthrow new DukeException(\"Please indicate which task to delete.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Process description of deadline task."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param rawInput Raw user input."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @return Description of deadline."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @throws DukeException Exceptions."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic String deadlineDesc(final String rawInput) throws DukeException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\treturn rawInput.substring(9).split(\"/by\")[0].trim();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tthrow new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Process time of deadline task."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param rawInput Raw user input."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @return Time of deadline."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @throws DukeException Exceptions."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic Date deadlineTime(final String rawInput) throws DukeException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\treturn sdf.parse(rawInput.substring(9).split(\"/by\")[1].trim());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tthrow new DukeException(\"The timing of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (ParseException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tthrow new DukeException(\"The timing of the event is invalid.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Process description of event task."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param rawInput Raw user input."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @return Description of event."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @throws DukeException Exceptions."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic String eventDesc(final String rawInput) throws DukeException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\treturn rawInput.substring(5).split(\"/at\")[0].trim();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tthrow new DukeException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Process time of event task."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param rawInput Raw user input."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @return Time of event."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @throws DukeException Exceptions."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic Date eventTime(final String rawInput) throws DukeException {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\treturn sdf.parse(rawInput.substring(9).split(\"/at\")[1].trim());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tthrow new DukeException(\"The timing of an event cannot be empty.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (ParseException e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tthrow new DukeException(\"The timing of the event is invalid.\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Process description of to-do task."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param rawInput Raw user input."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @return Description of to-do."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @throws DukeException Exceptions."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic String todoDesc(final String rawInput) throws DukeException {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\treturn rawInput.substring(5);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tthrow new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Returns keyword for find operation."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param rawInput Raw user input."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @return Find keyword."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @throws DukeException Exceptions."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic String processFind(final String rawInput) throws DukeException {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\treturn rawInput.substring(5);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tthrow new DukeException(\"The keyword for find cannot be empty.\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bakwxh": 154
    }
  },
  {
    "path": "src/main/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @author bakwxh"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Parser Test."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tvoid test() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tParser parser \u003d new Parser();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tString output \u003d parser.getCommand(\"todo die\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tassertEquals(\"todo\", output);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bakwxh": 20
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @author bakwxh"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Path to save file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate String filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Constructor."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param filePath Path to save file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic Storage(final String filePath) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tthis.filePath \u003d filePath;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Saves memory to file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param tasks Task list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @throws DukeException Exceptions."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic void saveMemory(final TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tArrayList\u003cTask\u003e memory \u003d tasks.getMemory();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tString dir \u003d System.getProperty(\"user.dir\") + \"/savedData.txt\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tBufferedWriter out;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tout \u003d new BufferedWriter(new FileWriter(dir));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (IOException e1) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tthrow new DukeException(\"Error saving data.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tfor (Task t : memory) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\ttry {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tout.write(t.toSave() + \"\\n\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t} catch (IOException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tthrow new DukeException(\"Error saving data.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tout.flush();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tout.close();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (IOException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tthrow new DukeException(\"Error saving data.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Loads from save file."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @return Returns array list with saved tasks."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @throws DukeException Exceptions."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tFileInputStream test \u003d new FileInputStream(filePath);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tScanner sc \u003d new Scanner(test);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\twhile (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tString rawInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tif (rawInput.toLowerCase().startsWith(\"done\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tString procInput \u003d rawInput.substring(4);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tif (procInput.toLowerCase().startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\ttaskList.add(new Todo(procInput.substring(5)));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t} else if (procInput.toLowerCase().startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tString[] deadlineInput \u003d procInput.substring(9).split(\"/by\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tSimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\ttaskList.add(new Deadline(deadlineInput[0].trim(), sdf.parse(deadlineInput[1].trim())));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t} else if (procInput.toLowerCase().startsWith(\"event\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tString[] eventInput \u003d procInput.substring(6).split(\"/at\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tSimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\ttaskList.add(new Event(eventInput[0].trim(), sdf.parse(eventInput[1].trim())));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\ttaskList.get(taskList.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t} else if (rawInput.toLowerCase().startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\ttaskList.add(new Todo(rawInput.substring(5)));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t} else if (rawInput.toLowerCase().startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tString[] deadlineInput \u003d rawInput.substring(9).split(\"/by\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tSimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\ttaskList.add(new Deadline(deadlineInput[0].trim(), sdf.parse(deadlineInput[1].trim())));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t} else if (rawInput.toLowerCase().startsWith(\"event\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tString[] eventInput \u003d rawInput.substring(6).split(\"/at\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tSimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\ttaskList.add(new Event(eventInput[0].trim(), sdf.parse(eventInput[1].trim())));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tsc.close();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tFile newData \u003d new File(filePath);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tFileOutputStream fos;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\ttry {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tfos \u003d new FileOutputStream(newData);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tfos.flush();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tfos.close();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t} catch (IOException e1) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tthrow new DukeException(\"Save file creation failed\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (ParseException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tthrow new DukeException(\"Save file timings corrupted\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\treturn taskList;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bakwxh": 114
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @author bakwxh"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tstatic String line \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * Description."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * Done state."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * @param description Description."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public Task(final String description) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * Retrieves status icon."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * @return Status Icon."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \treturn (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * Shows task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * @return Task in string format."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public String showTask() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \treturn \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * Marks task as done."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \tisDone \u003d true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * Shows task as its saving format."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * @return Task in string format for saving purposes."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\treturn null;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * Description."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * @return Description."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public String getDesc() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \treturn this.description;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * Is done."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * @return Is done."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \treturn this.isDone;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bakwxh": 71
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @author bakwxh"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Array list for memory."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate ArrayList\u003cTask\u003e memory;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/** Constructor."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param inputMemory Previous memory."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic TaskList(final ArrayList\u003cTask\u003e inputMemory) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tmemory \u003d inputMemory;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Constructor."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic TaskList() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tmemory \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Lists out tasks in memory."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic void list() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tint counter \u003d 1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tfor (Task t : memory) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" \" + counter + \".\" + t.showTask());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tcounter++;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Lists tasks with keyword in them."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param keyword Keyword."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic void keywordList(final String keyword) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tint counter \u003d 1;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tfor (Task t : memory) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tif (t.getDesc().contains(keyword)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tSystem.out.println(\" \" + counter + \".\" + t.showTask());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tcounter++;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Lists the newest task in memory."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @return Newest task."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic String listLatest() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\treturn memory.get(memory.size() - 1).showTask();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Adds deadline task."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param desc Description of deadline."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param by By time of deadline."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic void addDeadline(final String desc, final Date by) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tTask newTask \u003d new Deadline(desc, by);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tmemory.add(newTask);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Adds event task."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param desc Description of event."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param at At time of event."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic void addEvent(final String desc, final Date at) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tTask newTask \u003d new Event(desc, at);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tmemory.add(newTask);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Adds to-do task."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param desc Description of to-do."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic void addTodo(final String desc) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tTask newTask \u003d new Todo(desc);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tmemory.add(newTask);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Deletes task."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param index Index of task in memory."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @return Deleted task."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @throws DukeException Exceptions."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic Task deleteTask(final int index) throws DukeException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tTask removed \u003d memory.get(index);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tmemory.remove(index);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\treturn removed;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tthrow new DukeException(\"Please indicate which task to delete.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Marks task as done."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param index Index of done task."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @throws DukeException Exception."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic void doneTask(final int index) throws DukeException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tmemory.get(index).markAsDone();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\"   \" + memory.get(index).showTask());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tthrow new DukeException(\"Indicated task does not exist.\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Retrieves memory array list."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @return Memory array list."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic ArrayList\u003cTask\u003e getMemory() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\treturn this.memory;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bakwxh": 128
    }
  },
  {
    "path": "src/main/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @author bakwxh"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Task List Test."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tvoid test() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tTaskList tasklist \u003d new TaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttasklist.addTodo(\"test\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tString testing \u003d tasklist.listLatest();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tString result \u003d \"[T][\" + \"\\u2718\" + \"] test\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tassertEquals(result, testing);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bakwxh": 22
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @author bakwxh"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Constructor."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param description Description."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic Todo(final String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * Shows task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public String showTask() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        return \"[T]\" + super.showTask();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * Shows task as its saving format."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \tif (super.getDone()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \t\treturn \"donetodo \" + super.getDesc();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \t} else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \t\treturn \"todo \" + super.getDesc();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \t}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bakwxh": 33
    }
  },
  {
    "path": "src/main/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @author bakwxh"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "class TodoTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * To Do Test."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tvoid test() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tTodo todo \u003d new Todo(\"test\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tString testing \u003d todo.toSave();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tString result \u003d \"todo test\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tassertEquals(result, testing);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bakwxh": 21
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @author bakwxh"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tstatic String line \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Pointer to tasklist object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate TaskList tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Error from unidentified command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic void showLoadingError() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println(line + \"\\n\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Shows thrown exception."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param e Exception"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic void showException(final Exception e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println(\" ☹ OOPS!!! \" + e.toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println(line + \"\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Shows logo and intro."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic void logoAndIntro() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tString logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println(\" Hello! I\u0027m Duke\\n What can I do for you?\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println(line + \"\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Shows bye message."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic void printBye() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println(\" \" + \"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println(line + \"\\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Shows list of tasks."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic void printList() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println(\" \" + \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttasks.list();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println(line + \"\\n\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Sets pointer to Duke tasklist."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param tasks Tasklist."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic void setTaskList(final TaskList tasks) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tthis.tasks \u003d tasks;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Shows done task."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param index Index of done task."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic void printDone(final int index) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println(\" \" + \"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println(\"   \" + tasks.getMemory().get(index).showTask());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println(line + \"\\n\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Shows deleted task."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param t Deleted task."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic void printDeleted(final Task t) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println(\" \" + \"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println(\"   \" + t.showTask());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tif (tasks.getMemory().size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" \" + \"Now you have 1 task in your list\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.print(\" \" + \"Now you have \");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.print(tasks.getMemory().size());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" tasks in your list.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println(line + \"\\n\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Shows added task."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic void printAdded() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println(\" \" + \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println(\"   \" + tasks.listLatest());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tif (tasks.getMemory().size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" \" + \"Now you have 1 task in your list\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.print(\" \" + \"Now you have \");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.print(tasks.getMemory().size());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSystem.out.println(\" tasks in your list.\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println(line + \"\\n\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Displays list of tasks containing keyword."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param keyword Keyword."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic void printFind(final String keyword) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println(line);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println(\" \" + \"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttasks.keywordList(keyword);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tSystem.out.println(line + \"\\n\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bakwxh": 129
    }
  },
  {
    "path": "src/main/java/savedData.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "todo die"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "event die again /at 01/10/1001 1010"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "deadline actually die /by 12/12/2112 2112"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "todo revive"
      }
    ],
    "authorContributionMap": {
      "bakwxh": 4
    }
  }
]
