[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "francislow"
        },
        "content": "run{"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "francislow"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "francislow"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "francislow"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "francislow"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "francislow"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "francislow"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "francislow"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "francislow"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "francislow"
        },
        "content": "test {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "francislow"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "francislow": 31,
      "-": 13
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "![Screenshot of ui](Ui.png)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": "### *_Feature 1: Add tasks to list_*"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": "You can add deadlines, things you need to do or events to list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": "#### Usage:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": "todo"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "francislow"
        },
        "content": "event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "francislow"
        },
        "content": "#### Example of usage: "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "francislow"
        },
        "content": "todo feed cats"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "francislow"
        },
        "content": "deadline feed bird /by 01/02/2019 1600"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "francislow"
        },
        "content": "event feed baby /at 26/01/2019 1600"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "francislow"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "francislow"
        },
        "content": "Task will be added to list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "francislow"
        },
        "content": "### *_Feature 2: List tasks to list_*"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "francislow"
        },
        "content": "#### Usage:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "francislow"
        },
        "content": "list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "francislow"
        },
        "content": "#### Example of usage: "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "francislow"
        },
        "content": "list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "francislow"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "francislow"
        },
        "content": "Task will be listed"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "francislow"
        },
        "content": "### *_Feature 3: Delete tasks_*"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "francislow"
        },
        "content": "You can delete deadlines, todos or events to list"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "francislow"
        },
        "content": "#### Usage:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "francislow"
        },
        "content": "delete"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "francislow"
        },
        "content": "#### Example of usage: "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "francislow"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "francislow"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "francislow"
        },
        "content": "Second task in list will be deleted."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "francislow"
        },
        "content": "### *_Feature 4: Marking tasks as done_*"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "francislow"
        },
        "content": "#### Usage:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "francislow"
        },
        "content": "done"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "francislow"
        },
        "content": "#### Example of usage: "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "francislow"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "francislow"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "francislow"
        },
        "content": "Second task in list will be marked as done."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "francislow"
        },
        "content": "### *_Feature 5: Find specified tasks_*"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "francislow"
        },
        "content": "Find a specific task given a keyword"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "francislow"
        },
        "content": "#### Usage:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "francislow"
        },
        "content": "find"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "francislow"
        },
        "content": "#### Example of usage: "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "francislow"
        },
        "content": "find bird"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "francislow"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "francislow"
        },
        "content": "Any tasks with a bird keyword will be displayed"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "francislow"
        },
        "content": "### *_Feature 6: Sort tasks_*"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "francislow"
        },
        "content": "Sort tasks according chronologically"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "francislow"
        },
        "content": "#### Usage:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "francislow"
        },
        "content": "sort"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "francislow"
        },
        "content": "#### Example of usage: "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "francislow"
        },
        "content": "sort deadlines"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "francislow"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "francislow"
        },
        "content": "deadline tasks will be sorted in chronological order"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "francislow"
        },
        "content": "### *_Feature 7: Exit chat bot_*"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "francislow"
        },
        "content": "#### Usage:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "francislow"
        },
        "content": "bye"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "francislow"
        },
        "content": "#### Example of usage: "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "francislow"
        },
        "content": "bye"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "francislow"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "francislow"
        },
        "content": "Application will be terminated"
      }
    ],
    "authorContributionMap": {
      "francislow": 77,
      "-": 14
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "francislow"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "francislow"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "francislow"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "francislow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "francislow"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "francislow"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "francislow"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "francislow"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "francislow"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "francislow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "francislow"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "francislow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "francislow"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "francislow"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "francislow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "francislow"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "francislow"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "francislow"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "francislow"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "francislow"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "francislow"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "francislow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "francislow"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "francislow"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "francislow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "francislow"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "francislow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "francislow"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "francislow"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "francislow"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "francislow"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "francislow"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "francislow"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "francislow"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "francislow": 61
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": "        tasks \u003d new TaskList(Storage.load());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public String getStartingMessage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return ui.getStartingMessage(tasks);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "francislow"
        },
        "content": "        Command userCommand \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "francislow"
        },
        "content": "        String response;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "francislow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "francislow"
        },
        "content": "            response \u003d userCommand.execute(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "francislow"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "francislow"
        },
        "content": "            response \u003d ui.getErrorMessage(e);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "francislow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "francislow": 28
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": " * A class which deals with runtime exception"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "francislow": 11
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "francislow": 9
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "francislow"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "francislow"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "francislow"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "francislow"
        },
        "content": "    // Start run from here"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "francislow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "francislow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "francislow"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "francislow"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "francislow"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "francislow"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "francislow"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "francislow"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "francislow"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "francislow"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "francislow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "francislow": 32
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "francislow"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "francislow"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "francislow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "francislow"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "francislow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "francislow"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "francislow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "francislow"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "francislow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "francislow"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "francislow"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "francislow"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "francislow"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "francislow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "francislow"
        },
        "content": "     * Automatically runs when main window is created"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "francislow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "francislow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "francislow"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "francislow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "francislow"
        },
        "content": "     * Set Duke reference and show initial message dialog"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "francislow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "francislow"
        },
        "content": "     * @param d Duke object to be set"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "francislow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "francislow"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "francislow"
        },
        "content": "        // Show initial message dialog"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "francislow"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(duke.getStartingMessage(), dukeImage));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "francislow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "francislow"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "francislow"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "francislow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "francislow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "francislow"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "francislow"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "francislow"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "francislow"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "francislow"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "francislow"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "francislow"
        },
        "content": "        );"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "francislow"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "francislow": 63
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": " * A class which deals with making sense of the user command"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "francislow"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public static Command parse(String userinput) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "francislow"
        },
        "content": "        String[] parts \u003d userinput.split(\" \", 2);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "francislow"
        },
        "content": "        switch (parts[0]) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "francislow"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "francislow"
        },
        "content": "            return new ByeCommand(parts);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "francislow"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "francislow"
        },
        "content": "            return new FindCommand(parts);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "francislow"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "francislow"
        },
        "content": "            return new ListCommand(parts);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "francislow"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "francislow"
        },
        "content": "            return new DoneCommand(parts);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "francislow"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "francislow"
        },
        "content": "            return new DeleteCommand(parts);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "francislow"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "francislow"
        },
        "content": "            return new TodoCommand(parts);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "francislow"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "francislow"
        },
        "content": "            return new DeadlineCommand(parts);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "francislow"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "francislow"
        },
        "content": "            return new EventCommand(parts);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "francislow"
        },
        "content": "        case \"sort\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "francislow"
        },
        "content": "            return new SortCommand(parts);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "francislow"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "francislow"
        },
        "content": "            return new WrongCommand(parts);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "francislow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "francislow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "francislow"
        },
        "content": "     * Exclude the first word in a string and returns remaining string"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "francislow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "francislow"
        },
        "content": "     * @param string String containing name, regex and time"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "francislow"
        },
        "content": "     * @param regex the string between name and time"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "francislow"
        },
        "content": "     * @return Returns and array of String containing name and time"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "francislow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public static String[] splitIntoNameAndTime(String string, String regex) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return string.split(regex, 2);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "francislow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "francislow"
        },
        "content": "     * Change user input time format(2/12/2019 1800) to LocalDateTime format"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "francislow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "francislow"
        },
        "content": "     * @param dateTime A specific format of String containing date and time"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "francislow"
        },
        "content": "     * @return Returns the corresponding LocalDateTime"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "francislow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public static LocalDateTime changeToDateTimeFormat(String dateTime) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "francislow"
        },
        "content": "        String date \u003d dateTime.split(\" \")[0];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "francislow"
        },
        "content": "        String time \u003d dateTime.split(\" \")[1];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "francislow"
        },
        "content": "        LocalDate localDate \u003d LocalDate.of(Integer.parseInt(date.split(\"/\")[2]),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "francislow"
        },
        "content": "                Integer.parseInt(date.split(\"/\")[1]),"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "francislow"
        },
        "content": "                Integer.parseInt(date.split(\"/\")[0]));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "francislow"
        },
        "content": "        LocalTime localTime \u003d LocalTime.of(Integer.parseInt(time.substring(0, 2)), Integer.parseInt(time.substring(2, 4)));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return LocalDateTime.of(localDate, localTime);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "francislow": 68
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "francislow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "francislow"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "francislow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "francislow"
        },
        "content": " * A storage class to handle loading and saving user data"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "francislow"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "francislow"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "francislow"
        },
        "content": "    private static final String filePath \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "francislow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "francislow"
        },
        "content": "     * Add initial stored tasks into ArrayList and return it"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "francislow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "francislow"
        },
        "content": "     * @return Returns an ArrayList containing the stored data"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "francislow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public static ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "francislow"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "francislow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "francislow"
        },
        "content": "            Scanner sc \u003d new Scanner(new File(filePath));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "francislow"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "francislow"
        },
        "content": "                String currentLine \u003d sc.nextLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "francislow"
        },
        "content": "                String[] words \u003d currentLine.split(\"\\\\|\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "francislow"
        },
        "content": "                boolean isDone;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "francislow"
        },
        "content": "                if (words[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    isDone \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "francislow"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    isDone \u003d false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "francislow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "francislow"
        },
        "content": "                if (words[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    tasks.add(new Todo(words[2], isDone, \"todo\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "francislow"
        },
        "content": "                } else if (words[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    LocalDateTime formatDateTime \u003d LocalDateTime.parse(words[3], formatter);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    tasks.add(new Deadline(words[2], isDone, \"deadline\", words[3], formatDateTime));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "francislow"
        },
        "content": "                } else if (words[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    LocalDateTime formatDateTime \u003d LocalDateTime.parse(words[3], formatter);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    tasks.add(new Event(words[2], isDone, \"event\", words[3], formatDateTime));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "francislow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "francislow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "francislow"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "francislow"
        },
        "content": "            System.out.println(\"No such file to get data from.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "francislow"
        },
        "content": "            assert tasks.size() \u003d\u003d 0 : \"No files loaded, tasks list should be empty\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "francislow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "francislow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "francislow"
        },
        "content": "     * Save stored tasks into text file"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "francislow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "francislow"
        },
        "content": "     * @param tasks Tasklist reference where user current tasks is to be stored in"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "francislow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public static void save(TaskList tasks) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "francislow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "francislow"
        },
        "content": "            PrintWriter out \u003d new PrintWriter(new File(filePath));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "francislow"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "francislow"
        },
        "content": "                Task currentTask \u003d tasks.get(i);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "francislow"
        },
        "content": "                if (currentTask instanceof Todo) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    out.print(\"T|\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    if (currentTask.hasDone()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "francislow"
        },
        "content": "                        out.print(\"1|\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "francislow"
        },
        "content": "                        out.print(\"0|\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    out.println(currentTask.getName());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "francislow"
        },
        "content": "                } else if (currentTask instanceof Deadline) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    out.print(\"D|\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    if (currentTask.hasDone()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "francislow"
        },
        "content": "                        out.print(\"1|\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "francislow"
        },
        "content": "                        out.print(\"0|\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    out.print(currentTask.getName());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    out.print(\"|\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    String recordingDateTimeString \u003d ((Deadline) currentTask).getLocalDateTime().toString().replace(\"T\", \" \");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    out.println(recordingDateTimeString);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "francislow"
        },
        "content": "                } else if (currentTask instanceof Event) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    out.print(\"E|\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    if (currentTask.hasDone()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "francislow"
        },
        "content": "                        out.print(\"1|\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "francislow"
        },
        "content": "                        out.print(\"0|\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    out.print(currentTask.getName());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    out.print(\"|\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    String recordingDateTimeString \u003d ((Event) currentTask).getLocalDateTime().toString().replace(\"T\", \" \");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    out.println(recordingDateTimeString);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "francislow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "francislow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "francislow"
        },
        "content": "            out.close();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "francislow"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "francislow"
        },
        "content": "            System.out.println(\"No such file to save data to.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "francislow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "francislow": 107
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": " * A custom list to manipulate arraylist"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "francislow"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "francislow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "francislow"
        },
        "content": "     * Add a new task to list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "francislow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "francislow"
        },
        "content": "     * @param newTask duke.task.Task to be added to list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "francislow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public void add(Task newTask) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "francislow"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "francislow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "francislow"
        },
        "content": "     * Remove a task from list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "francislow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "francislow"
        },
        "content": "     * @param newTask duke.task.Task to be removed from list"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "francislow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public void remove(Task newTask) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "francislow"
        },
        "content": "        tasks.remove(newTask);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "francislow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "francislow"
        },
        "content": "     * Returns size of list"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "francislow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "francislow"
        },
        "content": "     * @return Current size of list"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "francislow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "francislow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "francislow"
        },
        "content": "     * Get a specific task from list"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "francislow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "francislow"
        },
        "content": "     * @param i Index of the task to be returned"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "francislow"
        },
        "content": "     * @return Index i of task in list"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "francislow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public Task get(int i) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return tasks.get(i);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "francislow": 58
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": " * A class to deal with interactions with the user"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": "     * Construct and get the starting message when user launch duke"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "francislow"
        },
        "content": "     * @param tasks A list of current task that is saved by user during previous duke run"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "francislow"
        },
        "content": "     * @return A string representation of starting message"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "francislow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public String getStartingMessage(TaskList tasks) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "francislow"
        },
        "content": "        String message \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "francislow"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "francislow"
        },
        "content": "            message +\u003d \"You do not have any stored tasks\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "francislow"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "francislow"
        },
        "content": "            message +\u003d \"This is your current list of tasks\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "francislow"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "francislow"
        },
        "content": "                int currentItemNumber \u003d i + 1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "francislow"
        },
        "content": "                Task currentTask \u003d tasks.get(i);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "francislow"
        },
        "content": "                message +\u003d currentItemNumber + \".\" + currentTask + \"\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "francislow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "francislow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "francislow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "francislow"
        },
        "content": "     * Get the error message for a particular duke exception"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "francislow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "francislow"
        },
        "content": "     * @param e The specified duke exception during runtime"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "francislow"
        },
        "content": "     * @return A string representation of the error"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "francislow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public String getErrorMessage(DukeException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return e.getMessage();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "francislow": 40
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public ByeCommand(String[] message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public String execute(TaskList tasks) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "francislow"
        },
        "content": "        Storage.save(tasks);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "francislow"
        },
        "content": "        String response \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "francislow": 17
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": "    protected String[] parts;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public Command(String[] parts) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": "        this.parts \u003d parts;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "francislow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "francislow"
        },
        "content": "     * Execute command given"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "francislow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "francislow"
        },
        "content": "     * @param task Current updated task list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "francislow"
        },
        "content": "     * @return A string representation of to be shown to user after command is executed"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "francislow"
        },
        "content": "     * @throws DukeException Detects wrong command and empty todotask name"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "francislow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public abstract String execute(TaskList task) throws DukeException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "francislow": 21
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public DeadlineCommand(String[] parts) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": "        super(parts);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "francislow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public String execute(TaskList tasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "francislow"
        },
        "content": "        assert parts[0].equals(\"deadline\") : \"parts[0] should be deadline\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "francislow"
        },
        "content": "        String secondPart \u003d parts[1];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "francislow"
        },
        "content": "        String name \u003d Parser.splitIntoNameAndTime(secondPart, \" /by \")[0];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "francislow"
        },
        "content": "        String dateTime \u003d Parser.splitIntoNameAndTime(secondPart, \" /by \")[1];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "francislow"
        },
        "content": "        LocalDateTime localDateTime \u003d Parser.changeToDateTimeFormat(dateTime);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "francislow"
        },
        "content": "        // Add new task to list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "francislow"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(name, false, \"deadline\", dateTime, localDateTime);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "francislow"
        },
        "content": "        tasks.add(newDeadline);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "francislow"
        },
        "content": "        String response \u003d \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "francislow"
        },
        "content": "                + tasks.get(tasks.size() - 1) + \"\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "francislow"
        },
        "content": "                + \"Now you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "francislow": 31
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public DeleteCommand(String[] parts) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": "        super(parts);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public String execute(TaskList tasks) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "francislow"
        },
        "content": "        int itemId \u003d Integer.parseInt(parts[1]);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "francislow"
        },
        "content": "        Task currentTask \u003d tasks.get(itemId - 1);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "francislow"
        },
        "content": "        tasks.remove(currentTask);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "francislow"
        },
        "content": "        String response \u003d \"Noted. I\u0027ve removed this task:\" + currentTask + \"\\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "francislow"
        },
        "content": "                \"Now you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "francislow": 21
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public DoneCommand(String[] parts) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": "        super(parts);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public String execute(TaskList tasks) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "francislow"
        },
        "content": "        int itemId \u003d Integer.parseInt(parts[1]);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "francislow"
        },
        "content": "        Task currentTask \u003d tasks.get(itemId - 1);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "francislow"
        },
        "content": "        currentTask.setDone(true);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "francislow"
        },
        "content": "        String response \u003d \"Nice! I\u0027ve marked this task as done:\\n[1] \" + currentTask.getName();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "francislow": 20
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public EventCommand(String[] parts) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": "        super(parts);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "francislow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public String execute(TaskList tasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "francislow"
        },
        "content": "        String secondPart \u003d parts[1];"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "francislow"
        },
        "content": "        String name \u003d Parser.splitIntoNameAndTime(secondPart, \" /at \")[0];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "francislow"
        },
        "content": "        String dateTime \u003d Parser.splitIntoNameAndTime(secondPart, \" /at \")[1];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "francislow"
        },
        "content": "        LocalDateTime localDateTime \u003d Parser.changeToDateTimeFormat(dateTime);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "francislow"
        },
        "content": "        // Add new task to list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "francislow"
        },
        "content": "        Event newEvent \u003d new Event(name, false,\"event\", dateTime, localDateTime);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "francislow"
        },
        "content": "        tasks.add(newEvent);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "francislow"
        },
        "content": "        String response \u003d \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "francislow"
        },
        "content": "                + tasks.get(tasks.size() - 1) + \"\\n\" + \"Now you have \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "francislow"
        },
        "content": "                + tasks.size() + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "francislow": 30
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public FindCommand(String[] parts) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": "        super(parts);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public String execute(TaskList tasks) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "francislow"
        },
        "content": "        String response \u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "francislow"
        },
        "content": "        String keyPhrase \u003d parts[1];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "francislow"
        },
        "content": "        boolean hasMatch \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "francislow"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "francislow"
        },
        "content": "            Task currentTask \u003d tasks.get(i);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "francislow"
        },
        "content": "            int currentItemNumber \u003d 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "francislow"
        },
        "content": "            if (currentTask.getName().contains(keyPhrase)) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "francislow"
        },
        "content": "                hasMatch \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "francislow"
        },
        "content": "                currentItemNumber +\u003d 1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "francislow"
        },
        "content": "                response +\u003d currentItemNumber + \".\" + currentTask + \"\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "francislow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "francislow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "francislow"
        },
        "content": "        if (!hasMatch) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "francislow"
        },
        "content": "            response +\u003d \"Nothing matches :(\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "francislow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "francislow": 31
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public ListCommand(String[] parts) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": "        super(parts);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public String execute(TaskList tasks) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "francislow"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "francislow"
        },
        "content": "            return \"You have no tasks at hand :)\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "francislow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "francislow"
        },
        "content": "        String response \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "francislow"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "francislow"
        },
        "content": "            int currentItemNumber \u003d i + 1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "francislow"
        },
        "content": "            Task currentTask \u003d tasks.get(i);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "francislow"
        },
        "content": "            response +\u003d currentItemNumber + \".\" + currentTask + \"\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "francislow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "francislow": 26
    }
  },
  {
    "path": "src/main/java/duke/command/SortCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": "import duke.task.TimeTask;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": "public class SortCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public SortCommand(String[] parts) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "francislow"
        },
        "content": "        super(parts);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "francislow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public String execute(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "francislow"
        },
        "content": "        String type \u003d parts[1];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "francislow"
        },
        "content": "        if (type.equals(\"deadline\") || type.equals(\"event\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "francislow"
        },
        "content": "            String response \u003d \"Here are your \" + type + \" sorted chronologically:\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "francislow"
        },
        "content": "            ArrayList\u003cTimeTask\u003e matchTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "francislow"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "francislow"
        },
        "content": "                Task currentTask \u003d tasks.get(i);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "francislow"
        },
        "content": "                if (currentTask.getType().equals(type)) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    matchTasks.add((TimeTask) currentTask);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "francislow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "francislow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "francislow"
        },
        "content": "            Collections.sort(matchTasks, new TimeTaskDateComparator());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "francislow"
        },
        "content": "            for (int i \u003d 0; i \u003c matchTasks.size(); i++) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "francislow"
        },
        "content": "                int currentItemNumber \u003d i + 1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "francislow"
        },
        "content": "                Task currentTask \u003d matchTasks.get(i);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "francislow"
        },
        "content": "                response +\u003d currentItemNumber + \".\" + currentTask + \"\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "francislow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "francislow"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "francislow"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "francislow"
        },
        "content": "            throw new DukeException(\"Sorry that can\u0027t be sorted..\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "francislow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public class TimeTaskDateComparator implements Comparator\u003cTimeTask\u003e {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "francislow"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "francislow"
        },
        "content": "        public int compare(TimeTask t1, TimeTask t2) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "francislow"
        },
        "content": "            if (t1.getLocalDateTime().isBefore(t2.getLocalDateTime())) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "francislow"
        },
        "content": "                return -1;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "francislow"
        },
        "content": "            } else if (t1.getLocalDateTime().isAfter(t2.getLocalDateTime())) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "francislow"
        },
        "content": "                return 1;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "francislow"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "francislow"
        },
        "content": "                return 0;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "francislow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "francislow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "francislow": 54
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public TodoCommand(String[] parts) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": "        super(parts);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public String execute(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "francislow"
        },
        "content": "        assert parts[0].equals(\"todo\") : \"parts[0] should be todo\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "francislow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "francislow"
        },
        "content": "            String taskName \u003d parts[1];"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "francislow"
        },
        "content": "            // Add new task to list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "francislow"
        },
        "content": "            Todo newTodoTask \u003d new Todo(taskName, false, \"todo\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "francislow"
        },
        "content": "            tasks.add(newTodoTask);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "francislow"
        },
        "content": "            String response \u003d \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    + tasks.get(tasks.size() - 1) + \"\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    + \"Now you have \" + tasks.size() + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "francislow"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "francislow"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "francislow"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "francislow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "francislow": 30
    }
  },
  {
    "path": "src/main/java/duke/command/WrongCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": "public class WrongCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public WrongCommand(String[] message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public String execute(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "francislow"
        },
        "content": "        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "francislow": 15
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": " * Represents a duke.task.Task with a deadline time attached"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": "public class Deadline extends TimeTask {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public Deadline(String name, boolean isDone, String type, String time, LocalDateTime localDateTime) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "francislow"
        },
        "content": "        super(name, isDone, type, localDateTime);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "francislow"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "francislow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return \"[D][\" + getStatusIcon() + \"] \" + getName() + \" (by: \" + getLocalDateTime().toString()  + \")\";    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "francislow": 21
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": " * Represents a duke.task.Task with a time of event attached"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": "public class Event extends TimeTask {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public Event(String name, boolean isDone, String type,  String time, LocalDateTime localDateTime) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "francislow"
        },
        "content": "        super(name, isDone, type, localDateTime);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "francislow"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "francislow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return \"[E][\" + getStatusIcon() + \"] \" + getName() + \" (at: \" + getLocalDateTime().toString()  + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "francislow": 21
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": " * Represents a task that user adds to their daily task list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public Task(String name, boolean isDone, String type) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "francislow"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "francislow"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "francislow"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public boolean hasDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return (isDone ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "francislow"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "francislow": 37
    }
  },
  {
    "path": "src/main/java/duke/task/TimeTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": "public class TimeTask extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": "    private LocalDateTime localDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public TimeTask(String name, boolean isDone, String type, LocalDateTime localDateTime) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": "        super(name, isDone, type);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": "        this.localDateTime \u003d localDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public LocalDateTime getLocalDateTime() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return localDateTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "francislow": 16
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": " * Represents a basic task to be done by user"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public Todo(String name, boolean isDone, String type) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": "        super(name, isDone, type);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return \"[T][\" + getStatusIcon() + \"] \" + getName();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "francislow": 16
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "francislow"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "francislow"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "francislow"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "francislow"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "francislow": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "francislow"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "francislow"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "francislow"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "francislow"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "francislow"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "francislow"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "francislow"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "francislow": 19
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public void testChangeToDateTimeFormatMethod() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": "        String myTestTime \u003d \"1/10/2019 1600\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": "        Assertions.assertEquals(Parser.changeToDateTimeFormat(myTestTime).toString(), \"2019-10-01T16:00\","
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": "                \"duke.Parser.changeToDateTimeFormat() does not give the same result\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "francislow": 12
    }
  },
  {
    "path": "src/test/java/TasksTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": "public class TasksTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public void testTodoObject() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": "        String myTestName \u003d \"Buy SY ferrero rocher\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": "        Boolean myTestBool \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": "        String testType \u003d \"todo\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "francislow"
        },
        "content": "        Todo todoTestObject \u003d new Todo(myTestName, myTestBool, testType);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "francislow"
        },
        "content": "        Assertions.assertEquals(todoTestObject.getName(), myTestName, \"getName and myTestName does not match!\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "francislow"
        },
        "content": "        Assertions.assertEquals(todoTestObject.hasDone(), myTestBool, \"hasDone() and myTestBool does not match!\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "francislow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public void testDeadlineObject() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "francislow"
        },
        "content": "        String myTestName \u003d \"Buy SY ferrero rocher\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "francislow"
        },
        "content": "        Boolean myTestBool \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "francislow"
        },
        "content": "        String myTestTime \u003d \"1/10/2019 1600\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "francislow"
        },
        "content": "        String testType \u003d \"deadline\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "francislow"
        },
        "content": "        Deadline deadlineTestObject \u003d new Deadline(myTestName, myTestBool, testType, myTestTime, Parser.changeToDateTimeFormat(myTestTime));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "francislow"
        },
        "content": "        Assertions.assertEquals(deadlineTestObject.getName(), myTestName, \"getName and myTestName does not match!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "francislow"
        },
        "content": "        Assertions.assertEquals(deadlineTestObject.hasDone(), myTestBool, \"hasDone() and myTestBool does not match!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "francislow"
        },
        "content": "        Assertions.assertEquals(deadlineTestObject.getLocalDateTime(), Parser.changeToDateTimeFormat(myTestTime),"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "francislow"
        },
        "content": "                \"getLocalDateTime() and duke.Parser.changeToDateTimeFormat(myTestTime) does not match!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "francislow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public void testEventObject() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "francislow"
        },
        "content": "        String myTestName \u003d \"Buy SY ferrero rocher\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "francislow"
        },
        "content": "        Boolean myTestBool \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "francislow"
        },
        "content": "        String myTestTime \u003d \"1/10/2019 1600\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "francislow"
        },
        "content": "        String testType \u003d \"deadline\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "francislow"
        },
        "content": "        Deadline deadlineTestObject \u003d new Deadline(myTestName, myTestBool, testType,myTestTime, Parser.changeToDateTimeFormat(myTestTime));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "francislow"
        },
        "content": "        Assertions.assertEquals(deadlineTestObject.getName(), myTestName, \"getName and myTestName does not match!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "francislow"
        },
        "content": "        Assertions.assertEquals(deadlineTestObject.hasDone(), myTestBool, \"hasDone() and myTestBool does not match!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "francislow"
        },
        "content": "        Assertions.assertEquals(deadlineTestObject.getLocalDateTime(), Parser.changeToDateTimeFormat(myTestTime),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "francislow"
        },
        "content": "                \"getLocalDateTime() and duke.Parser.changeToDateTimeFormat(myTestTime) does not match!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "francislow": 46
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "You do not have any stored tasks"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": "[T][0] teach junior how to skate"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": "[D][0] return book (by: 2019-12-02T18:00)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": "[E][0] project meeting (at: 2019-02-27T08:00)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "francislow"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "francislow"
        },
        "content": "1.[D][0] return book (by: 2019-12-02T18:00)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "francislow"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "francislow"
        },
        "content": "[1] teach junior how to skate"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "francislow"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "francislow"
        },
        "content": "[1] project meeting"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "francislow"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "francislow"
        },
        "content": "1.[T][1] teach junior how to skate"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "francislow"
        },
        "content": "2.[D][0] return book (by: 2019-12-02T18:00)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "francislow"
        },
        "content": "3.[E][1] project meeting (at: 2019-02-27T08:00)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "francislow"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "francislow"
        },
        "content": "[E][1] project meeting (at: 2019-02-27T08:00)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "francislow"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "francislow"
        },
        "content": "☹ OOPS!!! The description of a todo cannot be empty."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "francislow"
        },
        "content": "☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "francislow"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "francislow": 28
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "todo teach junior how to skate"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": "deadline return book /by 2/12/2019 1800"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "event project meeting /at 27/2/2019 0800"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": "find return"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": "todo"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": "blah"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "francislow": 11
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": "javac -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "francislow"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "francislow"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "francislow"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "francislow"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "francislow"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "francislow"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "francislow"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "francislow": 21
    }
  }
]
