[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    archiveVersion \u003d \"0.1.0\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    mainClassName \u003d \u0027duke.Duke\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    run {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        standardInput \u003d System.in"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "briyanii"
        },
        "content": " }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "briyanii"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "briyanii"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    useJUnitPlatform();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "briyanii": 21,
      "-": 14
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "briyanii"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "briyanii": 17,
      "-": 83
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.frontend.UserInterface;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic UserInterface userInterface;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic void run() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t// initialize user inferface with input source"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tuserInterface \u003d new UserInterface();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t// start"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\tuserInterface.start();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t} catch (DukeException ex) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\tuserInterface.displayError(ex);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t// query UI if it can accept user input"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\twhile (userInterface.isAcceptingInput()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\ttry {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t    // try to read input and then try to execute it"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\tuserInterface.executeCommand(userInterface.readInput());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\t// display output if successfully executed"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\tuserInterface.displayOutput();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t} catch (duke.DukeException ex) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\t// display output if any error occurs"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\tuserInterface.displayError(ex);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic static void main(String[] args) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tnew Duke().run();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 32,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic DukeException(String... messageLines) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t    super(append(messageLines));"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private static String append(String... segments) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tStringBuffer message \u003d new StringBuffer();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tfor (String segment : segments) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\tmessage.append(segment);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\treturn message.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 16
    }
  },
  {
    "path": "src/main/java/duke/command/AddTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class AddTaskCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public AddTaskCommand(Type type, String... parameters) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        super(type, parameters);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 7
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public Type type;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public String[] parameters;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public Command(Type type, String... parameters) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        this.parameters \u003d parameters;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "briyanii": 18
    }
  },
  {
    "path": "src/main/java/duke/command/CompleteTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class CompleteTaskCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public CompleteTaskCommand(String taskNumber) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        super(Type.COMPLETE, taskNumber);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 7
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class DeleteTaskCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public DeleteTaskCommand(String taskNumber) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        super(Type.DELETE, taskNumber);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 7
    }
  },
  {
    "path": "src/main/java/duke/command/DukeIncorrectParameterTypeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class DukeIncorrectParameterTypeException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public DukeIncorrectParameterTypeException(String classExpected, String argument) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        super(\"The following cannot be converted to \", classExpected, \":\\n\", argument);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 9
    }
  },
  {
    "path": "src/main/java/duke/command/DukeMissingCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class DukeMissingCommandException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public DukeMissingCommandException() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        super(\"No command?! I didn\u0027t w-want to do anything anyway!\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 9
    }
  },
  {
    "path": "src/main/java/duke/command/DukeMissingParameterException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class DukeMissingParameterException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public DukeMissingParameterException(Type type, String[] parameters) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        super(missingParameters(type, parameters));"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private static String missingParameters(Type type, String[] parametersProvided) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        StringBuffer message \u003d new StringBuffer(\"The following field(s) cannot be empty:\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        for (int i \u003d 0; i \u003c type.parametersExpected; i++) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            if (parametersProvided[i] \u003d\u003d null) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                message.append(\"\\n\u003e\u003e\u003e\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                message.append(type.parameters.get(i));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        return message.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 20
    }
  },
  {
    "path": "src/main/java/duke/command/DukeUnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class DukeUnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public DukeUnknownCommandException() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        super(\"I\u0027m sorry. I don\u0027t know what that means :c\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 9
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        super(Type.EXIT);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 7
    }
  },
  {
    "path": "src/main/java/duke/command/ShowListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class ShowListCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public ShowListCommand() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        super(Type.LIST);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 7
    }
  },
  {
    "path": "src/main/java/duke/command/Type.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public enum Type {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    UNUSED(0),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    EXIT(0),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    LIST(0),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    DELETE(1, \"task number\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    COMPLETE(1, \"task number\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ADD_TODO(1, \"description\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ADD_DEADLINE(2, \"description\", \"time\", \"/by\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ADD_EVENT(2, \"description\", \"time\", \"/at\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    Type(int parametersExpected, String... parameterNamesAndDelimiters) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        this.parametersExpected \u003d parametersExpected;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        this.parameters \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        this.delimiters \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        for (int i \u003d 0; i \u003c parameterNamesAndDelimiters.length; i++) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            if (i \u003c parametersExpected) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                this.parameters.add(parameterNamesAndDelimiters[i]);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                this.delimiters.add(parameterNamesAndDelimiters[i]);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public final int parametersExpected;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public ArrayList\u003cString\u003e parameters;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public ArrayList\u003cString\u003e delimiters;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 32
    }
  },
  {
    "path": "src/main/java/duke/command/UnusedCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class UnusedCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public UnusedCommand() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        super(Type.UNUSED);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 7
    }
  },
  {
    "path": "src/main/java/duke/frontend/UserInterface.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.frontend;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.io.Input;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.io.Output;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.io.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.command.CompleteTaskCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.command.AddTaskCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.command.DeleteTaskCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.command.ShowListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.tasklist.Task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.tasklist.ToDo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.tasklist.Deadline;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.tasklist.Event;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class UserInterface {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private boolean acceptingInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private Input input;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private Output standardOutput;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private Output errorOutput;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public UserInterface() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        // setup input and output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        input \u003d new Input(System.in);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        String lineBreak1 \u003d \"___________________________________________________________\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tString lineBreak2 \u003d \"‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        errorOutput \u003d new Output(System.out);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        errorOutput.setHeader(lineBreak1, \" ☹ OOPS!!!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        errorOutput.setFooter(lineBreak2);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        errorOutput.setLeftBorder(\"ERROR \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        errorOutput.setLeftIndent(1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        errorOutput.setWrapOn(true);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        standardOutput \u003d new Output(System.out);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        standardOutput.setHeader(lineBreak1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        standardOutput.setFooter(lineBreak2);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        standardOutput.setLeftBorder(\"      \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        standardOutput.setLeftIndent(1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        standardOutput.setWrapOn(true);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        // storage \u003d new Storage(\"SaveFiles\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        storage \u003d new Storage(\"DukeSave01.txt\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        // load default exisiting task list if any"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        acceptingInput \u003d true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void start() throws DukeException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        Output logo \u003d new Output(System.out);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        logo.addLine(\" ____        _        \")"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                .addLine(\"|  _ \\\\ _   _| | _____ \")"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                .addLine(\"| | | | | | | |/ / _ \\\\\")"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                .addLine(\"| |_| | |_| |   \u003c  __/\")"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                .addLine(\"|____/ \\\\__,_|_|\\\\_\\\\___|\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        logo.print();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        standardOutput"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                .addLine(\"Hi! I\u0027m Duke :)\")"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                .addLine(\"What can I do for you?\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        displayOutput();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        taskList \u003d storage.load();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public boolean isAcceptingInput() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        return acceptingInput;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void displayOutput() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        standardOutput.print();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void displayError(DukeException ex) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        //flushes standard output otherwise future output may be wrong"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        standardOutput.flush();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        // displays dukeexception error messages"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        errorOutput.addLine(ex.getMessage());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        errorOutput.print();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public Command readInput() throws DukeException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        return Parser.parseAsCommand(input.get());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    // methods that enable parsed commands to instruct duke"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void executeCommand(Command c) throws DukeException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        // all commands passed to this method have all required parameter non-empty"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        switch (c.getClass().getSimpleName()) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            case \"AddTaskCommand\":"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                executeCommand((AddTaskCommand) c);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            case \"CompleteTaskCommand\":"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                executeCommand((CompleteTaskCommand) c);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            case \"DeleteTaskCommand\":"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                executeCommand((DeleteTaskCommand) c);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            case \"ShowListCommand\":"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                executeCommand((ShowListCommand) c);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            case \"ExitCommand\":"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                executeCommand((ExitCommand) c);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                // throw new DukeException(\"This command is not supported\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void executeCommand(AddTaskCommand command) throws DukeException {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        switch (command.type) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            case ADD_TODO:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                task \u003d new ToDo(command.parameters[0]);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            case ADD_DEADLINE:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    task \u003d new Deadline(command.parameters[0], Parser.parseDateTime(command.parameters[1]));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                } catch (DukeException ex) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    task \u003d new Deadline(command.parameters[0], command.parameters[1]);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            case ADD_EVENT:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    task \u003d new Event(command.parameters[0], Parser.parseDateTime(command.parameters[1]));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    task \u003d new Event(command.parameters[0], command.parameters[1]);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                throw new DukeException(\"This task type is not supported yet\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        standardOutput"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                .addLine(\"Got it! I\u0027ve added this task to the list:\")"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                .addLine(task.toString())"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                .addLine(\"Now you have \", Integer.toString(taskList.size()), \" task(s) in your list.\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        storage.save(taskList);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    "
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void executeCommand(CompleteTaskCommand command) throws DukeException {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        Task task \u003d taskList.complete(command.parameters[0]);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        standardOutput"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                .addLine(\"Got it! I\u0027ve marked this task as done:\")"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                .addLine(task.toString());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        storage.save(taskList);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void executeCommand(DeleteTaskCommand command) throws DukeException {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        Task task \u003d taskList.delete(command.parameters[0]);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        standardOutput"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                .addLine(\"Got it! I\u0027ve removed this task from the list:\")"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                .addLine(task.toString())"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                .addLine(\"Now you have \", Integer.toString(taskList.size()), \" task(s) in your list.\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        storage.save(taskList);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void executeCommand(ShowListCommand command) throws DukeException {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            standardOutput.addLine(\"Your list is empty!\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            int count \u003d 0;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            standardOutput.addLine(\"Here are the task(s) in your list:\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            for (Task task : taskList.list()) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                standardOutput.addLine(String.format(\"%0\" + width(taskList.size()) + \"d\", count), \". \", task.toString());"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private static int width(int number) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        return Integer.toString(number).length();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void executeCommand(ExitCommand command) throws DukeException {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        storage.save(taskList);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        acceptingInput \u003d false;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        standardOutput.addLine(\"Goodbye! Hope to see you again!\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 189
    }
  },
  {
    "path": "src/main/java/duke/io/DukeCorruptFileException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class DukeCorruptFileException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public DukeCorruptFileException(String filePath) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        super(new StringBuffer(\"The file at \").append(filePath).append(\" is formatted incorrectly.\").toString());"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 9
    }
  },
  {
    "path": "src/main/java/duke/io/DukeInvalidFilePathException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class DukeInvalidFilePathException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public DukeInvalidFilePathException(String path) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        super(\"Your task list cannot be saved/loaded because the following is not a valid file path:\\n\", path);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 9
    }
  },
  {
    "path": "src/main/java/duke/io/Input.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class Input {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private BufferedReader bufferedReader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public Input(InputStream inputStream) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        this.bufferedReader \u003d new BufferedReader(new InputStreamReader(inputStream));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public String get() throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            String userInput \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            return userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            throw new DukeException(\"Input error\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 25
    }
  },
  {
    "path": "src/main/java/duke/io/Output.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class Output {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t// formatting fields"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tprivate String[] headerLines;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tprivate String[] footerLines;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tprivate String leftBorder;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tprivate int leftIndentWidth;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t// formatting settings"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tprivate boolean printHeaderOn;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tprivate boolean printFooterOn;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tprivate boolean printLeftBorderOn;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tprivate boolean printIndentOn;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tprivate boolean wrapOn;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t// output buffer"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tprivate ArrayList\u003cString\u003e outputLines;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t//output destination"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tprivate PrintStream printStream;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic Output(PrintStream printStream) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tthis.printStream \u003d printStream;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t    // no header, footer, or leftborder by default"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tthis.headerLines \u003d new String[]{};"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tthis.footerLines \u003d new String[]{};"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tthis.leftBorder \u003d \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t// indent width 0 by default"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tthis.leftIndentWidth \u003d 0;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t// all true by default, no need to toggle boolean when the header footer etc are set"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tthis.printHeaderOn \u003d true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tthis.printFooterOn \u003d true;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tthis.printLeftBorderOn \u003d true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tthis.printIndentOn \u003d true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t// text wrapping off by default"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tthis.wrapOn \u003d false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t// empty buffer"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tthis.outputLines \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic void setHeader(String... headerLines) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tthis.headerLines \u003d headerLines;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic void setFooter(String... footerLines) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tthis.footerLines \u003d footerLines;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic void setLeftBorder(String leftBorder) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tthis.leftBorder \u003d leftBorder;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic void setLeftIndent(int count) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tthis.leftIndentWidth \u003d count;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic Output addLine(String... lineSegments) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t// string concatenation behind the scenes"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tStringBuffer line \u003d new StringBuffer();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tfor (String segment : lineSegments) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\tline.append(segment);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\toutputLines.add(line.toString());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\treturn this;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic void setHeaderOn(boolean on) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tprintHeaderOn \u003d on;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic void setFooterOn(boolean on) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tprintFooterOn \u003d on;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic void setLeftBorderOn(boolean on) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tprintLeftBorderOn \u003d on;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic void setIndentOn(boolean on) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tprintIndentOn \u003d on;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic void setWrapOn(boolean on) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\twrapOn \u003d on;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t// clear output buffer"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic void flush() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\toutputLines \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t// prints the output buffer to printstream"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic void print() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t// prints header if enabled"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tif (printHeaderOn) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\tfor (String header : headerLines) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\tif (printLeftBorderOn) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\t\tprintStream.print(leftBorder);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\tprintStream.println(header);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t// split all the output into separate lines if there are still \\n or \\r left"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\toutputLines \u003d resolveNewLines(outputLines);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t// appends each line to the left indent and left border if any and enabled"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tfor (String output : outputLines) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\tif (wrapOn) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\t// chops strings that are too long for the header/footer and appends the next line to the remaining"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\tfor (String wrapped : wrap(outputWidth() - leftIndentWidth, output)) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\t\tif (printLeftBorderOn) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\t\t\tprintStream.print(leftBorder);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\t\tif (printIndentOn) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\t\t\tprintStream.print(\" \".repeat(leftIndentWidth));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\t\tprintStream.println(wrapped);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t} else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\tif (printLeftBorderOn) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\t\tprintStream.print(leftBorder);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\tif (printIndentOn) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\t\tprintStream.print(\" \".repeat(leftIndentWidth));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\tprintStream.println(output);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t//clears the buffer so other output can be added without wrong output"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tflush();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t// prints footer appended to leftborder if enabled"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tif (printFooterOn) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\tfor (String footer : footerLines) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\tif (printLeftBorderOn) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\t\tprintStream.print(leftBorder);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\tprintStream.println(footer);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tprintStream.println();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t// helper method to calculate the max width of output. minimum output width 1 otherwise infinite loops"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tprivate int outputWidth() {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tint width \u003d 1;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tfor (String line : headerLines) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\twidth \u003d Math.max(width, line.length());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tfor (String line : footerLines) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\twidth \u003d Math.max(width, line.length());"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\treturn width;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t// helper method to wrap overlength strings"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tprivate static ArrayList\u003cString\u003e wrap(int width, String unwrapped) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tArrayList\u003cString\u003e wrapped \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tString remaining \u003d unwrapped;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\twhile (remaining.length() \u003e width) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\twrapped.add(remaining.substring(0, width));"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\tremaining \u003d remaining.substring(width);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\twrapped.add(remaining);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\treturn wrapped;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t// helper method to list of strings which may include new line characters with list of single line strings"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tprivate static ArrayList\u003cString\u003e resolveNewLines(ArrayList\u003cString\u003e lines) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tArrayList\u003cString\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tfor (String line : lines) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\tfor (String lineSplit : line.split(\"[\\\\n\\\\r]\")) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\tresult.add(lineSplit);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\treturn result;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 192
    }
  },
  {
    "path": "src/main/java/duke/io/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        public static String parseDateTime(String dateTimeString) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            LocalDateTime dateAndTime \u003d LocalDateTime.parse(dateTimeString, formatter);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            int day \u003d dateAndTime.getDayOfMonth();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            String month \u003d dateAndTime.getMonth().toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            int year \u003d dateAndTime.getYear();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            int hour \u003d dateAndTime.getHour();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            int minute \u003d dateAndTime.getMinute();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            StringBuffer dateTime \u003d new StringBuffer();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            dateTime.append(getIntegerOrdinal(day));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            dateTime.append(\" of \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            dateTime.append(month);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            dateTime.append(\" \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            dateTime.append(year);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            dateTime.append(\", \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            dateTime.append((hour \u003e 12 ? hour - 12 : hour \u003d\u003d 0 ? 12 : hour));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            if (minute !\u003d 0) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                dateTime.append(\":\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                dateTime.append(minute);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            if (hour \u003c 12) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                dateTime.append(\"am\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                dateTime.append(\"pm\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            return dateTime.toString();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            throw new DukeException(dateTimeString + \" is not in dd/MM/yyyy HHmm format.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private static String getIntegerOrdinal(int integer) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        int remainderHundred \u003d integer % 100;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        if (remainderHundred \u003e 9 \u0026\u0026 remainderHundred \u003c 21) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            return integer + \"th\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            int remainderTen \u003d integer % 10;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            switch (remainderTen) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                case 1:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    return integer + \"st\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                case 2:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    return integer + \"nd\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                case 3:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    return integer + \"rd\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    return integer + \"th\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public static Command parseAsCommand(String input) throws DukeException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        input \u003d input.trim();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        String[] split \u003d input.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        // was a command provided"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        if (split[0].length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            throw new DukeMissingCommandException();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        // is the command valid"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        Type type;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        switch (split[0]) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                return new ShowListCommand();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                type \u003d Type.ADD_TODO;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                type \u003d Type.ADD_EVENT;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                type \u003d Type.ADD_DEADLINE;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                type \u003d Type.DELETE;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                type \u003d Type.COMPLETE;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                throw new DukeUnknownCommandException();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        // if the command requires further parameters"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        String[] parameters \u003d new String[type.parametersExpected];"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        boolean first \u003d true;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        int parameterCount \u003d 0;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        String nextDelim;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        Iterator\u003cString\u003e delims \u003d type.delimiters.iterator();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        if (delims.hasNext()) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            nextDelim \u003d delims.next();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            nextDelim \u003d \" \";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            // since split by whitespaces there will not be a word that is \" \""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        StringBuffer currentParameter \u003d new StringBuffer();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d split.length; i++) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            if (i \u003d\u003d split.length || split[i].equals(nextDelim)) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                String parameter \u003d currentParameter.toString().trim();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                if (parameter.length() \u003e 0) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    parameters[parameterCount] \u003d parameter;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    parameters[parameterCount] \u003d null;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                if (i \u003c split.length \u0026\u0026 split[i].equals(nextDelim)) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    if (delims.hasNext()) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                        nextDelim \u003d delims.next();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                        nextDelim \u003d \" \";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                currentParameter \u003d new StringBuffer();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                parameterCount++;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                currentParameter.append(split[i]);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                currentParameter.append(\" \");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        for (String param : parameters) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            if (param \u003d\u003d null) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                throw new DukeMissingParameterException(type, parameters);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\tcase DELETE:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                return new DeleteTaskCommand(parameters[0]);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            case COMPLETE:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                return new CompleteTaskCommand(parameters[0]);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            case ADD_TODO:"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            case ADD_DEADLINE:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            case ADD_EVENT:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                return new AddTaskCommand(type, parameters);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                return null; //unreachable"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 157
    }
  },
  {
    "path": "src/main/java/duke/io/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.tasklist.ToDo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.tasklist.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.tasklist.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.tasklist.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public Storage(String path) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        this.filePath \u003d \"src/main/resources/SaveFiles/\".concat(path);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public TaskList load() throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        // read file path"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        BufferedReader file;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            file \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            // populate tasklist"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            int tasksExpected \u003d Integer.parseInt(file.readLine());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            while (tasksExpected \u003e 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                tasksExpected--;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                switch (file.readLine()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                        taskList.add(readAsDeadline(file));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                        taskList.add(readAsEvent(file));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                        taskList.add(readAsToDo(file));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                        throw new DukeException(\"The save file at \", filePath, \" is corrupt.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                        //throw DukeCorruptSaveFileException(filePath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        } catch (FileNotFoundException ex) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            throw new DukeInvalidFilePathException(filePath);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            //throw new DukeException(filePath + \" is invalid\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            //throw DukeInvalidFilePathException(filePath);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        } catch (IOException | NumberFormatException ex) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            throw new DukeException(\"The save file at ,\", filePath, \" is corrupt.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            //throw DukeCorruptSaveFileException(filePath);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    } // throws dukeCorruptFileException dukeInvalidPathException"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private Deadline readAsDeadline(BufferedReader file) throws IOException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        boolean complete;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        if (file.readLine().equals(\"0\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            complete \u003d false;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            complete \u003d true;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        return new Deadline(complete, file.readLine(), file.readLine());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private ToDo readAsToDo(BufferedReader file) throws IOException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        boolean complete;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        if (file.readLine().equals(\"0\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            complete \u003d false;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            complete \u003d true;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        return new ToDo(complete, file.readLine());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private Event readAsEvent(BufferedReader file) throws IOException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        boolean complete;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        if (file.readLine().equals(\"0\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            complete \u003d false;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            complete \u003d true;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        return new Event(complete, file.readLine(), file.readLine());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void save(TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        FileWriter file;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            file \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            // list size"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            file.append(Integer.toString(taskList.size()));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            file.append(System.lineSeparator());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            // per task in list"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            for (Task task : taskList.list()) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                switch (task.getClass().getSimpleName()) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    case \"ToDo\":"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                        writeFromToDo((ToDo) task, file);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    case \"Event\":"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                        writeFromEvent((Event) task, file);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    case \"Deadline\":"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                        writeFromDeadline((Deadline) task, file);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            file.close();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        } catch (FileNotFoundException ex) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            throw new DukeInvalidFilePathException(filePath);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            // FileNotFoundException should the only exception, if it is not then:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            System.err.println(ex);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private static void writeFromDeadline (Deadline task, FileWriter file) throws IOException {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(\"D\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(System.lineSeparator());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(task.isComplete() ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(System.lineSeparator());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(task.getDescription());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(System.lineSeparator());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(task.time);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(System.lineSeparator());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private static void writeFromEvent (Event task, FileWriter file) throws IOException {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(\"E\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(System.lineSeparator());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(task.isComplete() ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(System.lineSeparator());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(task.getDescription());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(System.lineSeparator());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(task.time);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(System.lineSeparator());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    private static void writeFromToDo(ToDo task, FileWriter file) throws IOException {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(\"T\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(System.lineSeparator());"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(task.isComplete() ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(System.lineSeparator());"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(task.getDescription());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        file.append(System.lineSeparator());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "briyanii"
        },
        "content": "//saved file format"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "briyanii"
        },
        "content": "/*"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    total_#_of_tasks"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    task_type"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    task_completion_status"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    task_description"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    task_time(depends on type if needed);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    task_type..."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ..."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ..."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ..."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "briyanii"
        },
        "content": " */"
      }
    ],
    "authorContributionMap": {
      "briyanii": 164
    }
  },
  {
    "path": "src/main/java/duke/tasklist/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.io.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic String time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic Deadline(String description, String time) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tsuper(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\tthis.time \u003d Parser.parseDateTime(time);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t} catch (DukeException e) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\tthis.time \u003d time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic Deadline(boolean isComplete, String description, String time) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tsuper(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\tthis.time \u003d Parser.parseDateTime(time);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t} catch (DukeException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\tthis.time \u003d time;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\ttaskCompletionStatus \u003d isComplete;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\treturn new StringBuilder(\"[D]\")"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\t.append(super.toString())"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\t.append(\" (by: \")"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\t.append(time)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\t.append(\")\")"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\t.toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 37
    }
  },
  {
    "path": "src/main/java/duke/tasklist/DukeEmptyListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class DukeEmptyListException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public DukeEmptyListException() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        super(\"Your list is empty!\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 9
    }
  },
  {
    "path": "src/main/java/duke/tasklist/DukeNoCorrespondingTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class DukeNoCorrespondingTaskException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public DukeNoCorrespondingTaskException(int number) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        super(\"The following number does not correspond to a task in the list: \", Integer.toString(number));"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 9
    }
  },
  {
    "path": "src/main/java/duke/tasklist/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.io.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic String time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic Event(String description, String time) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tsuper(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\tthis.time \u003d Parser.parseDateTime(time);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t} catch (DukeException e) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\tthis.time \u003d time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic Event(boolean isComplete, String description, String time) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tsuper(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\tthis.time \u003d Parser.parseDateTime(time);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t} catch (DukeException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\tthis.time \u003d time;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\ttaskCompletionStatus \u003d isComplete;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\treturn new StringBuilder(\"[E]\")"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\t.append(super.toString())"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\t.append(\" (at: \")"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\t.append(time)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\t.append(\")\")"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\t.toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 38
    }
  },
  {
    "path": "src/main/java/duke/tasklist/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic boolean taskCompletionStatus;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tprivate String taskDescription;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\ttaskCompletionStatus \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\ttaskDescription \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic Task complete() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\ttaskCompletionStatus \u003d true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\treturn this;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic boolean isComplete() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\treturn taskCompletionStatus;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic String getDescription() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\treturn new String(taskDescription);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\treturn new StringBuilder(\"[\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\t.append((taskCompletionStatus ? \"✓\" : \"✗\"))"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\t.append(\"] \")"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\t.append(taskDescription)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t\t.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 33
    }
  },
  {
    "path": "src/main/java/duke/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.command.DukeIncorrectParameterTypeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tprivate ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic TaskList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\ttaskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic Task addTask(Task t) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\ttaskList.add(t);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\treturn t;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic ArrayList\u003cTask\u003e list() throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\treturn new ArrayList\u003cTask\u003e(taskList);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic int size() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\treturn taskList.size();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic Task delete(int id) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\treturn taskList.remove(id - 1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t} catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\t// task id does not correspond to task in list"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\tthrow new DukeNoCorrespondingTaskException(id);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic Task add(Task task) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\ttaskList.add(task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\treturn task;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic Task delete(String id) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\treturn delete(Integer.parseInt(id));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t} catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\tthrow new DukeIncorrectParameterTypeException(\"Integer\", id);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic Task complete(int id) throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\treturn taskList.get(id - 1).complete();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t} catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\tthrow new DukeNoCorrespondingTaskException(id);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic Task complete(String id) throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\treturn complete(Integer.parseInt(id));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t} catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t\tthrow new DukeIncorrectParameterTypeException(\"Integer\", id);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 64
    }
  },
  {
    "path": "src/main/java/duke/tasklist/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic ToDo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tsuper(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic ToDo(boolean isComplete, String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\tsuper(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\ttaskCompletionStatus \u003d isComplete;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t\treturn \"[T]\".concat(super.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 17
    }
  },
  {
    "path": "src/main/resources/SaveFiles/DukeSave01.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "4"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": "T"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "b"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "D"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "0"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "somethin"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "something"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "E"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "0"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "somewhere"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "12th of DECEMBER 1212, 12:12pm"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "T"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "0"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "a"
      }
    ],
    "authorContributionMap": {
      "briyanii": 15
    }
  },
  {
    "path": "src/test/java/duke/frontend/UserInterfaceTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.io.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.command.DukeMissingCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.command.DeleteTaskCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.command.CompleteTaskCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.command.DukeIncorrectParameterTypeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.frontend.UserInterface;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class UserInterfaceTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    UserInterface ui \u003d new UserInterface();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void executeCommand_incorrectArgumentType_exceptionThrown() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows("
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                DukeIncorrectParameterTypeException.class,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                () -\u003e ui.executeCommand(new DeleteTaskCommand(\"a\")));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows("
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                DukeIncorrectParameterTypeException.class,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                () -\u003e ui.executeCommand(new CompleteTaskCommand(\"a\")));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void readInput_blankInput_exceptionThrown() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows("
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                DukeMissingCommandException.class,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "briyanii"
        },
        "content": "                () -\u003e ui.executeCommand(Parser.parseAsCommand(\"\")));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 35
    }
  },
  {
    "path": "src/test/java/duke/io/DukeParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.io.Parser;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "public class DukeParserTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void parseDateTime_validInput_success() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            assertEquals(\"12th of DECEMBER 1212, 12:12pm\", Parser.parseDateTime(\"12/12/1212 1212\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            assertEquals(\"12th of DECEMBER 1212, 12:12am\", Parser.parseDateTime(\"12/12/1212 0012\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            assertEquals(\"23rd of JANUARY 2019, 11pm\", Parser.parseDateTime(\"23/01/2019 2300\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            fail(\"Should not have thrown exception\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void parseDateTime_invalidInput_exceptionThrown() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parseDateTime(\"1212\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parseDateTime(\"12/12/1212\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parseDateTime(\"12pm\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parseDateTime(\"never\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void parseDateTime_validLookingInvalidInput_exceptionThrown() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parseDateTime(\"12/00/1212 1212\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parseDateTime(\"12/13/1212 1212\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parseDateTime(\"99/12/1212 1212\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parseDateTime(\"00/12/1212 1212\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parseDateTime(\"12/12/0000 1212\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void parseAsCommand_missingParameter_exceptionThrown() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        //task commands"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows(DukeMissingParameterException.class, () -\u003e Parser.parseAsCommand(\"todo \"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows(DukeMissingParameterException.class, () -\u003e Parser.parseAsCommand(\"deadline \"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows(DukeMissingParameterException.class, () -\u003e Parser.parseAsCommand(\"deadline task\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows(DukeMissingParameterException.class, () -\u003e Parser.parseAsCommand(\"deadline /by time\"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows(DukeMissingParameterException.class, () -\u003e Parser.parseAsCommand(\"event \"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows(DukeMissingParameterException.class, () -\u003e Parser.parseAsCommand(\"event task \"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows(DukeMissingParameterException.class, () -\u003e Parser.parseAsCommand(\"event /at time\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        //other commands"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows(DukeMissingParameterException.class, () -\u003e Parser.parseAsCommand(\"done \"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        assertThrows(DukeMissingParameterException.class, () -\u003e Parser.parseAsCommand(\"delete \"));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void parseAsCommand_redundantArgumentForNoArgumentCommands_success() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            assertTrue(Parser.parseAsCommand(\"list 1\") instanceof ShowListCommand);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            assertTrue(Parser.parseAsCommand(\"bye 1\") instanceof ExitCommand);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            assertTrue(Parser.parseAsCommand(\"list a\") instanceof ShowListCommand);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            assertTrue(Parser.parseAsCommand(\"bye a\") instanceof ExitCommand);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            fail(\"Should return a command ignoring the redundant arguments\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    public void parseAsCommand_nonParseableTimeForDeadlineOrEvent_success() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            assertTrue(Parser.parseAsCommand(\"deadline task /by time\") instanceof AddTaskCommand);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            assertTrue(Parser.parseAsCommand(\"event task /at time\") instanceof AddTaskCommand);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "briyanii"
        },
        "content": "            fail(\"Should return without formatting the time argument into dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "briyanii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "briyanii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "briyanii": 76
    }
  },
  {
    "path": "text-ui-test/actual1.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Hello! I\u0027m Duke :)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Got it! I\u0027ve added this task to the list:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [T][✗] task_1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Got it! I\u0027ve added this task to the list:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [D][✗] task_2 (by: 2pm)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Got it! I\u0027ve added this task to the list:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [E][✗] task_3 (at: 3pm)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     1.[T][✗] task_1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     2.[D][✗] task_2 (by: 2pm)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     3.[E][✗] task_3 (at: 3pm)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [T][✓] task_1"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [D][✓] task_2 (by: 2pm)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     1.[T][✓] task_1"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     2.[D][✓] task_2 (by: 2pm)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     3.[E][✗] task_3 (at: 3pm)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Alright. I\u0027ve removed this task from your list:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [T][✓] task_1"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Alright. I\u0027ve removed this task from your list:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [D][✓] task_2 (by: 2pm)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     1.[E][✗] task_3 (at: 3pm)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "briyanii": 75
    }
  },
  {
    "path": "text-ui-test/actual2.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Hello! I\u0027m Duke :)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! Your list is empty!"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! The number 0 does not correspond to a task in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! The number -1 does not correspond to a task in the list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! \"1.5\" cannot be converted to an integer. Please enter a valid integer as a parameter."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! \"one\" cannot be converted to an integer. Please enter a valid integer as a parameter."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Got it! I\u0027ve added this task to the list:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [T][✗] todo_task_1"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Got it! I\u0027ve added this task to the list:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [T][✗] todo_task_2"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! A TODO requires the following field(s) to be non-empty: (1)description "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Got it! I\u0027ve added this task to the list:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [D][✗] deadline_task_1 (by: 12pm)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! A DEADLINE requires the following field(s) to be non-empty: (1)description (2)time "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! A DEADLINE requires the following field(s) to be non-empty: (1)description (2)time "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! A DEADLINE requires the following field(s) to be non-empty: (1)description (2)time "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Got it! I\u0027ve added this task to the list:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [E][✗] event_task_1 (at: 3pm)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! A EVENT requires the following field(s) to be non-empty: (1)description (2)time "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! A EVENT requires the following field(s) to be non-empty: (1)description (2)time "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! A EVENT requires the following field(s) to be non-empty: (1)description (2)time "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     1.[T][✗] todo_task_1"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     2.[T][✗] todo_task_2"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     3.[D][✗] deadline_task_1 (by: 12pm)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     4.[E][✗] event_task_1 (at: 3pm)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [T][✓] todo_task_1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [D][✓] deadline_task_1 (by: 12pm)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     1.[T][✓] todo_task_1"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     2.[T][✗] todo_task_2"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     3.[D][✓] deadline_task_1 (by: 12pm)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     4.[E][✗] event_task_1 (at: 3pm)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Alright. I\u0027ve removed this task from your list:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [T][✗] todo_task_2"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     1.[T][✓] todo_task_1"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     2.[D][✓] deadline_task_1 (by: 12pm)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     3.[E][✗] event_task_1 (at: 3pm)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "briyanii": 127
    }
  },
  {
    "path": "text-ui-test/input1.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "todo task_1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": "deadline task_2 /by 2pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "event task_3 /at 3pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "briyanii": 11
    }
  },
  {
    "path": "text-ui-test/input2.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "done -1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "done 1.5"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "done one"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "todo todo_task_1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "todo todo_task_2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "todo"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "deadline deadline_task_1 /by 12pm"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "deadline deadline_task_2 /at 3pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "deadline deadline_task_3"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "event event_task_1 /at 3pm"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "event event_task_2 /by 4pm"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "event /at 3pm"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "event"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": "list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "briyanii": 23
    }
  },
  {
    "path": "text-ui-test/output1.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Hello! I\u0027m Duke :)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Got it! I\u0027ve added this task to the list:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [T][✗] task_1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Got it! I\u0027ve added this task to the list:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [D][✗] task_2 (by: 2pm)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Got it! I\u0027ve added this task to the list:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [E][✗] task_3 (at: 3pm)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     1.[T][✗] task_1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     2.[D][✗] task_2 (by: 2pm)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     3.[E][✗] task_3 (at: 3pm)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [T][✓] task_1"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [D][✓] task_2 (by: 2pm)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     1.[T][✓] task_1"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     2.[D][✓] task_2 (by: 2pm)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     3.[E][✗] task_3 (at: 3pm)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Alright. I\u0027ve removed this task from your list:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [T][✓] task_1"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Alright. I\u0027ve removed this task from your list:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [D][✓] task_2 (by: 2pm)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     1.[E][✗] task_3 (at: 3pm)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "briyanii": 75
    }
  },
  {
    "path": "text-ui-test/output2.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Hello! I\u0027m Duke :)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! Your list is empty!"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! The number 0 does not correspond to a task in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! The number -1 does not correspond to a task in the list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! \"1.5\" cannot be converted to an integer. Please enter a valid integer as a parameter."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! \"one\" cannot be converted to an integer. Please enter a valid integer as a parameter."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Got it! I\u0027ve added this task to the list:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [T][✗] todo_task_1"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Got it! I\u0027ve added this task to the list:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [T][✗] todo_task_2"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! A TODO requires the following field(s) to be non-empty: (1)description "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Got it! I\u0027ve added this task to the list:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [D][✗] deadline_task_1 (by: 12pm)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! A DEADLINE requires the following field(s) to be non-empty: (1)description (2)time "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! A DEADLINE requires the following field(s) to be non-empty: (1)description (2)time "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! A DEADLINE requires the following field(s) to be non-empty: (1)description (2)time "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Got it! I\u0027ve added this task to the list:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [E][✗] event_task_1 (at: 3pm)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! A EVENT requires the following field(s) to be non-empty: (1)description (2)time "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! A EVENT requires the following field(s) to be non-empty: (1)description (2)time "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     ☹ OOPS!!! A EVENT requires the following field(s) to be non-empty: (1)description (2)time "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     1.[T][✗] todo_task_1"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     2.[T][✗] todo_task_2"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     3.[D][✗] deadline_task_1 (by: 12pm)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     4.[E][✗] event_task_1 (at: 3pm)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [T][✓] todo_task_1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [D][✓] deadline_task_1 (by: 12pm)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     1.[T][✓] todo_task_1"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     2.[T][✗] todo_task_2"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     3.[D][✓] deadline_task_1 (by: 12pm)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     4.[E][✗] event_task_1 (at: 3pm)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Alright. I\u0027ve removed this task from your list:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "briyanii"
        },
        "content": "       [T][✗] todo_task_2"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     1.[T][✓] todo_task_1"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     2.[D][✓] deadline_task_1 (by: 12pm)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     3.[E][✗] event_task_1 (at: 3pm)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "briyanii"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "briyanii": 127
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "briyanii"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "briyanii"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "briyanii"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "briyanii"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "briyanii"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "briyanii"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "briyanii"
        },
        "content": "if [ -e \"./actual$1.txt\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "briyanii"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    rm actual$1.txt"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "briyanii"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "briyanii"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "briyanii"
        },
        "content": "if ! javac -classpath ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "briyanii"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "briyanii"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "briyanii"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "briyanii"
        },
        "content": "java -classpath ../bin Duke \u003c input$1.txt \u003e actual$1.txt"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "briyanii"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "briyanii"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "briyanii"
        },
        "content": "diff actual$1.txt output$1.txt"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "briyanii"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "briyanii"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    echo \"Test $1 result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "briyanii"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    echo \"Test $1 result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "briyanii"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "briyanii"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "briyanii": 34
    }
  }
]
