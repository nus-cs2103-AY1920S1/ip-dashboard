[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixianggg": 12,
      "-": 15
    }
  },
  {
    "path": "gradlew.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "#!/usr/bin/env sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "##############################################################################"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "##"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "##  Gradle start up script for UN*X"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "##"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "##############################################################################"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "# Attempt to set APP_HOME"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "# Resolve links: $0 may be a link"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "PRG\u003d\"$0\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "# Need this for relative symlinks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "while [ -h \"$PRG\" ] ; do"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    ls\u003d`ls -ld \"$PRG\"`"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    link\u003d`expr \"$ls\" : \u0027.*-\u003e \\(.*\\)$\u0027`"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    if expr \"$link\" : \u0027/.*\u0027 \u003e /dev/null; then"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        PRG\u003d\"$link\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    else"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        PRG\u003d`dirname \"$PRG\"`\"/$link\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "done"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "SAVED\u003d\"`pwd`\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "cd \"`dirname \\\"$PRG\\\"`/\" \u003e/dev/null"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "APP_HOME\u003d\"`pwd -P`\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "cd \"$SAVED\" \u003e/dev/null"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "APP_NAME\u003d\"Gradle\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "APP_BASE_NAME\u003d`basename \"$0\"`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "DEFAULT_JVM_OPTS\u003d\u0027\"-Xmx64m\"\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "# Use the maximum available, or set MAX_FD !\u003d -1 to use that value."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "MAX_FD\u003d\"maximum\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "warn () {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    echo \"$*\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "die () {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    echo"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    echo \"$*\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    echo"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "# OS specific support (must be \u0027true\u0027 or \u0027false\u0027)."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "cygwin\u003dfalse"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "msys\u003dfalse"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "darwin\u003dfalse"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "nonstop\u003dfalse"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "case \"`uname`\" in"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "  CYGWIN* )"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    cygwin\u003dtrue"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    ;;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "  Darwin* )"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    darwin\u003dtrue"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    ;;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "  MINGW* )"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    msys\u003dtrue"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    ;;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "  NONSTOP* )"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    nonstop\u003dtrue"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    ;;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "esac"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "CLASSPATH\u003d$APP_HOME/gradle/wrapper/gradle-wrapper.jar"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "# Determine the Java command to use to start the JVM."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "if [ -n \"$JAVA_HOME\" ] ; then"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        # IBM\u0027s JDK on AIX uses strange locations for the executables"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        JAVACMD\u003d\"$JAVA_HOME/jre/sh/java\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    else"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        JAVACMD\u003d\"$JAVA_HOME/bin/java\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    if [ ! -x \"$JAVACMD\" ] ; then"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "location of your Java installation.\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "else"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    JAVACMD\u003d\"java\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    which java \u003e/dev/null 2\u003e\u00261 || die \"ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "location of your Java installation.\""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "fi"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "# Increase the maximum file descriptors if we can."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "if [ \"$cygwin\" \u003d \"false\" -a \"$darwin\" \u003d \"false\" -a \"$nonstop\" \u003d \"false\" ] ; then"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    MAX_FD_LIMIT\u003d`ulimit -H -n`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    if [ $? -eq 0 ] ; then"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        if [ \"$MAX_FD\" \u003d \"maximum\" -o \"$MAX_FD\" \u003d \"max\" ] ; then"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            MAX_FD\u003d\"$MAX_FD_LIMIT\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        fi"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        ulimit -n $MAX_FD"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        if [ $? -ne 0 ] ; then"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            warn \"Could not set maximum file descriptor limit: $MAX_FD\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        fi"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    else"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "fi"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "# For Darwin, add options to specify how the application appears in the dock"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "if $darwin; then"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    GRADLE_OPTS\u003d\"$GRADLE_OPTS \\\"-Xdock:name\u003d$APP_NAME\\\" \\\"-Xdock:icon\u003d$APP_HOME/media/gradle.icns\\\"\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "fi"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "# For Cygwin, switch paths to Windows format before running java"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "if $cygwin ; then"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    APP_HOME\u003d`cygpath --path --mixed \"$APP_HOME\"`"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    CLASSPATH\u003d`cygpath --path --mixed \"$CLASSPATH\"`"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    JAVACMD\u003d`cygpath --unix \"$JAVACMD\"`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    # We build the pattern for arguments to be converted via cygpath"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    ROOTDIRSRAW\u003d`find -L / -maxdepth 1 -mindepth 1 -type d 2\u003e/dev/null`"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    SEP\u003d\"\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    for dir in $ROOTDIRSRAW ; do"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        ROOTDIRS\u003d\"$ROOTDIRS$SEP$dir\""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        SEP\u003d\"|\""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    done"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    OURCYGPATTERN\u003d\"(^($ROOTDIRS))\""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    # Add a user-defined pattern to the cygpath arguments"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    if [ \"$GRADLE_CYGPATTERN\" !\u003d \"\" ] ; then"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        OURCYGPATTERN\u003d\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    # Now convert the arguments - kludge to limit ourselves to /bin/sh"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    i\u003d0"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    for arg in \"$@\" ; do"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        CHECK\u003d`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        CHECK2\u003d`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        if [ $CHECK -ne 0 ] \u0026\u0026 [ $CHECK2 -eq 0 ] ; then                    ### Added a condition"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            eval `echo args$i`\u003d`cygpath --path --ignore --mixed \"$arg\"`"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        else"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            eval `echo args$i`\u003d\"\\\"$arg\\\"\""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        fi"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        i\u003d$((i+1))"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    done"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    case $i in"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        (0) set -- ;;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        (1) set -- \"$args0\" ;;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        (2) set -- \"$args0\" \"$args1\" ;;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    esac"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "fi"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "# Escape application args"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "save () {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    for i do printf %s\\\\n \"$i\" | sed \"s/\u0027/\u0027\\\\\\\\\u0027\u0027/g;1s/^/\u0027/;\\$s/\\$/\u0027 \\\\\\\\/\" ; done"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    echo \" \""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "}"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "APP_ARGS\u003d$(save \"$@\")"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "# Collect all arguments for the java command, following the shell quoting and substitution rules"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "eval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname\u003d$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "if [ \"$(uname)\" \u003d \"Darwin\" ] \u0026\u0026 [ \"$HOME\" \u003d \"$PWD\" ]; then"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "  cd \"$(dirname \"$0\")\""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "fi"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "exec \"$JAVACMD\" \"$@\""
      }
    ],
    "authorContributionMap": {
      "zhixianggg": 172
    }
  },
  {
    "path": "resources/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "T | 1 | chiong level-8"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "T | 0 | splashdown"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "D | 1 | complete tutorial | 07 Sep 2019 0000"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "E | 0 | JJ Lin\u0027s concert | 02 Aug 2019 1800"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "T | 1 | go home"
      }
    ],
    "authorContributionMap": {
      "zhixianggg": 6
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.logic.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.logic.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.logic.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": " * Main class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * Constructor for Duke."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * @param filePath String of the file path that is passed."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * @throws FileNotFoundException when Storage finds that the File does not exist."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public Duke(String filePath) throws IOException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * Run the whole program for main class."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * @throws IOException when file cannot be found.ls"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public void run() throws IOException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     *  Creates new Duke object and runs it."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * @param args Main method."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * @throws IOException when resources/duke.txt cannot be found."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        Application.launch(Gui.class, args);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public Ui getUi() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return this.ui;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public Storage getStorage() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return storage;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public TaskList getTasks() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixianggg": 66,
      "-": 16
    }
  },
  {
    "path": "src/main/java/Gui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.logic.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.logic.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.logic.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.ui.ConfirmBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.ui.DialogBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import javafx.scene.layout.*;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "public class Gui extends Application {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    private Stage window;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/pikachu.png\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public void start(Stage stage) throws IOException, DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        this.window \u003d stage;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        Duke duke \u003d new Duke(\"resources/duke.txt\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        storage \u003d duke.getStorage();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        tasks \u003d duke.getTasks();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        ui \u003d duke.getUi();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        window.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        window.setResizable(false);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        window.setMinHeight(600.0);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        window.setMinWidth(400.0);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        window.setOnCloseRequest(e -\u003e {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            e.consume();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            closeProgram();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        });"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        });"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        });"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                handleUserInput();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            } catch (IOException io) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                ui.showError(io.getMessage());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        });"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                handleUserInput();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                        DialogBox.getDukeDialog(new Label(ui.showError(e.getMessage())), new ImageView(dukeImage)));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            } catch (IOException io) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                ui.showError(io.getMessage());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        });"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                DialogBox.getDukeDialog(new Label(ui.showWelcome()), new ImageView(dukeImage)));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        window.setScene(scene);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        window.show();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    private void handleUserInput() throws DukeException, IOException {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(userImage)),"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(dukeImage)));"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    private String getResponse(String input) throws DukeException, IOException {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        String fullCommand \u003d input;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sb.append(ui.showLine());"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        String output \u003d c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        boolean isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        if (isExit) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            closeProgram();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    private void closeProgram() {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        boolean answer \u003d ConfirmBox.display(\"Duke\", \"Are you sure you want to exit?\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        if (answer) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            window.close();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixianggg": 190
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.logic.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": " * Add Command Object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public Task taskToAdd;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * Constructor for AddCommand object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * @param t is the Task to be added."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public AddCommand(Task t) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        this.taskToAdd \u003d t;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        taskList.add(taskToAdd);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        storage.writeListToFile(taskList);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return ui.showAddedTask(taskList);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixianggg": 33
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.logic.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": " * Bye Command Object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        super(true);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return ui.showGoodbye();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        if (o \u003d\u003d this) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        if (!(o instanceof ByeCommand)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixianggg": 34
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.logic.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": " * Command abstract class inherited by AddCommand, ByeCommand, DeleteCommand, DoneCommand, ListCommand."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public Command(boolean isExit) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        this.isExit \u003d isExit;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return this.isExit;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixianggg": 30
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.logic.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": " * Delete Command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * Constructor for DeleteCommand object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * @param num is the taskNumber that needs to be deleted."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public DeleteCommand(int num) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        this.index \u003d num - 1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        Task t \u003d taskList.getTask(index);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        taskList.delete(index);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        storage.writeListToFile(taskList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return ui.showDeletedTask(taskList,t);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixianggg": 35
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.logic.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": " * Done Command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * Constructor for DoneCommand object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * @param num is the taskNumber that needs to be done."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public DoneCommand(int num) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        this.index \u003d num - 1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        taskList.markAsDone(index);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        storage.writeListToFile(taskList);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return ui.showDoneTask(taskList.getTask(index));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixianggg": 33
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.logic.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    private String findText;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public FindCommand(String findText) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        this.findText \u003d findText;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        ArrayList\u003cTask\u003e matchingWordsArr \u003d taskList.getMatchingWordsList(findText);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return ui.showMatchingTasks(matchingWordsArr);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixianggg": 25
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.logic.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": " * List Command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return ui.showTaskList(taskList);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        if (o \u003d\u003d this) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        if (!(o instanceof ListCommand)) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixianggg": 33
    }
  },
  {
    "path": "src/main/java/duke/logic/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": " * Exception to be thrown in Duke application."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    private String mesg;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public DukeException(String mesg) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        super(mesg);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        this.mesg \u003d mesg;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return this.mesg;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixianggg": 19
    }
  },
  {
    "path": "src/main/java/duke/logic/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": " * Parser parses the commands in Ui."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * Returns the correct command from given String command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * @param command is the String that needs to be parsed."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * @return approriate command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * @throws DukeException when command is invalid."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public static Command parse(String command) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        isCommandValid(command);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        if (command.split(\" \")[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            int num \u003d Integer.parseInt(command.split(\" \")[1]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            return new DoneCommand(num);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        } else if (command.split(\" \")[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            int spaceIndex \u003d command.indexOf(\" \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            ToDo todo \u003d getToDo(command.substring(spaceIndex + 1));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            return new AddCommand(todo);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        } else if (command.split(\" \")[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            int spaceIndex \u003d command.indexOf(\" \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            int slashIndex \u003d command.indexOf(\"/\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            Deadline deadline \u003d getDeadline(command.substring(spaceIndex + 1, slashIndex - 1),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                    command.substring(slashIndex + 4));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            return new AddCommand(deadline);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        } else if (command.split(\" \")[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            int spaceIndex \u003d command.indexOf(\" \");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            int slashIndex \u003d command.indexOf(\"/\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            Event e \u003d getEvent(command.substring(spaceIndex + 1, slashIndex - 1), command.substring(slashIndex + 4));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            return new AddCommand(e);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        } else if (command.split(\" \")[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            return new DeleteCommand(Integer.parseInt(command.split(\" \")[1]));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        } else if (command.split(\" \")[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            int spaceIndex \u003d command.indexOf(\" \");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            return new FindCommand(command.substring(spaceIndex + 1));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return new ListCommand();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * Returns a new ToDo object."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * @param taskName for initializing ToDo instance."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * @return new ToDo instance."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public static ToDo getToDo(String taskName) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return new ToDo(taskName);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * Returns a new Deadline object."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * @param taskName for initializing Deadline instance."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * @param datetime to be parsed into suitable LocalDateTime object."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * @return new Deadline instance."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public static Deadline getDeadline(String taskName, String datetime) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy HHmm\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        LocalDateTime dateTimeObj \u003d  LocalDateTime.parse(datetime, dtf);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return new Deadline(taskName, dateTimeObj);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * Returns a new Event object."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * @param taskName for initializing Event instance."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * @param datetime to be parsed into suitable LocalDateTime object."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * @return new Event instance."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public static Event getEvent(String taskName, String datetime) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy HHmm\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        LocalDateTime dateTimeObj \u003d  LocalDateTime.parse(datetime, dtf);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return new Event(taskName, dateTimeObj);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    private static boolean isCommandValid(String str) throws DukeException {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        if (! (str.split(\" \")[0].equals(\"list\")"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            || str.split(\" \")[0].equals(\"todo\")"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            || str.split(\" \")[0].equals(\"deadline\")"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            || str.split(\" \")[0].equals(\"event\")"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            || str.split(\" \")[0].equals(\"delete\")"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            || str.split(\" \")[0].equals(\"find\")"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            || str.split(\" \")[0].equals(\"done\") )){"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        } else if (! str.split(\" \")[0].equals(\"list\") \u0026\u0026 str.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            throw new DukeException(String.format(\"OOPS!!! The description of a %s cannot be empty.\","
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                    str.split(\" \")[0]));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        } else if (str.split(\" \")[0].equals(\"deadline\") \u0026\u0026 ! str.contains(\"/by\")) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a deadline has to be followed by \u0027/by\u0027.\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        } else if (str.split(\" \")[0].equals(\"event\") \u0026\u0026 ! str.contains(\"/at\")) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of an event has to be followed by \u0027/at\u0027.\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        } else if (str.split(\" \")[0].equals(\"deadline\") \u0026\u0026 str.split(\" \")[1].equals(\"/by\")) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        } else if (str.split(\" \")[0].equals(\"event\") \u0026\u0026 str.split(\" \")[1].equals(\"/at\")) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        } else if (str.split(\" \")[0].equals(\"delete\") \u0026\u0026 ! isNumeric(str.split(\" \")[1])) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            throw new DukeException(\"OOPS!!! The index of the array has to be specified.\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        } else if (str.split(\" \")[0].equals(\"delete\") \u0026\u0026 isNumeric(str.split(\" \")[1])"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                \u0026\u0026 (Integer.parseInt(str.split(\" \")[1]) \u003c\u003d 0)) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            throw new DukeException(\"OOPS!!! Index out of bounds. It is larger or smaller than size of list.\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        } else if (str.split(\" \")[0].equals(\"delete\") \u0026\u0026 str.split(\" \").length \u003e 2) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            throw new DukeException(\"OOPS!!! Please key in \u0027delete x\u0027, where x is the index that you want to delete!\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    private static boolean isNumeric(String strNum) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return strNum.matches(\"-?\\\\d+(\\\\.\\\\d+)?\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixianggg": 162
    }
  },
  {
    "path": "src/main/java/duke/logic/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": " * TaskList stores ArrayList of Task(s)."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    private ArrayList\u003cTask\u003e arr;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        this.arr \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        this.arr \u003d taskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public void add(Task t) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        arr.add(t);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public void delete(int num) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        arr.remove(num);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public ArrayList\u003cTask\u003e getArr() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return this.arr;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public Task getLast() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return this.arr.get(arr.size() - 1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return this.arr.size();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public void markAsDone(int index) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        this.arr.get(index).markAsDone();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return this.arr.get(index);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * Returns new array of matching words Tasks."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * @param findText the text that contains the words to be found."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * @return a new ArrayList filled with Tasks."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public ArrayList\u003cTask\u003e getMatchingWordsList(String findText) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        ArrayList\u003cTask\u003e matchingWordsList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        String[] stringArr \u003d findText.split(\" \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        for (Task t : arr) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            for (String str: stringArr) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                if (t.getTaskName().contains(str)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                    matchingWordsList.add(t);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return matchingWordsList;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixianggg": 71
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.logic.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.logic.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": " * Deals with saving and loading of tasks in duke.txt."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * Constructor for storage."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * @param filePath name of file path."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * @throws IOException when file does not open."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public Storage(String filePath) throws IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        file \u003d new File(filePath);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        if (! file.exists()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            file.getParentFile().mkdir();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * Loads the ArrayList of Task(s) from duke.txt."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * @return ArrayList of Task(s)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * @throws FileNotFoundException when file is not found."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            String[] stringArr \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            if (stringArr[0].trim().equals(\"T\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                arr.add(Parser.getToDo(stringArr[2].trim()));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            } else if (stringArr[0].trim().equals(\"D\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                arr.add(Parser.getDeadline(stringArr[2].trim(), stringArr[3].trim()));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            } else if (stringArr[0].trim().equals(\"E\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                arr.add(Parser.getEvent(stringArr[2].trim(), stringArr[3].trim()));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            //Mark the last task as done."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            if (stringArr[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                arr.get(arr.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return arr;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * Writes taskList to duke.txt."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * @param taskList that is to be written to file."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * @throws IOException when file does not exist."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public void writeListToFile(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        ArrayList\u003cTask\u003e arr \u003d taskList.getArr();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        for (Task entry : arr) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            if (entry instanceof Deadline) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                sb.append(String.format(\"D | %s | %s | %s\", entry.isDone() ? \"1\" : \"0\","
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                        entry.getTaskName(), ((Deadline) entry).getDateTime()));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            } else if (entry instanceof Event) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                sb.append(String.format(\"E | %s | %s | %s\", entry.isDone() ? \"1\" : \"0\","
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                        entry.getTaskName(), ((Event) entry).getDateTime()));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            } else if (entry instanceof ToDo) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                sb.append(String.format(\"T | %s | %s\", entry.isDone() ? \"1\" : \"0\","
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                        entry.getTaskName()));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            sb.append(System.lineSeparator());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            fw.write(sb.toString());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixianggg": 108
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": " * Deadline object class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    private LocalDateTime dateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public Deadline(String taskName, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public String getDateTime() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmm\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return this.dateTime.format(dtf);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return String.format(\"[%s][%s] %s (by: %s)\","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                this.getType(), isDone ? \"\\u2713\" : \"\\u2718\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                this.taskName, getDateTime());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixianggg": 35
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": " * Event class object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    private LocalDateTime dateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public Event(String taskName, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public String getDateTime() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmm\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return this.dateTime.format(dtf);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return String.format(\"[%s][%s] %s (at: %s)\","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                this.getType(), isDone ? \"\\u2713\" : \"\\u2718\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "                this.taskName, this.getDateTime());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixianggg": 35
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": " * Task object class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": " * Inherited by Event, Deadline and ToDo."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    protected String taskName;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        this.taskName \u003d name;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return String.format(\"[%s][%s] %s\", this.getType(), isDone ? \"\\u2713\" : \"\\u2718\", taskName);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return \" \";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return this.taskName;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixianggg": 38
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": " * ToDo Class Object."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public ToDo(String taskName) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixianggg": 17
    }
  },
  {
    "path": "src/main/java/duke/ui/ConfirmBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import javafx.event.ActionEvent;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import javafx.event.EventHandler;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import javafx.stage.Modality;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "public class ConfirmBox {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    static boolean answer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public static boolean display(String title, String message) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        Stage window \u003d new Stage();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        window.initModality(Modality.APPLICATION_MODAL);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        window.setTitle(title);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        window.setMinWidth(250);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        Label label \u003d new Label();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        label.setText(message);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        Button yesButton \u003d new Button(\"Yes\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        Button noButton \u003d new Button(\"No\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        yesButton.setOnAction(e -\u003e{"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            answer \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            window.close();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        });"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        noButton.setOnAction(e -\u003e{"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            answer \u003d false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            window.close();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        });"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        VBox layout \u003d new VBox();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        layout.getChildren().addAll(label, yesButton, noButton);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        layout.setAlignment(Pos.CENTER);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        Scene scene \u003d new Scene(layout);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        window.setScene(scene);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        window.showAndWait();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return answer;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixianggg": 55
    }
  },
  {
    "path": "src/main/java/duke/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixianggg": 44
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.logic.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": " * Controls what the user sees on the Command Line."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    private StringBuilder sb;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * Initialize Scanner object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * Reads command from user input."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * @return fullCommand"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        String fullCommand \u003d sc.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return fullCommand;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * Prints out the last task in taskList."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * @param taskList that contains the last task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public String showAddedTask(TaskList taskList) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sb.append(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sb.append(System.lineSeparator());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sb.append(String.format(\"    %s\", taskList.getLast().toString()));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sb.append(System.lineSeparator());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sb.append(String.format(\"Now you have %d tasks in the list.\", taskList.getSize()));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sb.append(System.lineSeparator());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * Prints out the entire taskList."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * @param taskList that contains all the tasks."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public String showTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sb.append(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sb.append(System.lineSeparator());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        ArrayList\u003cTask\u003e arr \u003d taskList.getArr();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        int index  \u003d 1;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        for (Task task : arr) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            sb.append(String.format(\"%d. %s\", index, task.toString()));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            sb.append(System.lineSeparator());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * Prints out all the tasks that matches."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * @param arr that contains found tasks."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public String showMatchingTasks(ArrayList\u003cTask\u003e arr) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sb.append(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sb.append(System.lineSeparator());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        int index  \u003d 1;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        for (Task task : arr) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            sb.append(String.format(\"%d. %s\", index, task.toString()));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            sb.append(System.lineSeparator());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * Prints out the task that is recently deleted."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * @param taskList that contains size of array."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * @param t shows that task that is deleted."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public String showDeletedTask(TaskList taskList, Task t) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sb.append(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sb.append(System.lineSeparator());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sb.append(String.format(\"    %s\", t));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sb.append(System.lineSeparator());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sb.append(String.format(\"Now you have %d tasks in the list.\", taskList.getArr().size()));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sb.append(System.lineSeparator());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * Prints welcome message."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public String showWelcome()  {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sb.append(\"Hello I\u0027m Duke! \\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sb.append(System.lineSeparator());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * Prints error message."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * @param errorMsg error message String."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public String showError(String errorMsg) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sb.append(errorMsg);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sb.append(System.lineSeparator());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * Prints out the Task t marked as done."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * @param  t Task to be marked as done."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public String showDoneTask(Task t) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sb.append(\"Nice! I\u0027ve marked this task as done\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sb.append(System.lineSeparator());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sb.append(String.format(\"    %s\", t));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sb.append(System.lineSeparator());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * Prints out dividing line."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public String showLine() {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sb.append(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sb.append(System.lineSeparator());"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     * Prints out goodbye message."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public String showGoodbye() {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sb.append(\"Bye. Hope to see you again!\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        sb.append(System.lineSeparator());"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixianggg": 173
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        assertEquals(2,2);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixianggg": 11
    }
  },
  {
    "path": "src/test/java/duke/logic/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.logic.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import duke.logic.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public void testParserBye() throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            assertEquals(new ByeCommand(),Parser.parse(\"bye\")  );"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            assertEquals(e.getMessage() ,e.getMessage());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    public void testParserList() throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            assertEquals(new ListCommand(),Parser.parse(\"list\")  );"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "            assertEquals(e.getMessage() ,e.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhixianggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixianggg": 34
    }
  }
]
