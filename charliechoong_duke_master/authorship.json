[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    archiveVersion \u003d \"0.2\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Launcher\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "test {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Launcher\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "run {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 15,
      "charliechoong": 51
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "# Duke - User Guide    "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "![Duke](https://raw.githubusercontent.com/charliechoong/duke/master/resources/images/theDuke.png)   "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "**Table of Contents :**  "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "- [1. Introduction](#1-introduction)  "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "- [2. Features](#2-features)  "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    - [2.1 Feature 1: Task category](#21-feature-1-task-category)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    - [2.2 Feature 2: Saving and loading tasks](#22-feature-2-saving-and-loading-list)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "- [3. Commands](#3-commands)  "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    - [3.1 Adding a task](#31-adding-a-task--add)  "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    - [3.2 Listing all tasks](#32-listing-all-tasks-list)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    - [3.3 Marking a task as done](#33-marking-a-task-as-done--done-)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    - [3.4 Deleting a task](#34-deleting-a-task--delete)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    - [3.5 Filtering tasks using a keyword](#35-filtering-tasks-using-keyword-find)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    - [3.6 Prioritising a task](#36-prioritizing-a-task---1-2-3)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    - [3.7 Exiting the program](#37-exiting-the-program---bye)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "- [4. Command Summary](#4-command-summary)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "- [5. Frequently Asked Questions](#5-faq)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "   Duke is an application for users to manage their tasks in life. It uses simple commands and"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "   is optimized for users who **prefer to use desktop app to manage tasks**. "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "## 2. Features "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "   To utilise the features, users simple type in appropriate commands and Duke will carry out."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "   The features are as listed below:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "### 2.1. Feature 1: Task Category  "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "   Duke categorised tasks into 3 types:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "   - **To-do**   "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "   These tasks are things that the users would plan to "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     do. "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "   - **Deadline**   "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "   These tasks are similar to **To-do** tasks, but they have deadlines. "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "   - **Event**  "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "   These tasks are events that users would like to keep track of.  "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "### 2.2. Feature 2: Saving and loading list  "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "   Duke allows for loading and saving tasks from and to "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "   hard disk. This means that users can exit the application"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "   and still have the updates list of task when they use"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "   it again. "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "## 3. Commands"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "   The commands are as listed below : "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "### 3.1. Adding a task : `add`"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "   This command allows you to add any of the 3 types of tasks to "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "   list. The full command differs for all 3 types."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "*Format for Todo task: `todo [description]`*"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "* __Example of adding a *Todo* task__:  "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    `todo go for tutorial`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "* __Expected outcome__:  "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "   Got it. I\u0027ve added this task:            "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     [T][-] go for tutorial"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "   Now you have 1 task in the list."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "*Format for Deadline task: `deadline [description] /by [deadline]`*"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "* __Example of adding a *Deadline* task__:  "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    `deadline watch 10 episodes of Running Man /by 3rd aug`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "* __Expected outcome__:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "      [D][-] watch 10 episodes of Running Man (by: 3rd aug)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "*Format for Event task: `event [description] /at [event time]`*"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "* __Example of adding an *Event* task__:  "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "   `event presentation /at 9aug`  "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "   "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "* __Expected outcome__:  "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    Got it. I\u0027ve added this task:  "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     [E][-] presentation (at: 10aug)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "### 3.2. Listing all tasks: `list` "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "This command prints out the list of tasks and their "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "corresponding details in the list. "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "* __Example of usage__:  "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    `list`"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "* __Expected outcome__:  "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    Here are the tasks in your list:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        1.[T][-] go for tutorial"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        2.[D][-] watch 10 episodes of Running Man (by: 3rd aug)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        3.[E][-] presentation (at: 10aug)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        4.[D][-] throw mum off building :) (by: 3 sept 2090)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "### 3.3. Marking a task as done : `done `"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "This command allows the user to mark a task as done.  "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "*Format: `done [taskIndex]`*"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "* __Example of usage__:  "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    `done 3`  "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "* __Expected outcome__:  "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    Nice! I\u0027ve marked this task as done:     "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     [+] presentation"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "### 3.4. Deleting a task : `delete`"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "This command allows the user to delete a task.  "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "*Format: `delete [taskIndex]`*"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "* __Example of usage__:  "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    `delete 4`  "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "* __Expected outcome__\":  "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    Noted. I\u0027ve removed this task:     "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "      [D][-] throw mum off building :) (by: 3 sept 2090)"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "### 3.5. Filtering tasks using keyword: `find`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "This command allows the user to list out all tasks containing a"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "keyword."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "*Format: `find [keyword]`*"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "* __Example of usage__:  "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    `find 10`"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    "
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "* __Expected outcome__:  "
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        1.[D][+] watch 10 episodes of Running Man (by: 3rd aug)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        2.[E][-] presentation (at: 10aug)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    *This command lists out all the tasks containing the keyword `10`.*"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "### 3.6. Prioritizing a task :  `#1` `#2` `#3`"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "This command allows the user to prioritise a task. `#1` represents high "
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "priority. `#2` represents medium priority. `#3` represents low"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "priority.    "
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "*Format for setting as HIGH priority: `#1 [taskIndex]`"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "* __Example of usage__:  "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    `#1 2`  "
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    "
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "* __Expected outcome__:  "
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    Alright! Master Duke has set priority HIGH for this task:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "      [T][+] go for tutorial \u003cPriority: HIGH\u003e"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    ```  "
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    *This sets the second task with a HIGH priority.*"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "### 3.7. Exiting the program :  `bye`  "
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "This command allows the user to exit and closes the Duke application."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "* __Example of usage__:  "
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    `bye`"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    "
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "* __Expected outcome__:  "
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    `Farewell detected. Duke turning off...zzz`"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "## 4. Command Summary"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "* Add : `[taskType] [description] ...`  "
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "   * Todo: `todo [description]`"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        * eg. `todo buy gift`"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        "
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "   * Deadline: `deadline [description] /by [deadline]`"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        * eg. `deadline assignment /by 2pm`"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        "
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "   * Event: `event [description] /at [eventTime]`"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        * eg. `event Justin Bieber\u0027s concert /at 08/02/1996` "
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        "
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "* Delete : `delete [taskIndex]`"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    * eg. `delete 10`"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    "
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "* Mark as done : `done [taskIndex]`"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    * eg. `done 2`"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     "
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "* Exit : `bye`"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "* Find : `find [taskIndex]`"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    * eg. `find run` , `find 16aug`"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "* List : `list`"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "* Prioritise: `#[priorityNumber] [taskIndex]`"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "   * eg. `#2 3` , `#1 1` , `#3 1`  "
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "   "
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "## 5. FAQ"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "* Q: *Why doesn\u0027t my list load correctly when I re-opened the application?*  "
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    * You have to exit the program correctly (ie. with the \"bye\" command) in order for the application to update"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "      on the hard disk.  "
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "      "
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "* Q: *Why can\u0027t I add the Event/Deadline task?*"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    * Please ensure that you followed the correct format. Please refer to [3.1 Adding a task](31-adding-a-task--add)."
      }
    ],
    "authorContributionMap": {
      "-": 12,
      "charliechoong": 180
    }
  },
  {
    "path": "src/data/tasklist.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "T | 1 | watch 10 of Damith\u0027s videos | HIGH"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "D | 0 | go CS2103 tut | later | HIGH"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "T | 0 | other modules | LOW"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "E | 0 | Justin Bieber\u0027s concert | 3rd Oct"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "D | 0 | show mum results :( | 06/13/2090"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "E | 1 | Damith\u0027s event | 8th june | HIGH"
      }
    ],
    "authorContributionMap": {
      "charliechoong": 6
    }
  },
  {
    "path": "src/main/java/seedu/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "charliechoong"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "charliechoong"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "charliechoong"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "charliechoong"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "charliechoong": 61
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.commons.Messages;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.ui.UI;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * Constructs a Duke object. Reads and loads the latest record of the Task List"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * from the file that stores the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * @param filePath Represents the file address of the file to be read."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        ui \u003d new UI();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * Takes in command from user and executes the command. Returns a reply as String."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    protected String getResponse(String input) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            Command c \u003d new Parser().parse(input);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            String response \u003d  c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            return Messages.MESSAGE_UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            return \"The description cannot be empty :-(\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "charliechoong": 43
    }
  },
  {
    "path": "src/main/java/seedu/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "charliechoong": 12
    }
  },
  {
    "path": "src/main/java/seedu/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "charliechoong"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "charliechoong"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    private Duke duke \u003d new Duke(\"C:/duke/src/data/tasklist.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            stage.setTitle(\"DUKE\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "charliechoong": 32
    }
  },
  {
    "path": "src/main/java/seedu/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.commons.Messages;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "charliechoong"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "charliechoong"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/theUser.jpg\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/theDuke.jpg\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(Messages.MESSAGE_WELCOME_MESSAGE, dukeImage));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        );"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            new java.util.Timer().schedule("
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    new java.util.TimerTask() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                        @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                        public void run() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                            System.exit(0);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    }, 500"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            );"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "charliechoong": 65
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.commons.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.task.Todo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.ui.UI;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "charliechoong"
        },
        "content": " * Evaluates the task type and adds it to the Task list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "charliechoong"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "public class AddCommand extends Command{"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    private Task taskToAdd;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    private String partialCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public AddCommand(String taskType, String partialCommand) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        this.partialCommand \u003d partialCommand;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    private void evaluateTaskType() throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        String taskDescription;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        String taskDate;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        String[] subparts;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    taskDescription \u003d partialCommand;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    taskToAdd \u003d new Todo(taskDescription);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    subparts \u003d partialCommand.split(\" /by \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    taskDescription \u003d subparts[0];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    taskDate \u003d subparts[1];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    taskToAdd \u003d new Deadline(taskDescription, taskDate);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    subparts \u003d partialCommand.split(\" /at \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    taskDescription \u003d subparts[0];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    taskDate \u003d subparts[1];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    taskToAdd \u003d new Event(taskDescription, taskDate);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    throw new DukeException(Messages.MESSAGE_UNKNOWN_COMMAND);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public String execute(TaskList tasks, UI ui, Storage storage) throws DukeException, ArrayIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        this.evaluateTaskType();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        tasks.add(taskToAdd);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        String reply \u003d \"Got it. I\u0027ve added this task:\\n\\t  \" + taskToAdd + \"\\n\\tNow you have \" + tasks.size()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                + ((tasks.size() \u003d\u003d 1) ? \" task\" : \" tasks\") + \" in the list.\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "charliechoong": 60
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.ui.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public boolean isExit \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public String execute(TaskList tasks, UI ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    };"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "charliechoong": 16
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.ui.UI;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "charliechoong"
        },
        "content": " * This class represents the \"delete\" command by user and removes the task as specified by the index given by user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "charliechoong"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "public class DeleteCommand extends Command{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    private int taskIndex;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public DeleteCommand(int taskIndex) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public String execute(TaskList tasks, UI ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        if (taskIndex \u003e tasks.size()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            throw new DukeException(\"\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        Task removedTask \u003d tasks.remove(taskIndex - 1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        String reply \u003d \"Noted. I\u0027ve removed this task:\\n\\t  \" + removedTask + \"\\n\\t\" + \"Now you have \" + tasks.size()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                + ((tasks.size() \u003d\u003d 1) ? \" task\" : \" tasks\") + \" in the list.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "charliechoong": 29
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.ui.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "charliechoong"
        },
        "content": " * This class represents the \"done\" command to mark a task as done."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "charliechoong"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "public class DoneCommand extends Command{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    private int taskIndex;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public DoneCommand(int taskIndex){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public String execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        String reply \u003d tasks.get(taskIndex - 1).markAsDone();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "charliechoong": 22
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.commons.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.ui.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "charliechoong"
        },
        "content": " * This class represents the \"bye\" command by user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "charliechoong"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "public class ExitCommand  extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public String execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        super.isExit \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            return Messages.MESSAGE_CANT_WRITE_TO_FILE;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        return Messages.MESSAGE_GOODBYE_MESSAGE;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "charliechoong": 25
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.ui.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "charliechoong"
        },
        "content": " * This class represents the \"find\" command by user and prints out all the tasks in the Task list containing the keyword input by user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "charliechoong"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public String execute(TaskList tasks, UI ui, Storage storagae) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        TaskList matchingTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        String reply \u003d \"Here are the matching tasks in your list:\\n\\t \";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        for (Task task: tasks) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            if (task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                matchingTasks.add(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d matchingTasks.size(); i++) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            reply +\u003d i + \".\" + matchingTasks.get(i - 1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            if (i \u003c matchingTasks.size()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                reply +\u003d \"\\n\\t \";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "charliechoong": 35
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.ui.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "charliechoong"
        },
        "content": " * This class represents the \"list\" command from user. It prints the list of tasks in the task list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "charliechoong"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public String execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        String reply \u003d \"Here are the tasks in your list:\\n\\t \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            reply +\u003d (i + 1) + \".\" + tasks.get(i);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            if (i !\u003d tasks.size() - 1) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                reply +\u003d \"\\n\\t \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "charliechoong": 23
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/PriorityCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.priority.Priority;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.ui.UI;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "public class PriorityCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    private int taskIndex;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    private Priority taskPriority;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public PriorityCommand(String strPriorityLevel, String strTaskIndex) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        this.taskIndex \u003d Integer.parseInt(strTaskIndex);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        evaluatePriorityLevel(strPriorityLevel);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    private void evaluatePriorityLevel(String strPriorityLevel) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        switch (strPriorityLevel) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        case \"#1\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            taskPriority \u003d  Priority.HIGH;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        case \"#2\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            taskPriority \u003d  Priority.MEDIUM;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        case \"#3\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            taskPriority \u003d  Priority.LOW;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            taskPriority \u003d  null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public String execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        task \u003d tasks.get(taskIndex - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        task.setPriority(taskPriority);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        return commandReply();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public String commandReply() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        String reply \u003d \"Alright! Master Duke has set priority \" + taskPriority + \" for this task: \" + task;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "charliechoong": 46
    }
  },
  {
    "path": "src/main/java/seedu/duke/commons/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "package seedu.duke.commons;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": " * Container for user visible messages"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public static final String REPLY_WRAPPER \u003d \"_______________________________________________________________\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public static final String MESSAGE_WELCOME_MESSAGE \u003d \"GREETINGS. I\u0027m Duke.\\nCommand me intelligently, and I will certainly fulfil it.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public static final String MESSAGE_GOODBYE_MESSAGE \u003d \"Farewell detected. Duke turning off... zzz\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"O God! Duke is unable to recognise your command. Try harder :-(\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public static final String MESSAGE_FILE_NOT_FOUND \u003d \"Duke is unable to detect the specified file.\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public static final String MESSAGE_CANT_WRITE_TO_FILE \u003d \"Duke is unable to record your tasks to your hard disk\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "charliechoong": 13
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "charliechoong": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/parser/DateParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "package seedu.duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "public class DateParser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    /** Converts a string into a Date object. If the string is not in the specified format"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * (dd/MM/yyyy HHmm), throws ParseException."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * @param strDate Represents a string meant to be a date."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * @return Date object that corresponds to the string."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public Date understandDate(String strDate) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            SimpleDateFormat formatter1 \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            return formatter1.parse(strDate);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "charliechoong": 22
    }
  },
  {
    "path": "src/main/java/seedu/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "package seedu.duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.commands.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.commands.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.commands.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.commands.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.commands.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.commands.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.commands.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.commands.PriorityCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "charliechoong"
        },
        "content": " * Represents a command checker to verify if a command is valid. If valid, the corresponding Command will be"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "charliechoong"
        },
        "content": " * returned."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "charliechoong"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    /** Checks if a command is valid and execute command. If command is incomplete, throws"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * ArrayOutOfBoundException. If command is invalid, throws DukeException."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * @param command Represents the command to be executedd."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * @return Command Represents the command corresponding to user input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public Command parse(String command) throws DukeException{"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        String[] parts \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        switch (parts[0]) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            return new FindCommand(parts[1]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            int taskNum \u003d Integer.parseInt(parts[1]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            return new DoneCommand(taskNum);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            taskNum \u003d Integer.parseInt(parts[1]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            return new DeleteCommand(taskNum);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            return new AddCommand(parts[0], parts[1]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        case \"deadline\": case \"event\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            return new AddCommand(parts[0], parts[1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        case \"#1\" : case \"#2\" : case \"#3\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            return new PriorityCommand(parts[0], parts[1]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            throw new DukeException(\"\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "charliechoong": 49
    }
  },
  {
    "path": "src/main/java/seedu/duke/priority/Priority.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "package seedu.duke.priority;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "public enum Priority {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    HIGH, MEDIUM, LOW;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "charliechoong": 5
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public String path;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        this.path \u003d filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public File load() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        return new File(path);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public void save(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        FileWriter fw \u003d new FileWriter(path);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            String replyToFile \u003d task.writeToFile();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            fw.write(replyToFile);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "charliechoong": 29
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.parser.DateParser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "/** Represents a task with a deadline. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    protected String strBy;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    protected Date by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    /** Constructs a Deadline object. Takes in the description of the task and"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * a string as the deadline of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * @param description Represents the description of the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * @param strBy Represents the expected date of completion of task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public Deadline(String description, String strBy) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        this.strBy \u003d strBy;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        this.by \u003d new DateParser().understandDate(strBy);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + strBy + ((priority \u003d\u003d null)? \"\\n\" : \" | \""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                + priority + \"\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + strBy + \")\" + ((priority \u003d\u003d null)? \"\" : \" \u003cP: \" + priority"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                + \"\u003e\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "charliechoong": 34
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.parser.DateParser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    protected String strAt;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    protected Date at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    /** Constructs an Event object. Takes in the description of the task and the date of the event"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * as a string."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * @param description Represents the description of the event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * @param strAt Represents the date of the event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public Event(String description, String strAt) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        this.strAt \u003d strAt;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        this.at \u003d new DateParser().understandDate(strAt);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + this.description + \" | \" + this.strAt +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                ((priority \u003d\u003d null)? \"\\n\" : \" | \" + priority + \"\\n\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + strAt + \")\" + ((priority \u003d\u003d null)? \"\" : \" \u003cP: \" + priority"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                + \"\u003e\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "charliechoong": 33
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.priority.Priority;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    protected Priority priority;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        //this.priority \u003d Priority.LOW;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u274C\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    /** Set a task as done and returns an acknowledgement of making the task as done."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * @return a string to acknowledge successful marking of task as done."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public String markAsDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        String reply \u003d \"Nice! I\u0027ve marked this task as done:\\n\\t\" +  \" [\\u2713] \" + description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public Priority getPriority() { return priority; }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public void setPriority(Priority priority) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        this.priority \u003d priority;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "charliechoong": 46
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.priority.Priority;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "charliechoong"
        },
        "content": " * Represents an ArrayList that takes in objects of type Task and its subclasses."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "charliechoong"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "public class TaskList extends ArrayList\u003cTask\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    /** This is the first constructor which is used to initialise an empty TaskList. */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    /** This is the second constructor which is used to initialise a non-empty TaskList."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * It reads the existing Task objects from a file and adds them to the TaskList."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * @param f Represents the file to be read."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     * @throws DukeException  If f cannot be found."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public TaskList(File f) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                String[] parts \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                assert (parts[0].equals(\"\")) \u003d\u003d false: \"Error in file recording.\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                assert (parts[1].equals(\u00270\u0027) || parts[1].equals(\u00271\u0027)) \u003d\u003d false: \"Error in file recording.\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                switch (parts[0]) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    add(new Todo(parts[2]));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    this.get(this.size() - 1).isDone \u003d (parts[1].equals(\"1\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    if (parts.length \u003e 3 ) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                        this.get(this.size() - 1).priority \u003d readPriority(parts[3]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    assert parts[2].equals(\"\") \u003d\u003d false: \"Error in file recording.\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    add(new Event(parts[2], parts[3]));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    this.get(this.size() - 1).isDone \u003d (parts[1].equals(\"1\"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    if (parts.length \u003e 4) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                        this.get(this.size() - 1).priority \u003d readPriority(parts[4]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    assert parts[2].equals(\"\") \u003d\u003d false: \"Error in file recording.\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    add(new Deadline(parts[2], parts[3]));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    this.get(this.size() - 1).isDone \u003d (parts[1].equals(\"1\"));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    if (parts.length \u003e 4) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                        this.get(this.size() - 1).priority \u003d readPriority(parts[4]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            throw new DukeException(\"\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    private Priority readPriority(String strPriority) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        switch (strPriority) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        case \"HIGH\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            return Priority.HIGH;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        case \"MEDIUM\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            return Priority.MEDIUM;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        case \"LOW\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            return Priority.LOW;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "charliechoong": 78
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + ((priority \u003d\u003d null)? \"\\n\" : \" | \" + priority +"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "                \"\\n\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        return \"[T]\" + super.toString() + ((priority \u003d\u003d null)? \"\" : \" \u003cP: \" + priority + \"\u003e\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "charliechoong": 18
    }
  },
  {
    "path": "src/main/java/seedu/duke/ui/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "package seedu.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import seedu.duke.commons.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    private final PrintStream out;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public UI() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        this(System.in, System.out);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public UI(InputStream in, PrintStream out) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        this.in \u003d new Scanner(in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        this.out \u003d out;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        printReply(Messages.MESSAGE_WELCOME_MESSAGE);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public void showGoodByeMessage() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        printReply(Messages.MESSAGE_GOODBYE_MESSAGE);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        printReply(Messages.MESSAGE_FILE_NOT_FOUND);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public void printReply(String reply) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        System.out.println(\"\\t\" + Messages.REPLY_WRAPPER + \"\\n\\t\" + reply + \"\\n\\t\" + Messages.REPLY_WRAPPER);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "charliechoong": 37
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "\u003c?import javafx.scene.effect.ColorAdjust?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" textFill\u003d\"#dd18c6\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"82.0\" fitWidth\u003d\"78.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "         \u003ceffect\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            \u003cColorAdjust brightness\u003d\"-0.13\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "         \u003c/effect\u003e\u003c/ImageView\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "charliechoong": 20
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"seedu.duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "\u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        \u003ccontent\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        \u003c/content\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "\u003c/children\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "charliechoong": 18
    }
  },
  {
    "path": "src/test/java/seedu/duke/parser/DateParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "package seedu.duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "public class DateParserTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    public void testParseDate(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        assertEquals(\"Sun Dec 15 12:10:00 SGT 1996\", new DateParser().parseDate(\"15/12/1996 1210\").toString());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    void testParseDate_invalidFormat_null(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        assertEquals(null, new DateParser().parseDate(\"15121996 1210\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "charliechoong": 14
    }
  },
  {
    "path": "src/test/java/seedu/duke/task/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "        assertEquals(\"[T][\\u2718] running home\", new Todo(\"running home\").toString());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "charliechoong"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "charliechoong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "charliechoong": 11
    }
  }
]
