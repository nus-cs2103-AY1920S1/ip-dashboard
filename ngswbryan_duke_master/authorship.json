[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    archiveVersion \u003d \"0.2.1\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    String javaFxVersion \u003d \u002711.0.2\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "test {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 40,
      "-": 14
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "Duke is your one stop solution to keep track of all your tasks! Never miss a task again!"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "### Short form of commands are available for more seasoned users!"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "#### Todo: `todo`, `t`"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "Adds a simple task that needs to be done to Duke\u0027s list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "#### Deadline: `deadline`, `dl`"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "Adds a deadline task that needs to be done by a fixed timing to Duke\u0027s list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "#### Event: `event`, `e`"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "Adds an event task with its location to Duke\u0027s list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "#### Done: `done`, `d`"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "Allows you to mark the task as done on Duke."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "#### Delete: `delete`, `del`"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "Delete any unwanted or compeleted tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "#### Find: `find`, `f`"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "Searches for any tasks with descriptions matching the given keyword."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "#### List: `list`, `l`"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "Lists out all tasks currently being tracked by Duke."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "#### Bye: `bye`, `b`"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "Closes the application in 2 seconds."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "## Example Commands and Usage"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "Command | Example | Description"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "---------------|---------------|---------------"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "`todo \u003ctask\u003e` **/** `t \u003ctask\u003e` | todo clean room **/** t clean room | Adds a new to-do task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "`event \u003cdescription\u003e /at \u003clocation\u003e` **/** `e \u003cdescription\u003e /at \u003clocation\u003e` | event meeting /at library **/** e meeting /at librart | Adds a new event task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "`deadline \u003cdescription\u003e /by \u003cDD/MM/YYYY HHMM\u003e` **/** `dl \u003cdescription\u003e /by \u003cDD/MM/YYYY HHMM\u003e` | deadline tut /by 30/09/2019 2359 **/** dl tut /by 30/09/2019 2359 | Adds a new deadline task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "`done \u003ctaskNumber\u003e` **/** `d \u003cindex\u003e` | done 1 **/** d 1 | Marks selected task as complete."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "`delete \u003ctaskNumber\u003e` **/** `del \u003cindex\u003e` | delete 1 **/** del 1 | Deletes selected task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "`find \u003ckeyword\u003e` **/** `f \u003ckeyword\u003e` | find assignment **/** f assignment | Displays all tasks that match the keyword."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "`list` **/** `l` | list **/** l | Lists all tracked tasks."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "`bye` **/** `b`  | bye **/** b | Closes Duke."
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 29,
      "-": 16
    }
  },
  {
    "path": "src/main/java/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "T | 0 | 458"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "T | 1 | 123123"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "T | 1 | 12301203"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "T | 0 | 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "T | 0 | 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "D | 0 | 456 | 1st of January 0011, 12:11 am"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "D | 0 | 518 | 10th of October 0010, 10:00 am"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "D | 1 | 123 | 10th of October 0010, 8:10 pm"
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 8
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        this.dialog.setMinSize(Label.USE_PREF_SIZE, Label.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * Returns a dialog box based on Duke\u0027s response."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * @param text Text to be displayed in the dialog box."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * @param img Image of Duke."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * @return Dialog box with Duke\u0027s output."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 68
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.commands.ExitCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.utility.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.utility.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.utility.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.utility.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import java.util.Timer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import java.util.TimerTask;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "* Main class of the programme."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "*/ "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    private boolean exit \u003d false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * Constructor method for Duke."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public Duke()  {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        this.storage \u003d new Storage(\"./duke.txt\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        this.tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * Method to get appropriate output based on user input."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * @param input Input that user typed into GUI."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * @return String for Duke to display as a response to the user input."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            Command nextCommand \u003d Parser.parseCommand(input);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            if (nextCommand instanceof ExitCommand) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                this.exit \u003d true;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            String output \u003d nextCommand.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            return ui.printException(e);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            if (this.exit) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                this.exitApplication();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * Method to close application when user inputs \"bye\"."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public void exitApplication() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        Timer countdown \u003d new Timer();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        TimerTask onExit \u003d new TimerTask() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            public void run() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                Platform.exit();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        };"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        countdown.schedule(onExit, 2000);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 103
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public Main() throws FileNotFoundException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().hello();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 36
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * Method to display starting message from Duke on startup."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public void hello() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                DialogBox.getDukeDialog(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\", dukeImage)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 62
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.utility.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.utility.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.utility.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    String input;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    Command(String input) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    Command() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage store) throws DukeException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 22
    }
  },
  {
    "path": "src/main/java/duke/commands/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.errands.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.errands.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.utility.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.utility.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.utility.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.utility.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public DeadlineCommand(String input) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage store) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        int position \u003d this.input.indexOf(\"/\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        assert position !\u003d -1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        if (position \u003d\u003d -1) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Not a valid deadline command\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        String formattedDate \u003d Parser.getFormattedDate(this.input.substring(position + 3));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        Task newTask \u003d new Deadline(this.input.substring(0,position).trim(), formattedDate);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        tasks.input(newTask);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        store.write(tasks);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        return ui.addTask(newTask, tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 31
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.errands.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.utility.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.utility.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.utility.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public DeleteCommand(String input) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage store) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        int toRemove \u003d Integer.parseInt(this.input);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        if (toRemove \u003e tasks.count()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! No such item in the list!\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        Task deleted \u003d  tasks.fetch(toRemove);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        tasks.delete(toRemove);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        store.write(tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        return ui.deleteTask(deleted, tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 27
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.errands.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.utility.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.utility.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.utility.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public DoneCommand(String input) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage store) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        int toDone \u003d Integer.parseInt(this.input);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        assert toDone \u003c\u003d tasks.count();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        if (toDone \u003e tasks.count()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! No such item in the list!\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        Task doneTask \u003d tasks.fetch(toDone);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        doneTask.markAsDone();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        store.write(tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        return ui.doneTask(doneTask);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 27
    }
  },
  {
    "path": "src/main/java/duke/commands/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.errands.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.errands.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.utility.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.utility.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.utility.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.utility.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public EventCommand(String input) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage store) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        int position \u003d this.input.indexOf(\"/\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        assert position !\u003d -1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        if (position \u003d\u003d -1) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Not a valid event command\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        Task newTask \u003d new Event(this.input.substring(0,position).trim(), this.input.substring(position + 3).trim());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        tasks.input(newTask);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        store.write(tasks);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        return ui.addTask(newTask, tasks);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 30
    }
  },
  {
    "path": "src/main/java/duke/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.utility.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.utility.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.utility.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage store) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        return ui.bye();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 18
    }
  },
  {
    "path": "src/main/java/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.errands.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.utility.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.utility.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.utility.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public FindCommand(String input) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage store)  {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        String search \u003d this.input.trim();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        ArrayList\u003cTask\u003e found \u003d tasks.find(search);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        if (found.isEmpty()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            return ui.findEmpty();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            return ui.foundItems(found);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 27
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.utility.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.utility.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.utility.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage store) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        return ui.list(tasks);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 19
    }
  },
  {
    "path": "src/main/java/duke/commands/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.errands.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.errands.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.utility.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.utility.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.utility.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public TodoCommand(String input) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage store) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        if (this.input.trim().isEmpty()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        Task newTask \u003d new Todo(this.input.trim());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        tasks.input(newTask);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        store.write(tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        return ui.addTask(newTask, tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 27
    }
  },
  {
    "path": "src/main/java/duke/errands/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "package duke.errands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        return \"[D]\" + super.toString() + \" \" + \"(by: \" + by + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        String completion;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            completion \u003d \"1\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            completion \u003d \"0\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        return \"D | \" + completion + \" | \" + this.description + \" | \" + this.by;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 28
    }
  },
  {
    "path": "src/main/java/duke/errands/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "package duke.errands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        String completion;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            completion \u003d \"1\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            completion \u003d \"0\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        return \"E | \" + completion + \" | \" + this.description + \" | \" + this.at;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 28
    }
  },
  {
    "path": "src/main/java/duke/errands/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "package duke.errands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public abstract String getStatus();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 26
    }
  },
  {
    "path": "src/main/java/duke/errands/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "package duke.errands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        String completion;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            completion \u003d \"1\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            completion \u003d \"0\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        return \"T | \" + completion + \" | \" + this.description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 25
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 7
    }
  },
  {
    "path": "src/main/java/duke/utility/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "package duke.utility;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.commands.ListCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.commands.DeadlineCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.commands.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.commands.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.commands.EventCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.commands.ExitCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.commands.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.commands.TodoCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    private static SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * Method to parse user input into a command for Duke to execute."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * @param userInput Command the user typed into Duke."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * @return Command object based on user input."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * @throws DukeException if no matching command found."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public static Command parseCommand(String userInput) throws DukeException, ArrayIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        String[] splittedInput \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            switch (splittedInput[0]) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            case \"b\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            case \"l\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                return new DoneCommand(splittedInput[1]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            case \"d\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                return new DoneCommand(splittedInput[1]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                return new TodoCommand(splittedInput[1]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            case \"t\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                return new TodoCommand(splittedInput[1]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                return new DeadlineCommand(splittedInput[1]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            case \"dl\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                return new DeadlineCommand(splittedInput[1]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                return new EventCommand(splittedInput[1]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            case \"e\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                return new EventCommand(splittedInput[1]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                return new DeleteCommand(splittedInput[1]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            case \"del\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                return new DeleteCommand(splittedInput[1]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                return new FindCommand(splittedInput[1]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            case \"f\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                return new FindCommand(splittedInput[1]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! Please enter something to do!!!\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * Method to format date from DD/MM/YYYY HHMM to text form."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * @param input Date and Time string in DD/MM/YYYY HHMM form."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * @return Formatted string in desired format."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * @throws DukeException if string to be formatted not in correct syntax."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public static String getFormattedDate(String input) throws DukeException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        //Solution below adapted from Lee Wei Gen"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        String parsedDate \u003d \"\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            dateFormatter.parse(input);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            Date date \u003d new SimpleDateFormat(\"dd/MM/yyyy hhmm\").parse(input);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            String day \u003d new SimpleDateFormat(\"dd\").format(date);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            String month \u003d new SimpleDateFormat(\"MMMMMMMMMMMMMMM\").format(date);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            String year \u003d new SimpleDateFormat(\"yyyy\").format(date);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            String time \u003d new SimpleDateFormat(\"h:mm a\").format(date).toLowerCase();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            String postfix;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            int correctedDay \u003d Integer.parseInt(day);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            if (correctedDay \u003e\u003d 11 \u0026\u0026 correctedDay \u003c\u003d 13) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                postfix \u003d \"th\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            } else if (correctedDay % 10 \u003d\u003d 1) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                postfix \u003d \"st\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            } else if (correctedDay % 10 \u003d\u003d 2) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                postfix \u003d \"nd\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            } else if (correctedDay % 10 \u003d\u003d 3) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                postfix \u003d \"rd\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                postfix \u003d \"th\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            parsedDate \u003d correctedDay + postfix + \" of \" + month + \" \" + year + \", \" + time;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            throw new DukeException(\"Wrong date format! Please specify date correctly in /by DD/MM/YYYY HHMM format!\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        return parsedDate;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 114
    }
  },
  {
    "path": "src/main/java/duke/utility/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "package duke.utility;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.errands.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.errands.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.errands.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.errands.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public String filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * Method to read .txt file and load its contents into Duke\u0027s TaskList on startup."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * @return ArrayList of Tasks with all past inputted tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public ArrayList\u003cTask\u003e load()  {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        //Solution below adapted from Joshua Seet"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        FileReader fileReader;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            File newTxt \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            fileReader \u003d new FileReader(newTxt);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            Scanner sc \u003d new Scanner(newTxt);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                String nextTask \u003d sc.nextLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                char taskType \u003d nextTask.charAt(0);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                int taskCompleted \u003d Character.getNumericValue(nextTask.charAt(4));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                String description \u003d nextTask.substring(8).trim();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                case \u0027T\u0027:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    Todo newTask \u003d new Todo(description);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    if (taskCompleted \u003d\u003d 1) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                        newTask.markAsDone();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    list.add(newTask);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                case \u0027D\u0027:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    int index \u003d description.indexOf(\u0027|\u0027);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    String deadlineName \u003d description.substring(0, index).trim();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    String by \u003d description.substring(index + 1).trim();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    Deadline newDeadline \u003d new Deadline(deadlineName, by.trim());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    if (taskCompleted \u003d\u003d 1) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                        newDeadline.markAsDone();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    list.add(newDeadline);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                case \u0027E\u0027:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    int index1 \u003d description.indexOf(\u0027|\u0027);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    String eventName \u003d description.substring(0, index1).trim();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    String at \u003d description.substring(index1 + 1).trim();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    Event newEvent \u003d new Event(eventName, at.trim());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    if (taskCompleted \u003d\u003d 1) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                        newEvent.markAsDone();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    list.add(newEvent);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        } catch (FileNotFoundException err) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            File newTxt \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            newTxt.createNewFile();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            return list;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * Method to save contents of Duke\u0027s TaskList into .txt file for future loads."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * @param taskList Duke\u0027s current updated taskList."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public void write(TaskList taskList) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(this.filePath));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            for (Task task: taskList.list) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                String taskData \u003d task.getStatus();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                writer.write(taskData);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                writer.newLine();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 107
    }
  },
  {
    "path": "src/main/java/duke/utility/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "package duke.utility;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.errands.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "/** "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "* Represents a list of tasks. Stores all tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "*/ "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        this.list \u003d tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        this.list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public void input(Task task) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        this.list.add(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        this.list.remove(index - 1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public int count() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        return this.list.size();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public Task fetch(int index) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        return this.list.get(index - 1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * Method to find all tasks that match a specified keyword from the user."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * @param keyword The keyword to search for in Duke\u0027s tasks based on their description."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * @return ArrayList of tasks will all matching tasks."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public ArrayList\u003cTask\u003e find(String keyword) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        ArrayList\u003cTask\u003e search \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        for (Task current : this.list) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            String toSearch \u003d current.description;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            if (toSearch.toLowerCase().contains(keyword.toLowerCase())) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                search.add(current);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        return search;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 55
    }
  },
  {
    "path": "src/main/java/duke/utility/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "package duke.utility;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.errands.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * Returns a string that will be used as a response to \"list\" command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * @param tasks Task list of all of Duke\u0027s current tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * @return String listing out all the tasks and their descriptions."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * @throws DukeException if task list is empty."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public String list(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        ArrayList\u003cTask\u003e store \u003d tasks.list;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        if (store.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Your list is still empty!\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        String foundItems \u003d \"Here are the tasks in your list:\" + \"\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        for (int i \u003d 0; i \u003c store.size(); i++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            int taskNumber \u003d i + 1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            String taskString \u003d Integer.toString(taskNumber);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            String taskStatus;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            if (i \u003d\u003d store.size() - 1) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                taskStatus \u003d (taskString + \" \" + store.get(i).toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                taskStatus \u003d (taskString + \" \" + store.get(i).toString() + \"\\n\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            foundItems \u003d foundItems + taskStatus;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        return foundItems;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public String bye() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        return \"Bye. Hope to see you again soon!!!\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * Returns a string that will be used as a response to \"todo\" or \"deadline\" or \"event\" command."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * @param toAdd The task to be added to Duke."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * @param tasks Duke\u0027s current Task List."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * @return Response string to add commands."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public String addTask(Task toAdd, TaskList tasks) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        String deadlineInfo \u003d toAdd.toString() + \"\\n\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        String openingText \u003d \"Got it. I\u0027ve added this task: \" + \"\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        int tasksSize \u003d tasks.count();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        String tasksCount \u003d Integer.toString(tasksSize);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        String closingText \u003d \"Now you have \" + tasksCount + \" tasks in the list.\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        return openingText + deadlineInfo + closingText;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * Returns a string that will be used as a response to \"delete\" command."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * @param deleted Task to be deleted."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * @param tasks Duke\u0027s current Task List."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * @return Response string to delete command."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public String deleteTask(Task deleted, TaskList tasks) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        String openingText \u003d \"Noted. I\u0027ve removed this task: \" + \"\\n\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        String deletedInfo \u003d deleted.toString() + \"\\n\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        int tasksSize \u003d tasks.count();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        String tasksCount \u003d Integer.toString(tasksSize);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        String closingText \u003d \"Now you have \" + tasksCount + \" tasks in the list.\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        return openingText + deletedInfo + closingText;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * Returns a string that will be used as a response to \"done\" command."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * @param done Task to be marked as done."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * @return Response string to done command."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public String doneTask(Task done) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        String openingText \u003d \"Nice! I\u0027ve marked this task as done: \" + \"\\n\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        String doneInfo \u003d done.toString();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        return openingText + doneInfo;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public String findEmpty() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        return \"No items found!\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * Returns a string that will be used as a response to \"find\" command."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * @param found ArrayList of tasks which match the search keyword."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     * @return Response string to find command listing all matching tasks."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public String foundItems(ArrayList\u003cTask\u003e found) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        String foundText \u003d \"Here are the matching tasks in your list:\" + \"\\n\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        for (int i \u003d 0; i \u003c found.size(); i++) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            String itemInfo;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            if (i \u003d\u003d found.size() - 1) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                itemInfo \u003d found.get(i).toString();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "                itemInfo \u003d found.get(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            foundText \u003d foundText + itemInfo;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        return foundText;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    public String printException(Exception e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        return e.getMessage();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 111
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "      \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"524.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"524.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"600.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"588.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 19
    }
  },
  {
    "path": "src/test/java/duke/errands/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.errands.Event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    void newEventStatus() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        Event newEvent \u003d new Event(\"test\", \"hall\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        assertEquals(\"\\u2718\", newEvent.getStatusIcon());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    void testMarkAsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        Event newEvent \u003d new Event(\"test2\", \"mpsh\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        newEvent.markAsDone();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        assertEquals(\"\\u2713\", newEvent.getStatusIcon());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "} "
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 21
    }
  },
  {
    "path": "src/test/java/duke/errands/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import duke.errands.Todo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    void getStatus() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        Todo newTodo \u003d new Todo(\"test\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "        assertEquals(\"T | \" + \"0\" + \" | \" + \"test\", newTodo.getStatus());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "} "
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 14
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "todo 1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "todo 2"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "event house party /at lawnce house"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 5
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngswbryan"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "ngswbryan": 21
    }
  }
]
