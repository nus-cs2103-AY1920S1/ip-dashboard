[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hcwong"
        },
        "content": "test {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hcwong"
        },
        "content": "run {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hcwong"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    archiveVersion \u003d \"0.2\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 13,
      "hcwong": 43
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "This is a feature guide on a simple chatbot that I built as part of CS2030\u0027s Individual Project. This is a chatbot which functions as a todolist, and it supports 3 types of tasks for you to manage. They are, in no specific order: Todos, Deadlines, Events. You can mark these events as done and deleted, list them etc as you would a normal todo list."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "![Screenshot](Ui.png)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "The features are as follows. There are a total of 8 commands that you can use to communicate."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "They are:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "1. bye"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "2. event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "3. deadline"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "4. todo"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "5. list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "6. find"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "7. delete"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "8. done"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "The todo list is then stored on disc so that it can subsequently be reloaded when you start talking to the chatbot again. Avoid changing the save location to avoid unintended bugs as this is not something which is expected by the chatbot developer."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "## Bye"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "### Description"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": "Enables you to say goodbye to the chatbot!"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "### Usage"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": "To run this command, simply state:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": "```"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hcwong"
        },
        "content": "bye"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hcwong"
        },
        "content": "```"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hcwong"
        },
        "content": "This will prompt an goodbye message from our chatbot as well."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hcwong"
        },
        "content": "## Event"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hcwong"
        },
        "content": "### Description"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hcwong"
        },
        "content": "The event command allows you to create a task that is associated with a time that it will take place."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hcwong"
        },
        "content": "### Usage"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hcwong"
        },
        "content": "The event command expects 2 key bits of information, the name and the date"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hcwong"
        },
        "content": "```"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hcwong"
        },
        "content": "event \u003cname\u003e /at dd/mm/yy HHMM (in 24 hours time)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hcwong"
        },
        "content": "```"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hcwong"
        },
        "content": "If the data is not in the order above, the chatbot will throw an error and it will not be added to the list. Else, you will receive a message telling you that the event has successfully been added to the list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hcwong"
        },
        "content": "## Deadline"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hcwong"
        },
        "content": "### Description"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hcwong"
        },
        "content": "The deadline command allows you to create a task with a deadline to remind yourself."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hcwong"
        },
        "content": "### Usage"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hcwong"
        },
        "content": "Like the event command, the deadline command expects 2 key bits of information, the name and the date"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hcwong"
        },
        "content": "```"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hcwong"
        },
        "content": "deadline \u003cname\u003e /by dd/mm/yy HHMM (in 24 hours time)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hcwong"
        },
        "content": "```"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hcwong"
        },
        "content": "If the data is not in the order above, the chatbot will throw an error and it will not be added to the list. Else, you will receive a message telling you that the deadline has successfully been added to the list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hcwong"
        },
        "content": "## Todo"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hcwong"
        },
        "content": "### Description"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hcwong"
        },
        "content": "The todo command is just a simple command that allows you to add a task to the todo list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hcwong"
        },
        "content": "### Usage"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hcwong"
        },
        "content": "```"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hcwong"
        },
        "content": "todo \u003cname\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hcwong"
        },
        "content": "```"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hcwong"
        },
        "content": "If the input follows as above, you will receive a message saying that the todo task has been added to the list. Else, you will see an error message."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hcwong"
        },
        "content": "The event command allows you to create a task that is associated with a time that it will take place."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hcwong"
        },
        "content": "## List"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hcwong"
        },
        "content": "### Description"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hcwong"
        },
        "content": "Lists the tasks currently in your todo list"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hcwong"
        },
        "content": "### Usage"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hcwong"
        },
        "content": "```"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hcwong"
        },
        "content": "list"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hcwong"
        },
        "content": "```"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hcwong"
        },
        "content": "If there is nothing in the list, then nothing will be shown."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hcwong"
        },
        "content": "## Find"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hcwong"
        },
        "content": "### Description"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hcwong"
        },
        "content": "The find command allows you to search for items in the list with names that match your selected keyword."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hcwong"
        },
        "content": "### Usage"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hcwong"
        },
        "content": "```"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hcwong"
        },
        "content": "find \u003ckeyword\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hcwong"
        },
        "content": "```"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hcwong"
        },
        "content": "If theres a result, it will be shown, else the chatbot will tell you that 0 results have been found."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hcwong"
        },
        "content": "## Delete"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hcwong"
        },
        "content": "### Description"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hcwong"
        },
        "content": "The delete command allows you to delete items in the list. This deletion is done according to the task number as stated when you run `list`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hcwong"
        },
        "content": "### Usage"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hcwong"
        },
        "content": "```"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hcwong"
        },
        "content": "delete \u003cindex\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hcwong"
        },
        "content": "```"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hcwong"
        },
        "content": "Make sure to pass an integer as the index."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hcwong"
        },
        "content": "If it works, the chatbot will inform you that the task has been deleted. Else, an error message will be thrown. "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hcwong"
        },
        "content": "## Done"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hcwong"
        },
        "content": "### Description"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hcwong"
        },
        "content": "The done command allows you to mark a certain task as completed. This marking is done according to the task number as stated when you run `list`, like deletion."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hcwong"
        },
        "content": "### Usage"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hcwong"
        },
        "content": "```"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hcwong"
        },
        "content": "done \u003cindex\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hcwong"
        },
        "content": "```"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hcwong"
        },
        "content": "Like the delete command, make sure to pass an integer as the index. If the query is correct, the chatbot will inform you that the message has been marked as done."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 17,
      "hcwong": 97
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import javafx.scene.text.TextAlignment;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private Text dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constuctor."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param text String"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param img Image"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param isDuke boolean"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private DialogBox(String text, Image img, boolean isDukeReply) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        if (!isDukeReply) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            dialog.setTextAlignment(TextAlignment.RIGHT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        dialog.setWrappingWidth(260.0);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Gets the user dialog."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param text String"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param img Image"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return DialogBox"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        var db \u003d new DialogBox(text, img, false);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        db.setStyle(\"-fx-background-color: #cad4f3\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Gets the duke dialog."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param text String"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param img Image"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return DialogBox"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        var db \u003d new DialogBox(text, img, true);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        db.setStyle(\"-fx-background-color: #dfe2ff;\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 90
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Main method."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        // TODO: Don\u0027t hardcode"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.storage \u003d new Storage(\"data/duke.txt\"); "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            this.tasks \u003d this.storage.load();    "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            this.ui.printReadError();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Runs the duke program."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.ui.printWelcome();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        boolean shouldRun \u003d true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        while (shouldRun) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                String strCommand \u003d this.ui.readCommand();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                Command c \u003d Parser.parse(strCommand);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                c.execute(this.tasks, this.ui, this.storage);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                shouldRun \u003d !c.isExit();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                this.ui.printError(e);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                this.ui.print(\"Passed in an invalid date\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                shouldRun \u003d false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Handles a response from the input."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param input String"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            return c.execute(this.tasks, this.ui, this.storage);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            return this.ui.stringifyError(e);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            return \"Passed in an invalid date\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        } "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 78
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param stage JavaFXStage"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        AnchorPane ap \u003d new MainWindow(duke);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        scene.getStylesheets().add(getClass().getResource(\"/view/styles.css\").toExternalForm());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "hcwong": 29
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": " * Controller for MainWindow. "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": " * Provides the layout for the other controls."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/shiba.jpg\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/samoyed.jpg\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param duke Duke"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    MainWindow(Duke duke) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            dialogContainer.getChildren().add(DialogBox"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                    .getDukeDialog(\"Hello why are you talking to a dog?\", dukeImage));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.duke \u003d duke;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Initialize duke."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Sets duke."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param d Duke"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        );"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 86
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.command.ToDoCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.error.InvalidTaskArgumentException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.error.InvalidIndexException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.error.InvalidCommandException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.DateUtil;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Handles the various commands."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param command String"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return boolean"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @throws DukeException if any of the functions it calls throws an error"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @throws ParseException if it fails to parse the date properly"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public static Command parse(String command) throws DukeException, ParseException { "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        String keyword \u003d command.split(\" \")[0].trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        switch (keyword) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        case \"bye\": {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        case \"list\": {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        case \"done\": {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            return parseDoneCommand(command);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        case \"todo\": {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            return parseTodoCommand(command);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        case \"deadline\": {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            return parseDeadlineCommand(command);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        case \"event\": {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            return parseEventCommand(command);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        case \"delete\": {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            return parseDeleteCommand(command);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        case \"find\": {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            return parseFindCommand(command);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            throw new InvalidCommandException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Parse Done command."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param command String"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @throws InvalidCommandException if the Done command is not correct"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private static Command parseDoneCommand(String command) throws InvalidCommandException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        String[] doneArr \u003d command.split(\" \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        if (doneArr.length !\u003d 2) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            throw new InvalidCommandException(\"\\u2639 OOPS!!! Done command should only have a valid index\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        int indexToEdit \u003d Integer.parseInt(doneArr[1].trim());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return new DoneCommand(indexToEdit);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Parse Delete command."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param command String"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @throws InvalidCommandException if the arguments provided are invalid"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private static Command parseDeleteCommand(String command) throws InvalidCommandException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        String[] deleteArr \u003d command.split(\" \");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        if (deleteArr.length !\u003d 2) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            throw new InvalidCommandException(\"\\u2639 OOPS!!! Done command should only have a valid index\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        int indexToEdit \u003d Integer.parseInt(deleteArr[1]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return new DeleteCommand(indexToEdit);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Parse Deadline command."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param command String"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @throws InvalidTaskArgumentException if Deadline arguments are invalid"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @throws ParseException if it fails to parse the date"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private static Command parseDeadlineCommand(String command) "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        throws InvalidTaskArgumentException, ParseException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        String[] commandArr \u003d command.replace(\"deadline\", \"\").trim().split(\"/by \");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        if (commandArr.length !\u003d 2) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            throw new InvalidTaskArgumentException(\"\\u2639 OOPS!!! Deadline must have a description and date\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return new DeadlineCommand(commandArr[0].trim(), DateUtil.parseStringToDate(commandArr[1].trim()));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Parse Event command."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param command String"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @throws InvalidTaskArgumentException if Event arguments are invalid"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @throws ParseException if it fails to parse the date"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private static Command parseEventCommand(String command) "
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        throws InvalidTaskArgumentException, ParseException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        String[] commandArr \u003d command.replace(\"event\", \"\").trim().split(\"/at \");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        if (commandArr.length !\u003d 2) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            throw new InvalidTaskArgumentException(\"\\u2639 OOPS!!! Event must have a description and date\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return new EventCommand(commandArr[0].trim(), DateUtil.parseStringToDate(commandArr[1].trim()));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Parse ToDo command."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param command String"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @throws InvalidTaskArgumentException if ToDo arguments are invalid"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private static Command parseTodoCommand(String command) throws InvalidTaskArgumentException {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        String name \u003d command.replace(\"todo\", \"\").trim();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        if (\"\".equals(name)) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            throw new InvalidTaskArgumentException(\"\\u2639 OOPS!!! The description of a todo cannot be empty.\"); "
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return new ToDoCommand(name);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Parse Find Command."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param command String"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @throws InvalidTaskArgumentException if arguments are invalid"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private static Command parseFindCommand(String command) throws InvalidTaskArgumentException {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        String keyword \u003d command.replace(\"find\", \"\").trim();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        if (\"\".equals(keyword)) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            throw new InvalidTaskArgumentException(\"\\u2639 OOPS!!! The description of a find cannot be empty.\"); "
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return new FindCommand(keyword);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 144
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.error.InvalidTimeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private HashSet\u003cLong\u003e timesUnavailable;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Empty constructor."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.timesUnavailable \u003d new HashSet\u003cLong\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constuctor."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param list List of Task"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public TaskList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Adds an item top the list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param task Task"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @throws InvalidTimeException if the time given is already used"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public void add(Task task) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        Optional\u003cDate\u003e taskTime \u003d task.getTime();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        if (taskTime.isPresent()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            boolean isDateAvailable \u003d this.verifyDateAvailability(taskTime.get());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            if (!isDateAvailable) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                throw new InvalidTimeException(\"Sorry, but the time given is already used!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                this.timesUnavailable.add(convertMillisToMin(taskTime.get().getTime()));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.list.add(task);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Removes an item from the list based on 1-indexed index."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param index int"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return Task"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public Task remove(int index) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        Task taskToRemove \u003d this.get(index);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        Optional\u003cDate\u003e taskToRemoveDate \u003d taskToRemove.getTime();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        if (taskToRemoveDate.isPresent()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            this.timesUnavailable.remove(convertMillisToMin(taskToRemoveDate.get().getTime())); "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return this.list.remove(index - 1);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Gets the element based on 1-indexed index."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param index int"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return Task"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return this.list.get(index - 1);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Gets the size of the list."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return int the size of the list"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return this.list.size();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Checks if date is available."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param date Date which is the Date of the object to be added"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return boolean"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */    "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private boolean verifyDateAvailability(Date date) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        long dateInMinutes \u003d this.convertMillisToMin(date.getTime());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        // Now check if the item already exists in the HashSet"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        if (this.timesUnavailable.contains(dateInMinutes)) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Converts time in millseconds since 1970 to time in minutes."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param millis long"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return long"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private long convertMillisToMin(long millis) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return millis / 1000 / 60;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 113
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class ByeCommand implements Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Check if exit."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Execute."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public String execute(TaskList task, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        ui.printBye();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return ui.genBye(); "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 23
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param task TaskList"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param ui Ui"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param storage Storage"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return whatever is printed out to console for feedback to the GUI"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @throws DukeException if error occurs while executing the command"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public String execute(TaskList task, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Check if it should exit."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return boolean"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public boolean isExit();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 26
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class DeadlineCommand implements Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private Date time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public DeadlineCommand(String name, Date time) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.name \u003d name; "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Check if exit. "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Execute."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            tasks.add(new Deadline(this.name, this.time));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            ui.sendAddTaskAck(tasks.get(tasks.getSize()), tasks.getSize());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            return ui.genAddTaskAck(tasks.get(tasks.getSize()), tasks.getSize());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            ui.printWriteError();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            return ui.genWriteError();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 46
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.error.InvalidIndexException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class DeleteCommand implements Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Check if exit."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Execute."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            if (index \u003e tasks.getSize() || index \u003c 1) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                throw new InvalidIndexException(\"\\u2639 OOPS!!! Trying to delete invalid task\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            Task removedTask \u003d tasks.remove(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            String strToPrint \u003d String.format(\"%s%s%s\", "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                    ui.prepend4(\"Noted. I\u0027ve removed the task:\"),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                    ui.prepend6(String.format(\"%s\", removedTask)),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                    ui.prepend4(String.format("
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                            \"Now you have %d tasks in the list.\", tasks.getSize())));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            System.out.printf(\"%s\", strToPrint);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            return strToPrint;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            ui.printWriteError();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            return ui.stringifyError(e);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 51
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.error.InvalidIndexException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class DoneCommand implements Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param index int"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Check if exit."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Execute."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            if (index \u003e tasks.getSize() || index \u003c 1) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                throw new InvalidIndexException(\"\\u2639 OOPS!!! Trying to modify invalid task\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            Task task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            task.markDone();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            String strToPrint \u003d String.format(\"%s%s\","
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                    ui.prepend4(\"Nice! I\u0027ve marked this task as done:\"),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                    ui.prepend6(task.toString()));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            System.out.printf(\"%s\", strToPrint);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            return strToPrint;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            ui.printWriteError();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            return ui.stringifyError(e);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 52
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class EventCommand implements Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private Date time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param name String"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param time Date"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public EventCommand(String name, Date time) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.name \u003d name; "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Check if exit. "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Execute."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            tasks.add(new Event(this.name, this.time));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            ui.sendAddTaskAck(tasks.get(tasks.getSize()), tasks.getSize());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            return ui.genAddTaskAck(tasks.get(tasks.getSize()), tasks.getSize());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            ui.printWriteError();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            return ui.stringifyError(e);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 48
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class FindCommand implements Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Check if exit."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Execute."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        String strToReturn \u003d ui.prepend4(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        System.out.printf(\"%s\", strToReturn);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            if (task.getName().contains(this.keyword)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                String taskInString \u003d ui.prepend4(String.format(\"%d.%s\", counter, task));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                System.out.printf(\"%s\", taskInString);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                strToReturn +\u003d taskInString;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return strToReturn;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 44
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class ListCommand implements Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Should exit."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Execute."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        String strToReturn \u003d ui.prepend4(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        System.out.printf(\"%s\", strToReturn);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        int length \u003d tasks.getSize();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d length; i++) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            String stringifiedTask \u003d ui.prepend4(String.format(\"%d.%s\", i, tasks.get(i)));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            System.out.printf(\"%s\", stringifiedTask);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            strToReturn +\u003d stringifiedTask;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return strToReturn;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 30
    }
  },
  {
    "path": "src/main/java/duke/command/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class ToDoCommand implements Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param name String"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public ToDoCommand(String name) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Check if exit."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return false; "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Execute."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            tasks.add(new ToDo(this.name));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            ui.sendAddTaskAck(tasks.get(tasks.getSize()), tasks.getSize());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            return ui.genAddTaskAck(tasks.get(tasks.getSize()), tasks.getSize());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            ui.printWriteError();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            return ui.stringifyError(e);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hcwong"
        },
        "content": "           "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 45
    }
  },
  {
    "path": "src/main/java/duke/error/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.error;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.lang.Exception;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public abstract class DukeException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param message String"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Overrides the toString method."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 24
    }
  },
  {
    "path": "src/main/java/duke/error/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.error;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param message String"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public InvalidCommandException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 12
    }
  },
  {
    "path": "src/main/java/duke/error/InvalidFileException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.error;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class InvalidFileException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param message String"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public InvalidFileException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 12
    }
  },
  {
    "path": "src/main/java/duke/error/InvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.error;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class InvalidIndexException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param message String"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public InvalidIndexException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Overrides the toString method."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 22
    }
  },
  {
    "path": "src/main/java/duke/error/InvalidTaskArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.error;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class InvalidTaskArgumentException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param message String"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public InvalidTaskArgumentException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 12
    }
  },
  {
    "path": "src/main/java/duke/error/InvalidTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.error;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class InvalidTimeException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param message String"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public InvalidTimeException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Overrides the toString method."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 22
    }
  },
  {
    "path": "src/main/java/duke/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/TaskList.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/Parser.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/util/Storage.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/util/Ui.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/util/DateUtil.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/task/TaskType.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/task/Event.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/task/Task.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/task/Deadline.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/task/ToDo.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/command/EventCommand.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/command/ByeCommand.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/command/DeleteCommand.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/command/ListCommand.java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/command/Command.java"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/command/ToDoCommand.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/command/DeadlineCommand.java"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/command/FindCommand.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/command/DoneCommand.java"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/Duke.java"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/Launcher.java"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/error/InvalidCommandException.java"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/error/InvalidFileException.java"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/error/InvalidIndexException.java"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/error/DukeException.java"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/error/InvalidTaskArgumentException.java"
      }
    ],
    "authorContributionMap": {
      "hcwong": 26
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param name String"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param time Date"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public Deadline(String name, Date time) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        super(name, Optional.of(time), TaskType.DEADLINE, false);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constructor with isDone."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param name String"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param time Date"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param isDone boolean"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public Deadline(String name, Date time, boolean isDone) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        super(name, Optional.of(time), TaskType.DEADLINE, isDone);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Overrides toString method."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return String.format(\"[D]%s %s (by: %s)\", getStatus(), this.name, this.time.get());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 37
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param name String"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param time Date"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public Event(String name, Date time) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        super(name, Optional.of(time), TaskType.EVENT, false);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constructor with isDone."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param name String"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param time Date"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param isDone boolean"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public Event(String name, Date time, boolean isDone) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        super(name, Optional.of(time), TaskType.EVENT, isDone);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Overrides toString method."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return String.format(\"[E]%s %s (at: %s)\", getStatus(), this.name, this.time.get());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 37
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.task; "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    String name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    TaskType type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    Optional\u003cDate\u003e time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param name String"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param time Optional of Date"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param type TaskType"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param isDone boolean"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public Task(String name, Optional\u003cDate\u003e time, TaskType type, boolean isDone) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Mark task as done."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Get name."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Get time."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return Optional of String"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public Optional\u003cDate\u003e getTime() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Get type."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return TaskType"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public TaskType getType() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Get isDone."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return boolean"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Get the status."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    String getStatus() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            return \"[\\u2713]\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            return \"[\\u2718]\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 82
    }
  },
  {
    "path": "src/main/java/duke/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    TODO, EVENT, DEADLINE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 5
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param name String"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public ToDo(String name) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        super(name, Optional.empty(), TaskType.TODO, false);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constuctor with isDone."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param name String"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param isDone boolean"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public ToDo(String name, boolean isDone) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        super(name, Optional.empty(), TaskType.TODO, isDone);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Overrides toString method."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return String.format(\"[T]%s %s\", getStatus(), this.name);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 34
    }
  },
  {
    "path": "src/main/java/duke/util/DateUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class DateUtil {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Parse String from File into Date."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param strDate the date in the form of a string"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @throws ParseException if it fails to parse the date"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public static Date parseFileStringToDate(String strDate) throws ParseException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return new SimpleDateFormat(\"EEE MMM dd HH:mm:ss zzz yyyy\").parse(strDate);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Parse String into Date."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param strDate the date in the form of a String"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @throws ParseException if it fails to parse the date"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public static Date parseStringToDate(String strDate) throws ParseException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return new SimpleDateFormat(\"dd/MM/yy HHmm\").parse(strDate);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    } "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 27
    }
  },
  {
    "path": "src/main/java/duke/util/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "//CHECKSTYLE:OFF - Doing this because Paths need the * import"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.nio.file.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "//CHECKSTYLE:ON"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.lang.IndexOutOfBoundsException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.task.TaskType;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private Path path;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param path String"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public Storage(String path) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        File directory \u003d new File(path);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        if (!directory.exists()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            directory.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.path \u003d Paths.get(path);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }  "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Save data to file and assumes that this destination is fixed."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Also overwrite file if it already exists."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param data List of Task"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @throws IOException if an error appears"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public void save(TaskList data) throws IOException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        String dataString \u003d encodeData(data);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        Files.write(this.path, "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                    dataString.getBytes(), "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                    StandardOpenOption.CREATE,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                    StandardOpenOption.WRITE,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                    StandardOpenOption.TRUNCATE_EXISTING);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Load data from file."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return List of Task"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @throws IOException if an error appears"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public TaskList load() throws IOException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return this.decodeData(Files.readAllLines(this.path));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Transform the Task List into Strings."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param data List of Task"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private String encodeData(TaskList data) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d data.getSize(); i++) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            Task task \u003d data.get(i);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            String name \u003d task.getName();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            TaskType type \u003d task.getType();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            String isDone \u003d task.getIsDone() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            String time \u003d task.getTime().isPresent()"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                            ? String.format(\" | %s\", task.getTime().get())"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                            : \"\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            result +\u003d String.format(\"%s | %s | %s%s\\n\", type, isDone, name, time);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Decode the data."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param data List of String"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return List of Task"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private TaskList decodeData(List\u003cString\u003e data) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        TaskList result \u003d new TaskList();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        for (String line: data) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            // Assert that the file has not been tampered with"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            assert line.split(\"|\").length \u003c 5;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            assert line.split(\"|\").length \u003e 2;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                // Need special character here or the split will mess up"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                String[] lineArr \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                switch (lineArr[0]) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                case \"EVENT\":"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                    result.add(new Event(lineArr[2],"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                               DateUtil.parseFileStringToDate(lineArr[3].trim()),"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                               lineArr[1].equals(\"1\")));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                case \"TODO\":"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                    result.add(new ToDo(lineArr[2], lineArr[1].equals(\"1\")));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                case \"DEADLINE\":"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                    result.add(new Deadline(lineArr[2], "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                               DateUtil.parseFileStringToDate(lineArr[3].trim()), "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                               lineArr[1].equals(\"1\")));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                System.out.println(\"Error decoding data from file\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                System.out.println(\"Error decoding the date from the file\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            }            "
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        } "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    } "
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 128
    }
  },
  {
    "path": "src/main/java/duke/util/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.lang.Exception;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Reads command from System.in."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Generic print."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param str String"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public void print(String str) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        System.out.println(str);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Pretty prints the output to the user with indentation of 4."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param str the String to be printed"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public void prettyPrint4(String str) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        System.out.printf(\"%s\", prepend4(str));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Pretty prints the output to the user with indentation of 4."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param str the String to be printed "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public void prettyPrint6(String str) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        System.out.printf(\"%s\", prepend6(str));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Insert 4 spaces into String at front."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param str String"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public String prepend4(String str) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return String.format(\"    %s\\n\", str);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Insert 6 spaces into String at front."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param str String"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public String prepend6(String str) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return String.format(\"      %s\\n\", str);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Generate task acknowledgement."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param task Task"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param size int the size of the task list"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public String genAddTaskAck(Task task, int size) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return String.format(\"%s%s%s\","
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                prepend4(\"Got it. I\u0027ve added this task:\"),"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                prepend6(task.toString()),"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                prepend4(String.format(\"Now you have %d tasks in the list.\", size)));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    } "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Sends task acknowledgement."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param task Task"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param size int the size of the task list"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public void sendAddTaskAck(Task task, int size) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        System.out.printf(\"%s\", genAddTaskAck(task, size));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    } "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Generate welcome message."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public String genWelcome() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return \"Hello I\u0027m Dog\\nWhat can I do for you\\n\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Generate bye message."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public String genBye() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return \"Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Generate Write error message."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public String genWriteError() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return \"Sorry, failed to write to the disc\\n\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Generate read error message."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public String genReadError() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return \"Sorry, failed to read from the disc. If it\u0027s your first time running this \""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            + \"and you haven\u0027t used a command that would save things\" "
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            + \", ignore as the save file has not been created. This is because Duke dog only creates\""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            + \" the save file once you\" "
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            + \" need something to be saved and if it is not there.\\n\"; "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Print welcome message."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public void printWelcome() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        System.out.printf(\"%s\", genWelcome());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Print bye message."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public void printBye() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        System.out.printf(\"%s\", genBye());"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Print write error."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public void printWriteError() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        System.out.printf(\"%s\", genWriteError());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Print read error."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public void printReadError() {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        System.out.printf(\"%s\", genReadError());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Error in string form."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public String stringifyError(Exception e) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return String.format(\"%s\\n\", e.toString()); "
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Print error."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param e Exception"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public void printError(Exception e) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        System.out.printf(\"%s\", stringifyError(e));"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 182
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "\u003c?import javafx.scene.text.Text?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "\u003cfx:root styleClass\u003d\"dialogBox\" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        \u003cText styleClass\u003d\"dialog\" fx:id\u003d\"dialog\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        \u003cStackPane id\u003d\"StackPane\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"-1.0\" prefWidth\u003d\"-1.0\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" xmlns\u003d\"http://javafx.com/javafx/2.2\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "          \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "              \u003cImageView styleClass\u003d\"dialogDp\" fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "          \u003c/children\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "          \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "          \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "hcwong": 24
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "\u003cfx:root type\u003d\"javafx.scene.layout.AnchorPane\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "\u003c/fx:root\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "hcwong": 20
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.command.ToDoCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    void parse_parseTodo_none() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            assertTrue(Parser.parse(\"todo eat\") instanceof ToDoCommand);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            // fail silently"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 17
    }
  },
  {
    "path": "src/test/java/duke/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.lang.Exception;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    void taskListAdd_add_none() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            tasks.add(new ToDo(\"I love testing\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            // silence"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        assertEquals(1, tasks.getSize());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    void taskListRemove_remove_none() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            tasks.add(new ToDo(\"I will remove this test\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            assertEquals(1, tasks.getSize());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            tasks.remove(1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            assertEquals(0, tasks.getSize());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            // silence"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        } "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 35
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "todo Eat"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": "todo Sleep"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "event project meeting /at 29/11/2018 1900"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "event second project meeting /at 29/11/2018 1900 "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "event fake event"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "find Ea"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "hcwong": 13
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "# From: https://stackoverflow.com/questions/6623161/javac-option-to-compile-all-java-files-under-a-given-directory-recursively"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "# Get all of our java files"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "find ../src/main -name *.java \u003e sources.txt"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "if ! javac -cp ../src/main -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "then"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": "java -classpath ../bin duke/Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": "# Delete the data file after each to run to prevent state from persisting"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hcwong"
        },
        "content": "rm ../data/duke.txt \u0026\u0026 touch ../data/duke.txt"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hcwong"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hcwong"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hcwong"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hcwong"
        },
        "content": "then"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hcwong"
        },
        "content": "else"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hcwong"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "hcwong": 41
    }
  }
]
