[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Seris370"
        },
        "content": "run {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Seris370"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Seris370"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Seris370"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Seris370"
        },
        "content": "test {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Seris370"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Seris370"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 36,
      "-": 15
    }
  },
  {
    "path": "src/main/java/Add.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": " * Represents an addition command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public class Add extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public String type;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Initiates an Add object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @param type type of new task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @param description description of the new task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public Add(String type, String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public String exec(Storage storage, TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            tasks.add(type, description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            storage.write(tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            return ui.add(tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            return ui.showDukeException(ex);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 29
    }
  },
  {
    "path": "src/main/java/Bye.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": " * Represents an exit command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public class Bye extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public String exec(Storage storage, TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        return ui.bye();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 10
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": " * Represents an abstract command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    abstract public String exec(Storage storage, TaskList tasks, Ui ui);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 6
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": " * Represents a deadline task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Initiates a deadline task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @param description content of a deadline task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public Deadline(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Initiates a Deadline object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @param description content of a deadline task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @param isDone true if the task is done and false if not done"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public Deadline(String description, boolean isDone) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Expresses a Deadline object in natural language."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @return string representation of a deadline task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @throws ParseException if description of deadline cannot be parsed"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public String repr() throws ParseException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        assert getStatusIcon().equals(\"\\u2713\") || getStatusIcon().equals(\"\\u2718\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        return \"[D][\" + getStatusIcon() + \"] \" + super.formatDescription();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 34
    }
  },
  {
    "path": "src/main/java/Delete.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": " * Represents a deletion command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public class Delete extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public Integer[] numbers;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public String type;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Initiates a Deletion object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @param numbers the numbers of task to be deleted"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public Delete(Integer... numbers) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        this.numbers \u003d numbers;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public String exec(Storage storage, TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            String response \u003d  ui.delete(tasks, numbers);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            tasks.delete(numbers);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            storage.write(tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            return ui.showDukeException(ex);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            return ui.showParseError();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Seris370": 33
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Seris370"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Seris370"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Seris370"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Seris370"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Seris370"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 59
    }
  },
  {
    "path": "src/main/java/Done.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": " * Represents a task completion command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public class Done extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public Integer[] numbers;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public String type;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Initiates a Done object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @param numbers the number of task to be marked as done"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public Done(Integer... numbers) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        this.numbers \u003d numbers;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public String exec(Storage storage, TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            tasks.done(numbers);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            storage.write(tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            return ui.done(tasks, numbers);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            return ui.showDukeException(ex);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            return ui.showParseError();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 31
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Seris370"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Seris370"
        },
        "content": " * Represents a Duke chatbot."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Seris370"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Initiates a Duke object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @param filePath path in hard disk to store tasks"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private Duke(String filePath) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Constructs a Duke object that stores file in tasks.txt"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        this(\"tasks.txt\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                if (command instanceof Bye) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    Bye bye \u003d (Bye) command;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    bye.exec(storage, tasks, ui);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                } else if (command instanceof PrintList) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    PrintList pl \u003d (PrintList) command;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    pl.exec(storage, tasks, ui);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                } else if (command instanceof Done) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    Done done \u003d (Done) command;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    done.exec(storage, tasks, ui);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                } else if (command instanceof Delete) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    Delete delete \u003d (Delete) command;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    delete.exec(storage, tasks, ui);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                } else if (command instanceof Add) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    Add add \u003d (Add) command;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    add.exec(storage, tasks, ui);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                } else if (command instanceof  Find) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    Find find \u003d (Find) command;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    find.exec(storage, tasks, ui);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                ui.showDukeException(ex);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            if (command instanceof Bye) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                Bye bye \u003d (Bye) command;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                return bye.exec(storage, tasks, ui);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            } else if (command instanceof PrintList) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                PrintList pl \u003d (PrintList) command;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                return pl.exec(storage, tasks, ui);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            } else if (command instanceof Done) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                Done done \u003d (Done) command;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                return done.exec(storage, tasks, ui);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            } else if (command instanceof Delete) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                Delete delete \u003d (Delete) command;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                return delete.exec(storage, tasks, ui);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            } else if (command instanceof Add) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                Add add \u003d (Add) command;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                return add.exec(storage, tasks, ui);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            } else if (command instanceof  Find) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                Find find \u003d (Find) command;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                return find.exec(storage, tasks, ui);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            return ui.showDukeException(ex);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Runs Duke."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @param args dummy"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private Node getDialogLabel(String text) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                DialogBox.getUserDialog(userText.toString(), new ImageView(user).getImage()),"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                DialogBox.getDukeDialog(dukeText.toString(), new ImageView(duke).getImage())"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        );"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        });"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        });"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        });"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        });"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 227,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": " * Represents an exception in project duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Initiates a DukeException object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @param s exception message"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Initiates a DukeException object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 20
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": " * Represents an event task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Initiates an Event object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @param description content of event task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public Event(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Initiates an Event object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @param description content of event task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @param isDone true if task is done and false otherwise"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public Event(String description, boolean isDone) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Expresses an Event object in natural language."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @return string representation of an event task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @throws ParseException if description of event cannot be parsed"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public String repr() throws ParseException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        assert getStatusIcon().equals(\"\\u2713\") || getStatusIcon().equals(\"\\u2718\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        return \"[E][\" + getStatusIcon() + \"] \" + super.formatDescription();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 34
    }
  },
  {
    "path": "src/main/java/Find.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": " * Represents a find command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public class Find extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public String target;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public Find(String target) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        this.target \u003d target;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public String exec(Storage storage, TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        TaskList targets \u003d tasks.find(this.target);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            return ui.printFind(targets);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            return ui.showDukeException(ex);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 21
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 11
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 29
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        );"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 53
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": " * Represents a class for understanding the input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Extracts a command from input."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @param input a line of user input"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @return a Command object"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @throws DukeException if the input doesn\u0027t fit the format of a standard command"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        if (input.equals(\"bye\")) { // exit"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            return new Bye();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } else if (input.equals(\"list\")) { // show all tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            return new PrintList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } else if (input.split(\" \")[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                ArrayList\u003cInteger\u003e nums \u003d parseNumbers(input);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                return new Done(nums.toArray(new Integer[0]));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                throw new DukeException(\"Task number should be integer.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } else if (input.split(\" \")[0].equals(\"delete\")) { // delete a specific task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                ArrayList\u003cInteger\u003e nums \u003d parseNumbers(input);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                return new Delete(nums.toArray(new Integer[0]));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                throw new DukeException(\"Task number should be integer.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } else if (input.split(\" \")[0].equals(\"find\")) { // find a task"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            if (input.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                throw new DukeException(\"Item to be find should not be empty.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            return new Find(input.substring(input.indexOf(\" \") + 1));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            if (input.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                String type \u003d input.split(\" \")[0];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            String type \u003d input.substring(0, input.indexOf(\" \"));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            String description \u003d input.substring(input.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            switch (type) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                return new Add(\"todo\", description);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                return new Add(\"event\", description);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                return new Add(\"deadline\", description);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private static ArrayList\u003cInteger\u003e parseNumbers(String input) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        String[] words \u003d input.split(\" \");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        ArrayList\u003cInteger\u003e nums \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        for (int i \u003d 1; i \u003c words.length; i++) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            int num \u003d Integer.parseInt(words[i]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            nums.add(num);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        return nums;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 76
    }
  },
  {
    "path": "src/main/java/PrintList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": " * Represents a command to print all existing tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public class PrintList extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public String exec(Storage storage, TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            return ui.printList(tasks);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            return ui.showDukeException(ex);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 14
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": " * Represents interaction between temporary duke data and hard disk."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Initiates a Storage object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @param filePath path of the file where data is stored"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        // create data file if it doesn\u0027t exist"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            System.out.print(\"\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Writes tasks to hard disk."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @param list a Tasklist object containing tasks"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @throws DukeException if IOException occurs"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public void write(TaskList list) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d list.tasks;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        try (FileWriter fileWriter \u003d new FileWriter(filePath, false)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            StringBuilder content \u003d new StringBuilder();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            for (Task t : tasks) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                String type;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                if (t instanceof Deadline) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    type \u003d \"D\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                } else if (t instanceof Event) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    type \u003d \"E\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    assert t instanceof Todo : \"unknown type of task\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    type \u003d \"T\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                String isDone \u003d t.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                String taskData \u003d type + \"@\" + isDone + \"@\" + t.description;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                content.append(taskData).append(\"\\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            fileWriter.write(content.toString());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            throw new DukeException(\"Cannot write to file\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Extracts information of tasks from hard disk."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @return an ArrayList of tasks that is stored in the file"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @throws DukeException if IOException occurs"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        try (BufferedReader br \u003d new BufferedReader(new FileReader(filePath))) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                String[] parts \u003d line.split(\"@\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                Task newTask;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                boolean isDone \u003d parts[1].equals(\"1\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                switch (parts[0]) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    newTask \u003d new Todo(parts[2], isDone);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    newTask \u003d new Event(parts[2], isDone);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    newTask \u003d new Deadline(parts[2], isDone);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    newTask \u003d new Task(\"\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                    assert false : \"unknown type of tasks\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                list.add(newTask);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            throw new DukeException(\"Cannot load from file\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 94
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": " * Represents a task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Initiates a Task object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @param description content of a task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Initiates a Task object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @param description content of a task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @param isDone mark if the task is already done"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private Date parseDate(String input) throws ParseException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        SimpleDateFormat ft \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        Date t \u003d new Date();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        t \u003d ft.parse(input);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    protected String formatDescription() throws ParseException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        String item \u003d description.substring(0, description.indexOf(\"/\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        String tag \u003d description.substring(description.indexOf(\"/\") + 1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        String prep \u003d tag.substring(0, tag.indexOf(\" \"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        String time \u003d tag.substring(tag.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        Date date \u003d parseDate(time);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        return item + \"(\" + prep + \": \" + date + \")\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    protected String getStatusIcon() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Expresses a Task object in natural language."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @return string representation of a task"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @throws ParseException if description cannot be parsed"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public String repr() throws ParseException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        assert getStatusIcon().equals(\"\\u2713\") || getStatusIcon().equals(\"\\u2718\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 61
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": " * Represents a list of tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Initiates a Task object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Initiates a Task object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @param tasks an ArrayList of existing tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Marks smoe tasks as done."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @param nums the numbers of tasks to be marked as done"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @throws DukeException if num is out of range"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public void done(Integer... nums) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        for (int num : nums) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            if (num \u003e tasks.size() || num \u003c 1) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                throw new DukeException(\"Task number out of range.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            assert 0 \u003c num \u0026\u0026 num \u003c\u003d tasks.size() : \"invalid task number\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            tasks.get(num - 1).isDone \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Deletes some tasks."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @param nums the numbers of tasks to be deleted"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @throws DukeException if num is out of range"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public void delete(Integer... nums) throws DukeException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        Arrays.sort(nums, Collections.reverseOrder());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        for (int num : nums) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            if (num \u003e tasks.size() || num \u003c 1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                throw new DukeException(\"Task number out of range.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            assert 0 \u003c num \u0026\u0026 num \u003c\u003d tasks.size() : \"invalid task number\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            tasks.remove(num - 1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Finds tasks that have matching words in their descriptions."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @param target searching term"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @return TaskList of matching tasks"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public TaskList find(String target) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        ArrayList\u003cTask\u003e targets \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            if (t.description.contains(target)) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                targets.add(t);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        return new TaskList(targets);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Adds a task."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @param type type of task to be added"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @param description description of new task"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @throws DukeException if type of task connot be recognised or task description cannot be parsed"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public void add(String type, String description) throws DukeException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            newTask \u003d new Todo(description);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            newTask \u003d new Event(description);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            newTask \u003d new Deadline(description);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            newTask.repr();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            tasks.add(newTask);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException | StringIndexOutOfBoundsException | ParseException ex) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            throw new DukeException(\"Task description should be of format \\\"context /prep dd/MM/yyyy HHmm\\\"\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 103
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": " * Represents a todo task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Initiates a Todo object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @param description content of a todo task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Initiates a Todo object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @param description content of a todo task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @param isDone mark if the todo task is already done"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Expresses a Todo object in natural language."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @return string representation of a task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public String repr() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        assert getStatusIcon().equals(\"\\u2713\") || getStatusIcon().equals(\"\\u2718\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        return \"[T][\" + super.getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Expresses that a todo task is done."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @return string representation of a done task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public String done() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        return \"  [T][✓] \" + description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 39
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": " * Represents an interface for user interaction."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private String line \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private void formatPrint(String[] lists) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        for (String s : lists) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            System.out.println(format(s));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private void formatPrint(String s) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        System.out.println(format(s));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private String format(String s) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        return \"     \" + s;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private void echo(String s) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        formatPrint(s);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Sends greetings to user."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public String greet() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        String response \u003d \"Hello! I\u0027m Duke \\n     What can I do for you?\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        formatPrint(response);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Says goodbye to user."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public String bye() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        String response \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        formatPrint(response);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Prints all tasks."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @param list a TaskList object that contains a list of tasks"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @throws DukeException if description of tasks cannot be parsed"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public String printList(TaskList list) throws DukeException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d list.tasks;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        StringBuilder response \u003d new StringBuilder();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            response.append(\"There is no task in your list\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            throw new DukeException(\"There is no task in your list\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            System.out.println(line);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            System.out.println(format(\"Here are the tasks in your list:\"));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            response.append(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                Task t \u003d tasks.get(i);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                response.append(i + 1).append(\".\").append(t.repr()).append(\"\\n\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                System.out.println(\"  \" + format(i + 1 + \".\" + t.repr()));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            System.out.println(line);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            response.append(\"Task description should be of format \\\"context /prep dd/MM/yyyy HHmm\\\"\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            throw new DukeException(\"Task description should be of format \\\"context /prep dd/MM/yyyy HHmm\\\"\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            return String.valueOf(response);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Tells user some tasks have been marked as done."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @param list a TaskList object that contains a list of tasks"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @param nums numbers of tasks to be marked as done"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @throws ParseException if description of task connot be parsed"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public String done(TaskList list, Integer... nums) throws ParseException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        ArrayList\u003cString\u003e sentences \u003d getSentences(list, nums, \"Nice! I\u0027ve marked these tasks as done: \");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        formatPrint(sentences.toArray(new String[0]));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        return getResponse(sentences);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private String getResponse(ArrayList\u003cString\u003e sentences) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        for (int i \u003d 0; i \u003c sentences.size(); i++) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            response +\u003d sentences.get(i);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            if (i \u003d\u003d sentences.size() - 1) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            response +\u003d \"\\n\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    private ArrayList\u003cString\u003e getSentences(TaskList list, Integer[] nums, String start) throws ParseException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d list.tasks;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        ArrayList\u003cString\u003e sentences \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        sentences.add(start);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        for (int i \u003d 0; i \u003c nums.length; i++) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            String description \u003d tasks.get(nums[i] - 1).repr();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            sentences.add(\"  \" + description);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        return sentences;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Tells user some tasks have been deleted."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @param list a TaskList object that contains a list of tasks"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @param nums numbers of tasks to be deleted"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @throws ParseException if description of task connot be parsed"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public String delete(TaskList list, Integer... nums) throws ParseException, DukeException {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        for (int i : nums) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            if (i \u003c\u003d 0 || i \u003e list.tasks.size()) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                throw new DukeException(\"Task number out of range\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        ArrayList\u003cString\u003e sentences \u003d getSentences(list, nums, \"Noted. I\u0027ve removed these tasks:\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        int count \u003d list.tasks.size() - nums.length;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        switch (count) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        case 0:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            sentences.add(\"Now you have no task in the list.\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            sentences.add(\"Now you have 1 task in the list.\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            sentences.add(\"Now you have \" + count + \" tasks in the list.\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        formatPrint(sentences.toArray(new String[0]));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        return getResponse(sentences);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Tells user a task has been added."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @param list a TaskList object that contains a list of tasks"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @throws DukeException if description of task connot be parsed"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public String add(TaskList list) throws DukeException {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d list.tasks;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            Task newTask \u003d tasks.get(tasks.size() - 1);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            String str \u003d format(newTask.repr());"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            System.out.println(line);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            System.out.println(format(\"Got it. I\u0027ve added this task: \"));"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            System.out.println(\"  \" + str);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            response +\u003d \"Got it. I\u0027ve added this task: \\n  \" + str + \"\\n\";"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException | StringIndexOutOfBoundsException | ParseException ex) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            response \u003d \"Task description should be of format \\\"context /prep dd/MM/yyyy HHmm\\\"\";"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            throw new DukeException(response);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        if (tasks.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            System.out.println(format(\"Now you have 1 task in the list.\"));"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            response +\u003d \"Now you have 1 task in the list.\";"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            System.out.println(format(\"Now you have \" + tasks.size() + \" tasks in the list.\"));"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            response +\u003d \"Now you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /** Prints matching list."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @param targets a TaskList of matching tasks"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @throws DukeException if there is no matching task or task description cannot be parsed"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public String printFind(TaskList targets) throws DukeException {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        StringBuilder response \u003d new StringBuilder();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d targets.tasks;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            response.append(\"There is no matching task in your list\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            throw new DukeException(response.toString());"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            System.out.println(line);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            System.out.println(format(\"Here are the matching tasks in your list:\"));"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            response.append(\"Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                Task t \u003d tasks.get(i);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                System.out.println(\"  \" + format(i + 1 + \".\" + t.repr()));"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                response.append(\"  \").append(i + 1).append(\".\").append(t.repr()).append(\"\\n\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            System.out.println(line);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            response \u003d new StringBuilder(\"Task description should be of format \\\"context /prep dd/MM/yyyy HHmm\\\"\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            throw new DukeException(response.toString());"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            return response.toString();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Tells user tasks connot be loaded from hard disk."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public String showLoadingError() {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        String response \u003d \"Cannot load files\";"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        formatPrint(response);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Tells user a DukeException has occurred."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * @param ex the exception whose message is to be printed"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public String showDukeException(DukeException ex) { "
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        String response \u003d ex.getMessage();"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        formatPrint(response);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     * Tells user a ParseError has occurred."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     */"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public String showParseError() {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        String response \u003d \"Task description should be of format \\\"context /prep dd/MM/yyyy HHmm\\\"\";"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        formatPrint(response);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 239
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Seris370"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Seris370": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Seris370"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Seris370": 19
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public void reprTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        Event event \u003d new Event(\"project meeting /at 6/8/2019 2015\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            assertEquals(\"[E][✘] project meeting (at: Tue Aug 06 20:15:00 SGT 2019)\", event.repr());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Seris370"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 18
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public void reprTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        Todo todo \u003d new Todo(\"return books\", true);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        assertEquals(\"[T][✓] return books\", todo.repr());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public void doneTest() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        Todo todo \u003d new Todo(\"return books\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        assertEquals(\"  [T][✓] return books\", todo.done());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 17
    }
  },
  {
    "path": "src/test/java/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": "public class UiTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    public void printTest() throws Exception {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        ui.showLoadingError();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        String expectedOutput  \u003d \"    ____________________________________________________________\\r\\n\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                \"     Cannot load files\\r\\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Seris370"
        },
        "content": "                \"    ____________________________________________________________\\r\\n\" ;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        // Do the actual assertion."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Seris370"
        },
        "content": "        assertEquals(expectedOutput, outContent.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Seris370"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Seris370": 25
    }
  },
  {
    "path": "tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "T@1@join sports club"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": "T@1@borrow book"
      }
    ],
    "authorContributionMap": {
      "Seris370": 2
    }
  },
  {
    "path": "text-ui-test/Expected.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": "       [T][✘] read book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     Now you have 1 task in the list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": "       [D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Seris370"
        },
        "content": "       [E][✘] project meeting (at: Aug 6th 2-4 pm)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Seris370"
        },
        "content": "       [D][✓] return book (by: June 6th)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     Task number out of range."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Seris370"
        },
        "content": "       [T][✘] join sports club"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     Task number out of range."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Seris370"
        },
        "content": "       [T][✘] borrow book"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Seris370"
        },
        "content": "       [T][✓] read book"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Seris370"
        },
        "content": "       1.[T][✓] read book"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Seris370"
        },
        "content": "       2.[D][✓] return book (by: June 6th)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Seris370"
        },
        "content": "       3.[E][✘] project meeting (at: Aug 6th 2-4 pm)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Seris370"
        },
        "content": "       4.[T][✘] join sports club"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Seris370"
        },
        "content": "       5.[T][✘] borrow book"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     Noted. I\u0027ve removed this task: "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Seris370"
        },
        "content": "       [E][✘] project meeting (at: Aug 6th 2-4 pm)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Seris370"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "Seris370": 55
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": "deadline return book /by 6/6/2019 0000"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": "event project meeting /at 6/8/2019 2015"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Seris370"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Seris370": 12
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Seris370"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Seris370"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Seris370"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Seris370"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Seris370"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Seris370"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Seris370"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Task.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Seris370"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Todo.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Seris370"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Event.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Seris370"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Deadline.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Seris370"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\DukeException.java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Seris370"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Seris370"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Seris370"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Seris370"
        },
        "content": ")"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Seris370"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Seris370"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Seris370"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Seris370"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Seris370"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Seris370"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Seris370": 26
    }
  }
]
