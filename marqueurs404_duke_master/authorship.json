[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    runtimeOnly \u0027org.openjfx:javafx-graphics:$javafx.version:win\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    runtimeOnly \u0027org.openjfx:javafx-graphics:$javafx.version:linux\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    runtimeOnly \u0027org.openjfx:javafx-graphics:$javafx.version:mac\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "version \u00270.2.0\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "run {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    mainClassName \u003d \"core.Duke\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "task runGui(type:JavaExec) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    group \u003d \"application\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    description \u003d \"Runs gui version of duke\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    main \u003d \"core.Launcher\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    classpath \u003d sourceSets.main.runtimeClasspath"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    mergeServiceFiles()"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "task shadowJarGui(type: Jar, dependsOn: shadowJar) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    group \u003d \"shadow\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    description \u003d \"Builds a jar of the gui version of duke\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    archiveBaseName \u003d \"dukeGui\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    archiveVersion \u003d \"0.2.0\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    manifest.attributes \u0027Main-Class\u0027: \u0027core.Launcher\u0027"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    from zipTree(shadowJar.archivePath)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "task shadowJarCli(type: Jar, dependsOn: shadowJar) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    group \u003d \"shadow\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    description \u003d \"Builds a jar of the cli version of duke\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    archiveBaseName \u003d \"dukeCli\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    archiveVersion \u003d \"0.2.0\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    manifest.attributes \u0027Main-Class\u0027: \u0027core.Duke\u0027"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    from zipTree(shadowJar.archivePath)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "test {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 84,
      "-": 13
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Duke is a **task manager chatbot** which helps you to manage and track your to-dos, deadlines and events."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "![Ui.PNG](Ui.PNG)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "## 1. Features "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "- **Chat**: Interact with Duke via a chat interface."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "- **Track tasks**: keep track of tasks. Duke understands 3 types of tasks: to-dos, deadlines and events."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "- **Search**: search for tasks by keywords in the description."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "- **Persistence**: tasks are saved in a text file which can be reloaded each time Duke starts.   "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "- **Aliasing**: rename your favorite commands with custom aliases to command Duke in the way you want to!"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "## 2. Usage"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "### 2.1 Quickstart"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "1. Ensure you have Java `11` or above installed on your computer."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "2. Download the latest `duke.jar` [here](https://github.com/marqueurs404/duke/releases)."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "3. Copy the file to the folder you want to use as the home folder for Duke."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "4. Double-click the file to start the app. The GUI should appear in a few seconds. "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "5. Start typing commands in the command box! "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "### 2.2 Commands"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Duke understands you through commands. These are the commands which Duke currently supports. "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Each command has a specific format which has to be followed for Duke to respond correctly. "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Note that all `\u003cdatetime\u003e` parameters have the format `DD/MM/YYYY HHMM`."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "#### `todo` - Add a todo"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Adds a todo to Duke\u0027s tasks list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Format: `todo \u003cdescription\u003e`"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Example usage: `todo Read an article on world peace`"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Expected outcome: "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "```"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Got it mate. I\u0027ve added this task:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "[T][x] Read an article on world peace"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Now you have 1 tasks in the list mate."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "```"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "#### `event` - Add an event"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Adds an event to Duke\u0027s tasks list. It is optional to include times. "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "It is also optional to include both start and end datetimes, e.g. for single day events.  "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Format: `event \u003cdescription\u003e /at \u003cstart datetime\u003e - \u003cend datetime\u003e`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Example usage: `event World Hackathon /at 16/09/2019 - 18/09/2019`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Expected outcome: "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "```"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Got it mate. I\u0027ve added this task:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "[E][x] World Hackathon (at: Sep 16, 2019 - Sep 18, 2019)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Now you have 2 tasks in the list mate."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "```"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "#### `deadline` - Add a deadline"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Adds a deadline to Duke\u0027s tasks list. It is optional to include a time.   "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Format: `deadline \u003cdescription\u003e /by \u003cdatetime\u003e`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Example usage: `deadline tP Submission /by 01/01/2050`"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Expected outcome: "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "```"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Got it mate. I\u0027ve added this task:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "[D][x] tP Submission (by: Jan 1, 2050)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Now you have 3 tasks in the list mate."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "```"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "#### `done` - Mark a task as done"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Marks a task in Duke\u0027s tasks list as complete given the index of the task on the list."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Format: `done \u003cindex\u003e`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Example usage: `done 1`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Expected outcome: "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "```"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Nice one mate! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "[T][+] Read an article on world peace"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "```"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "#### `list` - List all tasks"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "List all tasks in Duke\u0027s tasks list.    "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Example usage: `list`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Expected outcome: "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "```"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "1. [T][+] Read an article on world peace"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "2. [E][x] World Hackathon (at: Sep 16, 2019 - Sep 18, 2019)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "3. [D][x] tP Submission (by: Jan 1, 2050)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "```"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "#### `delete` - Remove a task "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Removes a task in Duke\u0027s tasks list given the index of the task on the list."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Format: `delete \u003cindex\u003e`"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Example usage: `delete 1`"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Expected outcome: "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "```"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Noted mate! I\u0027ve removed the task:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "[T][+] Read an article on world peace"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Now you have 2 tasks in the list mate."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "```"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "#### `find` - Find tasks "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Searches Duke\u0027s tasks list for all tasks "
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "that contains the search string in its description."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Format: `find \u003csearch string\u003e`"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Example usage: `find tp`"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Expected outcome: "
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "```"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "[D][x] tP Submission (by: Jan 1, 2050)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "```"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "#### `bye` - Exit Duke "
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Turns off the Duke chatbot."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Example usage: `bye`"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Expected outcome: "
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "```"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "[D][x] tP Submission (by: Jan 1, 2050)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "```"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "### 2.3 Advanced Commands"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "#### Aliasing"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Duke supports aliasing of commands. "
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "You can add new aliases to call any commands however you want!"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "#### `list-alias` - List all aliases"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "List all command aliases which Duke can understand. "
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Each command has a unique ID and a list of corresponding aliases to call the command.  "
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Format: `list-alias`"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Example usage: `list-alias`"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome: "
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "```"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Here are the aliases for all commands:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "ID: Aliases"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "-----------"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "addAlias: add-alias, alias"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "deleteAlias: delete-alias, del-alias"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "listAliases: list-alias, list-aliases"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "addDeadline: deadline, dead"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "addEvent: event, ev"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "addTodo: todo, td"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "deleteTask: delete, del"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "doneTask: done"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "exit: bye,exit,logout"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "findTask: find, search"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "listTasks: list, tasks"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "```"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "#### `add-alias` - Add aliases"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Add aliases for a command.  "
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Format: `add-alias \u003calias_1,alias_2,alias_3,...\u003e /type \u003ccommand id\u003e`"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Example usage: `add-alias complete /type doneTask`"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Expected outcome: "
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "```"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "I\u0027ve added the following aliases for doneTask:"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "complete"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "```"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "#### `delete-alias` - Delete aliases"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Delete aliases for a command.  "
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Format: `delete-alias \u003calias_1,alias_2,alias_3,...\u003e /type \u003ccommand id\u003e`"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Example usage: `delete-alias dead /type addDeadline`"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "Expected outcome: "
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "```"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "I\u0027ve deleted the following aliases for addDeadline:"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "dead "
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "```"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "## 3. Command Summary"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "- Add a todo: `todo \u003cdescription\u003e`"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "- Add an event: `event \u003cdescription\u003e /at \u003cstart datetime\u003e - \u003cend datetime\u003e`"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "- Add a deadline: `deadline \u003cdescription\u003e /by \u003cdatetime\u003e`  "
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "- Mark a task as done: `done \u003cindex\u003e`"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "- List all tasks: `list`"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "- Remove a task: `delete \u003cindex\u003e`"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "- Find tasks: `find \u003csearch string\u003e`"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "- Exit: `bye`"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "- List all aliases: `list-alias`"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "- Add aliases: `add-alias \u003calias_1,alias_2,alias_3,...\u003e /type \u003ccommand id\u003e`"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "- Remove aliases: `delete-alias \u003calias_1,alias_2,alias_3,...\u003e /type \u003ccommand id\u003e`"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 214,
      "-": 19
    }
  },
  {
    "path": "src/main/java/command/AddAliasCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.DukeIllegalArgumentException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * AddAliasCommand class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eCommand to add Aliases."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class AddAliasCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private String[] aliasesToAdd;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private CommandType type;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * AddAliasCommand Constructor."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param commandString Full command string of user input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param type CommandType of the command to add aliases for."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param aliasesToAdd Aliases to add for the command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public AddAliasCommand(String commandString, CommandType type, String...aliasesToAdd) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(CommandType.ADD_ALIAS, commandString);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.aliasesToAdd \u003d aliasesToAdd;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeIllegalArgumentException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Command.addAlias(type, aliasesToAdd);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        ui.showAddAlias(type, aliasesToAdd);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 37
    }
  },
  {
    "path": "src/main/java/command/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.DukeIllegalArgumentException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.DukeIoException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * AddDeadlineCommand class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eCommand to add a Deadline."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class AddDeadlineCommand extends AddTaskCommand {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public AddDeadlineCommand(String commandString, Task task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(CommandType.ADD_DEADLINE, commandString, task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeIoException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        tasks.add(this.task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        ui.showAddTask(task, tasks.size());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 28
    }
  },
  {
    "path": "src/main/java/command/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.DukeIllegalArgumentException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.DukeIoException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * AddEventCommand class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eCommand to add an Event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class AddEventCommand extends AddTaskCommand {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public AddEventCommand(String commandString, Task task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(CommandType.ADD_EVENT, commandString, task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeIoException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        tasks.add(this.task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        ui.showAddTask(task, tasks.size());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 28
    }
  },
  {
    "path": "src/main/java/command/AddTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.DukeIoException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * AddTaskCommand class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eAbstract Command for adding a Task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public abstract class AddTaskCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    protected Task task;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public AddTaskCommand(CommandType type, String commandString, Task task) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(type, commandString);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeIoException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        tasks.add(this.task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        ui.showAddTask(task, tasks.size());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 30
    }
  },
  {
    "path": "src/main/java/command/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.DukeIllegalArgumentException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.DukeIoException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * AddTodoCommand class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eCommand to add a Todo."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class AddTodoCommand extends AddTaskCommand {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public AddTodoCommand(String commandString, Task task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(CommandType.ADD_TODO, commandString, task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeIoException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        tasks.add(this.task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        ui.showAddTask(task, tasks.size());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 28
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.DukeIllegalArgumentException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * Command class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eParent class for all Duke commands."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    protected CommandType type;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private String commandString;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private boolean exit;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /** HashMap containing key-value pairs of command type (CommandType) to aliases (ArrayList\u0026lt;String\u0026gt;). */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    protected static HashMap\u003cCommandType, ArrayList\u003cString\u003e\u003e commandAliasesMap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Command Constructor."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param type Type of command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param commandString full String of the user input."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public Command(CommandType type, String commandString) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.commandString \u003d commandString;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.exit \u003d false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return exit;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void setExit(boolean exit) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.exit \u003d exit;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public static ArrayList\u003cString\u003e getAliases(CommandType type) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return commandAliasesMap.get(type);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Add aliases for a command."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param type CommandType of command to add an alias for."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param aliasesToAdd Aliases to add."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @throws DukeIllegalArgumentException If there is a clash between existing aliases and one of the aliases to add."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public static void addAlias(CommandType type, String...aliasesToAdd) throws DukeIllegalArgumentException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        commandAliasesMap.putIfAbsent(type, new ArrayList\u003cString\u003e());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        boolean hasClashingAlias \u003d checkClashingAlias(aliasesToAdd);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        if (hasClashingAlias) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            throw new DukeIllegalArgumentException(\"OOPS!!! Can\u0027t add an alias which clashes with existing ones!\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        for (String a : aliasesToAdd) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            commandAliasesMap.get(type).add(a);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private static boolean checkClashingAlias(String...aliasesToAdd) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        for (Map.Entry\u003cCommandType, ArrayList\u003cString\u003e\u003e entry: commandAliasesMap.entrySet()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            ArrayList\u003cString\u003e typeAliases \u003d entry.getValue();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            for (String alias : aliasesToAdd) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                for (String typeAlias : typeAliases) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    boolean hasClash \u003d alias.equalsIgnoreCase(typeAlias);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    if (hasClash) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        return true;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Delete aliases for a command."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param type CommandType of command to delete aliases for."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param aliasesToDelete Aliases to delete."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public static void deleteAlias(CommandType type, String...aliasesToDelete) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        ArrayList\u003cString\u003e aliases \u003d commandAliasesMap.get(type);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        for (String a : aliasesToDelete) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            aliases.remove(a);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 101
    }
  },
  {
    "path": "src/main/java/command/CommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * CommandType Enum."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eRepresents the type of a Command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    ADD_ALIAS(\"addAlias\", \"Add Alias\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    DELETE_ALIAS(\"deleteAlias\", \"Delete Alias\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    LIST_ALIASES(\"listAliases\", \"List Aliases\"),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    ADD_DEADLINE(\"addDeadline\", \"Add Deadline\"),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    ADD_EVENT(\"addEvent\", \"Add Event\"),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    ADD_TODO(\"addTodo\", \"Add Todo\"),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    DELETE_TASK(\"deleteTask\", \"Delete Task\"),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    DONE_TASK(\"doneTask\", \"Done Task\"),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    EXIT(\"exit\", \"Exit\"),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    FIND_TASK(\"findTask\", \"Find Task\"),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    LIST_TASKS(\"listTasks\", \"List Tasks\"),;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    protected final String id;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    protected final String prettyId;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    CommandType(String id, String prettyId) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.id \u003d id;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.prettyId \u003d prettyId;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public String getId() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return id;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public String getPrettyId() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return prettyId;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return getId() + \": \" + getPrettyId();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 43
    }
  },
  {
    "path": "src/main/java/command/DeleteAliasCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.DukeIllegalArgumentException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * RemoveAliasCommand class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eCommand to remove Aliases."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class DeleteAliasCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private String[] aliasesToDelete;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private CommandType type;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * DeleteAliasCommand Constructor."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param commandString Full command string of user input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param type CommandType of the command to add aliases for."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param aliasesToDelete Aliases to add for the command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public DeleteAliasCommand(String commandString, CommandType type, String...aliasesToDelete) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(CommandType.DELETE_TASK, commandString);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.aliasesToDelete \u003d aliasesToDelete;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeIllegalArgumentException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Command.deleteAlias(type, aliasesToDelete);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        ui.showDeleteAlias(type, aliasesToDelete);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 37
    }
  },
  {
    "path": "src/main/java/command/DeleteTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.DukeIllegalArgumentException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.DukeIoException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.InvalidIndexException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * DeleteTaskCommand class."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eCommand to delete Task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class DeleteTaskCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private int taskIndex;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public DeleteTaskCommand(String commandString, int taskIndex) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(CommandType.DELETE_TASK, commandString);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws InvalidIndexException, DukeIoException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Task task \u003d tasks.delete(taskIndex);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        ui.showDeleteTask(task, tasks.size());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 32
    }
  },
  {
    "path": "src/main/java/command/DoneTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.DukeIllegalArgumentException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.DukeIoException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.InvalidIndexException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * DoneTaskCommand class."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eCommand to set task as done."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class DoneTaskCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private int taskIndex;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public DoneTaskCommand(String commandString, int taskIndex) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(CommandType.DONE_TASK, commandString);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws InvalidIndexException, DukeIoException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Task task \u003d tasks.done(taskIndex);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        ui.showDoneTask(task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 32
    }
  },
  {
    "path": "src/main/java/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.DukeIllegalArgumentException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * ExitCommand class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eCommand to exit application."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public ExitCommand(String commandString) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(CommandType.EXIT, commandString);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.setExit(true);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        ui.showBye();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 25
    }
  },
  {
    "path": "src/main/java/command/FindTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.DukeIllegalArgumentException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.DukeIoException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * FindTaskCommand class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eCommand to find a Task by searching for a keyword."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class FindTaskCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private String searchString;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public FindTaskCommand(String commandString, String searchString) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(CommandType.FIND_TASK, commandString);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.searchString \u003d searchString;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeIoException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        TaskList matchingTasks \u003d tasks.find(this.searchString);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        ui.showFoundTasks(matchingTasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 30
    }
  },
  {
    "path": "src/main/java/command/ListAliasesCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.DukeIllegalArgumentException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * ListAliasesCommand class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eCommand to show all aliases."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class ListAliasesCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public ListAliasesCommand(String commandString) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(CommandType.LIST_ALIASES, commandString);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        ui.listAliases();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 25
    }
  },
  {
    "path": "src/main/java/command/ListTasksCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.DukeIllegalArgumentException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * ListTaskCommand class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eCommand to show all tasks in list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class ListTasksCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public ListTasksCommand(String commandString) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(CommandType.LIST_TASKS, commandString);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        ui.listTasks(tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 25
    }
  },
  {
    "path": "src/main/java/core/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import command.CommandType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.DukeIllegalArgumentException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import ui.Cli;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * Duke Chat Class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eA Personal Assistant Chatbot that helps to keep track of various things."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public static final String filePath \u003d System.getProperty(\"user.dir\") + \"/duke.txt\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Duke Constructor, defaults to CLI mode."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param filePath String containing path of data file for Duke."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        ui \u003d new Cli();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            loadAliases();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Duke Constructor."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param filePath String containing path of data file for Duke."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public Duke(String filePath, Ui ui) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            loadAliases();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private void loadAliases() throws DukeIllegalArgumentException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Command.addAlias(CommandType.ADD_ALIAS, \"add-alias\", \"alias\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Command.addAlias(CommandType.ADD_DEADLINE, \"deadline\", \"dead\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Command.addAlias(CommandType.ADD_EVENT, \"event\", \"ev\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Command.addAlias(CommandType.ADD_TODO, \"todo\", \"td\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Command.addAlias(CommandType.DELETE_ALIAS, \"delete-alias\", \"del-alias\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Command.addAlias(CommandType.DELETE_TASK, \"delete\", \"del\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Command.addAlias(CommandType.DONE_TASK, \"done\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Command.addAlias(CommandType.EXIT, \"bye\", \"exit\", \"logout\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Command.addAlias(CommandType.FIND_TASK, \"find\", \"search\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Command.addAlias(CommandType.LIST_ALIASES, \"list-alias\", \"list-aliases\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Command.addAlias(CommandType.LIST_TASKS, \"list\", \"tasks\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Getter for Ui."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @return Ui of Duke."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public Ui getUi() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return ui;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        new Duke(Duke.filePath, new Cli()).run();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Run chat bot interaction."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                String fullCommand \u003d ((Cli) ui).readCommand();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Consume user input from GUI."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param input String containing user input."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @return True if should exit program."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public boolean consumeUserInput(String input) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            return c.isExit();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 121,
      "-": 1
    }
  },
  {
    "path": "src/main/java/core/DukeGui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import ui.Gui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import ui.MainWindow;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class DukeGui extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public DukeGui() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(DukeGui.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            MainWindow mw \u003d fxmlLoader.\u003cMainWindow\u003egetController();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            duke \u003d new Duke(Duke.filePath, new Gui(mw));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            mw.setDuke(duke);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            duke.getUi().showWelcome();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 41
    }
  },
  {
    "path": "src/main/java/core/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Application.launch(DukeGui.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 12
    }
  },
  {
    "path": "src/main/java/core/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import command.AddAliasCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import command.AddDeadlineCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import command.AddEventCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import command.AddTodoCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import command.CommandType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import command.DeleteAliasCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import command.DeleteTaskCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import command.DoneTaskCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import command.ExitCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import command.FindTaskCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import command.ListAliasesCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import command.ListTasksCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.DukeIllegalArgumentException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.EmptyFieldException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.InvalidCommandFormatException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.InvalidIndexException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.UnknownCommandException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.time.temporal.TemporalAccessor;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Parse user input and returns a Command object corresponding to string input."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param command User string input."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @return executable Command object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @throws EmptyFieldException           If input does not provide a required field value."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @throws DukeIllegalArgumentException  If input has invalid field value."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @throws InvalidCommandFormatException If input is not in the right format."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @throws UnknownCommandException       If a command cannot be understood."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @throws InvalidIndexException         If input provides an out-of-bound index."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public static Command parse(String command) throws EmptyFieldException, DukeIllegalArgumentException,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            InvalidCommandFormatException, UnknownCommandException, InvalidIndexException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        CommandType type \u003d parseCommandTypeFromAlias(command);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        if (type \u003d\u003d CommandType.LIST_TASKS) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            return parseListTasksCommand(command);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } else if (type \u003d\u003d CommandType.DONE_TASK) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            return parseDoneTaskCommand(command);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } else if (type \u003d\u003d CommandType.ADD_TODO) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            return parseAddTodoCommand(command);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } else if (type \u003d\u003d CommandType.ADD_DEADLINE) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            return parseAddDeadlineCommand(command);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } else if (type \u003d\u003d CommandType.ADD_EVENT) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            return parseAddEventCommand(command);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } else if (type \u003d\u003d CommandType.DELETE_TASK) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            return parseDeleteCommand(command);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } else if (type \u003d\u003d CommandType.FIND_TASK) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            return parseFindTaskCommand(command);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } else if (type \u003d\u003d CommandType.ADD_ALIAS) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            return parseAddAliasCommand(command);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } else if (type \u003d\u003d CommandType.DELETE_ALIAS) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            return parseDeleteAliasCommand(command);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } else if (type \u003d\u003d CommandType.LIST_ALIASES) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            return parseListAliasesCommand(command);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } else if (type \u003d\u003d CommandType.EXIT) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            return parseExitCommand(command);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            throw new UnknownCommandException(\"OOPS!!! Sorry mate, I don\u0027t geddit.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private static CommandType parseCommandTypeFromAlias(String stringToParse) throws UnknownCommandException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        for (CommandType type : CommandType.values()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            ArrayList\u003cString\u003e aliases \u003d Command.getAliases(type);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            for (String alias : aliases) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                boolean isEqualsIgnoreCase \u003d stringToParse.equalsIgnoreCase(alias);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                boolean isFirstWordMatching \u003d stringToParse.toLowerCase().startsWith(alias + \" \");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                if (isEqualsIgnoreCase || isFirstWordMatching) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    return type;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        throw new UnknownCommandException(\"OOPS!!! Sorry mate, I don\u0027t geddit.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private static Command parseDeleteAliasCommand(String command) throws EmptyFieldException,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            InvalidCommandFormatException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            int firstSpaceIndex \u003d command.indexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            int typeLength \u003d \"/type\".length();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            int typeIndex \u003d command.indexOf(\"/type\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            String remainingCommand \u003d command.substring(firstSpaceIndex).trim();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            if (remainingCommand.isEmpty()) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                throw new EmptyFieldException(\"OOPS!!! Can\u0027t delete nothing.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            String aliasesString \u003d command.substring(firstSpaceIndex, typeIndex).trim();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            String[] aliasesToDelete \u003d aliasesString.split(\" \");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            String typeString \u003d command.substring(typeIndex + typeLength).trim();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            CommandType type \u003d parseCommandTypeFromTypeId(typeString);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            return new DeleteAliasCommand(command, type, aliasesToDelete);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } catch  (DukeIllegalArgumentException | StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            throw new InvalidCommandFormatException(\"OOPS!!! Please gimme the right format for adding aliases: \\n\\t\""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    + \"\u0027delete-alias [aliases, separated by spaces] /type [command ID]\u0027\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private static Command parseAddAliasCommand(String command) throws EmptyFieldException,"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            InvalidCommandFormatException {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            int firstSpaceIndex \u003d command.indexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            int typeLength \u003d \"/type\".length();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            int typeIndex \u003d command.indexOf(\"/type\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            String remainingCommand \u003d command.substring(firstSpaceIndex).trim();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            if (remainingCommand.isEmpty()) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                throw new EmptyFieldException(\"OOPS!!! Can\u0027t add nothing.\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            String aliasesString \u003d command.substring(firstSpaceIndex, typeIndex).trim();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            String[] aliasesToAdd \u003d aliasesString.split(\" \");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            String typeString \u003d command.substring(typeIndex + typeLength).trim();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            CommandType type \u003d parseCommandTypeFromTypeId(typeString);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            return new AddAliasCommand(command, type, aliasesToAdd);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } catch (DukeIllegalArgumentException | StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            throw new InvalidCommandFormatException(\"OOPS!!! Please gimme the right format for adding aliases: \\n\\t\""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    + \"\u0027alias [aliases, separated by spaces] /type [command ID]\u0027\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private static CommandType parseCommandTypeFromTypeId(String stringToParse) throws DukeIllegalArgumentException {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        for (CommandType type : CommandType.values()) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            boolean isEqualsIgnoreCase \u003d stringToParse.equalsIgnoreCase(type.getId());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            if (isEqualsIgnoreCase) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                return type;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        throw new DukeIllegalArgumentException(\"OOPS!!! No such ID for command type.\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private static Command parseListAliasesCommand(String command) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return new ListAliasesCommand(command);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private static Command parseExitCommand(String command) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return new ExitCommand(command);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private static Command parseFindTaskCommand(String command) throws EmptyFieldException,"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            InvalidCommandFormatException {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            //parse searchString from command string"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            int firstSpaceIndex \u003d command.indexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            String searchString \u003d command.substring(firstSpaceIndex).trim();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            if (searchString.isEmpty()) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                throw new EmptyFieldException(\"OOPS!!! Can\u0027t search for somethin\u0027 with nothin\u0027 mate.\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            return new FindTaskCommand(command, searchString);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            throw new InvalidCommandFormatException(\"OOPS!!! Please gimme the right format for searching: \""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    + \"\u0027find [keyword]\u0027\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private static Command parseDeleteCommand(String command) throws InvalidIndexException {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(command.split(\" \")[1]);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            return new DeleteTaskCommand(command, taskIndex);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            throw new InvalidIndexException(\"OOPS!!! I can\u0027t do that, please gimme a valid task ID mate.\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private static Command parseAddEventCommand(String command) throws EmptyFieldException,"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            DukeIllegalArgumentException, InvalidCommandFormatException {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            int atLength \u003d \"/at\".length();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            int firstSpaceIndex \u003d command.indexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            int atIndex \u003d command.indexOf(\"/at\"); // look for \u0027/at\u0027 keyword from command"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            // parse description from command"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            String description \u003d command.substring(firstSpaceIndex, atIndex).trim();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            if (description.isEmpty()) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                throw new EmptyFieldException(\"OOPS!!! The description of an event cannot be empty mate.\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            // parse at-datetime from command"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            String at \u003d command.substring(atIndex + atLength).trim();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            if (at.isEmpty()) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                throw new EmptyFieldException(\"OOPS!!! The start \u0026 end dates of an event cannot be empty mate.\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            DateTimeFormatter fmt \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy[ HHmm]\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            DateTimeFormatter fmt2 \u003d DateTimeFormatter.ofPattern(\"[d/M/yyyy][ ][HHmm]\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            Task task \u003d null;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            int dashIndex \u003d at.indexOf(\"-\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            if (dashIndex !\u003d -1) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                String atStart \u003d at.substring(0, dashIndex).trim();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                String atEnd \u003d at.substring(dashIndex + 1).trim();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                TemporalAccessor parsedStart \u003d fmt.parseBest(atStart, LocalDateTime::from, LocalDate::from);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                TemporalAccessor parsedEnd \u003d fmt2.parseBest(atEnd,"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        LocalDateTime::from, LocalDate::from, LocalTime::from);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                if ((parsedStart instanceof LocalDateTime) \u0026\u0026 (parsedEnd instanceof LocalDateTime)) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    task \u003d new Event(description, (LocalDateTime) parsedStart,"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                            (LocalDateTime) parsedEnd);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                } else if ((parsedStart instanceof LocalDate) \u0026\u0026 ((parsedEnd instanceof LocalDate))) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    task \u003d new Event(description, ((LocalDate) parsedStart).atStartOfDay(),"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                            ((LocalDate) parsedEnd).atStartOfDay(), true);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                } else if ((parsedStart instanceof LocalDate) \u0026\u0026 (parsedEnd instanceof LocalTime)) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    task \u003d new Event(description, ((LocalDate) parsedStart).atStartOfDay(),"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                            ((LocalTime) parsedEnd).atDate((LocalDate) parsedStart), true);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    throw new InvalidCommandFormatException("
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                            \"OOPS!!! Please gimme an event with the right format: \\n\\t\\t\""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                                    + \"\u0027event [description] /at [start datetime] - [end datetime]\u0027\\n\\t\""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                                    + \"datetime format: d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                TemporalAccessor parsedStart \u003d fmt.parseBest(at, LocalDateTime::from, LocalDate::from);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                if (parsedStart instanceof LocalDateTime) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    task \u003d new Event(description, (LocalDateTime) parsedStart);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                } else if (parsedStart instanceof LocalDate) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    task \u003d new Event(description, ((LocalDate) parsedStart).atStartOfDay(), true);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            assert task !\u003d null : \"Task is null\";"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            return new AddEventCommand(command, task);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } catch (DateTimeParseException | StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            throw new InvalidCommandFormatException(\"OOPS!!! Please gimme an event with the right format: \\n\\t\\t\""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    + \"\u0027event [description] /at [start datetime] - [end datetime]\u0027\\n\\t\""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    + \"datetime format: d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private static Command parseAddDeadlineCommand(String command) throws EmptyFieldException,"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            InvalidCommandFormatException {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            int byLength \u003d \"/by\".length();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            int firstSpaceIndex \u003d command.indexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            int byIndex \u003d command.indexOf(\"/by\"); // look for \u0027/by\u0027 keyword from command"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            // parse description from command"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            String description \u003d command.substring(firstSpaceIndex, byIndex).trim();"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            if (description.isEmpty()) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                throw new EmptyFieldException(\"OOPS!!! The description of a deadline cannot be empty mate.\");"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            // parse by-datetime from command"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            String by \u003d command.substring(byIndex + byLength).trim();"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            if (by.isEmpty()) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                throw new EmptyFieldException(\"OOPS!!! The date of a deadline cannot be empty mate.\");"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            DateTimeFormatter fmt \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy[ HHmm]\");"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            TemporalAccessor parsedBy \u003d fmt.parseBest(by, LocalDateTime::from, LocalDate::from);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            Task task \u003d null;"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            // create task depending on given whether a by-time is given"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            if (parsedBy instanceof LocalDateTime) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                task \u003d new Deadline(description, (LocalDateTime) parsedBy);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            } else if (parsedBy instanceof LocalDate) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                task \u003d new Deadline(description, ((LocalDate) parsedBy).atStartOfDay(), true);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "          "
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            assert task !\u003d null : \"Task is null\";"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            return new AddDeadlineCommand(command, task);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } catch (DateTimeParseException | StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            throw new InvalidCommandFormatException(\"OOPS!!! Please gimme a deadline with the right format: \""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    + \"\u0027deadline [description] /by [datetime]\u0027\\n\\t\""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    + \"datetime format: d/M/yyyy[ HHmm]\");"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private static Command parseAddTodoCommand(String command) throws EmptyFieldException,"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            InvalidCommandFormatException {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            //parse description from command string"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            int firstSpaceIndex \u003d command.indexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            String description \u003d command.substring(firstSpaceIndex).trim();"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            if (description.isEmpty()) {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                throw new EmptyFieldException(\"OOPS!!! The description of a task cannot be empty mate.\");"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            Task task \u003d new Todo(description);"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            return new AddTodoCommand(command, task);"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            throw new InvalidCommandFormatException(\"OOPS!!! Please gimme a todo with the right format: \""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    + \"\u0027todo [description]\u0027\");"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private static Command parseDoneTaskCommand(String command) throws InvalidIndexException {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(command.split(\" \")[1]);"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            return new DoneTaskCommand(command, taskIndex);"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            throw new InvalidIndexException(\"OOPS!!! I can\u0027t do that, please gimme a valid task ID mate.\");"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private static Command parseListTasksCommand(String command) {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return new ListTasksCommand(command);"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 316
    }
  },
  {
    "path": "src/main/java/core/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.DukeIoException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.DukeIllegalArgumentException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.TaskType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private Path path;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.path \u003d Paths.get(filePath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Saves tasks into a file on hard disk."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param taskList TaskList to save."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @throws DukeIoException If file cannot be opened/modified."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void save(TaskList taskList) throws DukeIoException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            if (!Files.exists(path)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                Files.createFile(path);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            BufferedWriter writer \u003d Files.newBufferedWriter(path);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d taskList.toList();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            // write tasks into file"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            IntStream.range(0, tasks.size())"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                .forEach(i -\u003e {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    StringBuilder taskSb \u003d encodeTaskToDataString(task);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    sb.append(taskSb);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                });"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            writer.write(sb.toString());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            throw new DukeIoException(\"OOPS!!! Error trying to save data to file.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Encode a task into our data string format."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param task Task to encode."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @return StringBuilder containing encoded task data."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private StringBuilder encodeTaskToDataString(Task task) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        StringBuilder rowBuilder \u003d new StringBuilder("
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                String.format(\"%s|%s|%s\", task.getType().getTag(),"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        task.isDone() ? \"1\" : \"0\", task.getDescription()));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            rowBuilder.append(String.format(\"|%s\","
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    ((Deadline) task).getByDateTime().format(DateTimeFormatter.ISO_DATE_TIME)));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            rowBuilder.append(String.format(\"|%s\","
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    ((Deadline) task).isAllDay() ? \"1\" : \"0\"));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            rowBuilder.append(String.format(\"|%s|%s\","
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    ((Event) task).getStartDateTime().format(DateTimeFormatter.ISO_DATE_TIME),"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    ((Event) task).getEndDateTime().format(DateTimeFormatter.ISO_DATE_TIME)));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            rowBuilder.append(String.format(\"|%s\","
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    ((Event) task).isAllDay() ? \"1\" : \"0\"));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        rowBuilder.append(\"\\n\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return rowBuilder;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Loads tasks from hard disk."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @return An ArrayList of Tasks."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @throws DukeIoException              If file cannot be opened/read."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @throws DukeIllegalArgumentException If file data is corrupted and invalid values are read."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeIoException, DukeIllegalArgumentException {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            if (Files.exists(path)) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                BufferedReader reader \u003d Files.newBufferedReader(path);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                String line \u003d null;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                while ((line \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    Task task \u003d decodeTaskFromString(line);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    tasks.add(task);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                reader.close();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            throw new DukeIoException(\"OOPS!!! Error trying to load data from file.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Decode a Task object from a given string and return it."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param line String to decode."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @return Task decoded from String."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @throws DukeIllegalArgumentException If decoded string give an invalid value for object creation."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @throws DukeIoException              If encounter any IO errors."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private Task decodeTaskFromString(String line) throws DukeIllegalArgumentException, DukeIoException {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        String[] parts \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        String type \u003d parts[0];"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        boolean isDone \u003d \"1\".equals(parts[1]);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        String description \u003d parts[2];"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        if (type.equalsIgnoreCase(TaskType.TODO.getTag())) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            task \u003d new Todo(description);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            task.setDone(isDone);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } else if (type.equalsIgnoreCase(TaskType.DEADLINE.getTag())) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            LocalDateTime byDate \u003d LocalDateTime.parse(parts[3], DateTimeFormatter.ISO_DATE_TIME);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            boolean isAllDay \u003d \"1\".equals(parts[4]);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            task \u003d new Deadline(description, byDate, isAllDay);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            task.setDone(isDone);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } else if (type.equalsIgnoreCase(TaskType.EVENT.getTag())) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            LocalDateTime startDate \u003d LocalDateTime.parse(parts[3], DateTimeFormatter.ISO_DATE_TIME);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            LocalDateTime endDate \u003d LocalDateTime.parse(parts[4], DateTimeFormatter.ISO_DATE_TIME);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            boolean isAllDay \u003d \"1\".equals(parts[5]);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            task \u003d new Event(description, startDate, endDate, isAllDay);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            task.setDone(isDone);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            throw new DukeIoException(\"OOPS!!! Encountered error while decoding file tasks.\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 152
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * DukeException Class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eParent class for all exceptions in Duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public abstract class DukeException extends Exception {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public DukeException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public DukeException(Throwable cause) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(cause);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 26
    }
  },
  {
    "path": "src/main/java/exception/DukeIllegalArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * DukeIllegalArgumentException class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eException thrown when illegal arguments are given in Duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class DukeIllegalArgumentException extends DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public DukeIllegalArgumentException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public DukeIllegalArgumentException(String message) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public DukeIllegalArgumentException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public DukeIllegalArgumentException(Throwable cause) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(cause);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 26
    }
  },
  {
    "path": "src/main/java/exception/DukeIoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * DukeIoException class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eException thrown when input/output problems occur in Duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class DukeIoException extends DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public DukeIoException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public DukeIoException(String message) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public DukeIoException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public DukeIoException(Throwable cause) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(cause);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 26
    }
  },
  {
    "path": "src/main/java/exception/EmptyFieldException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * EmptyFieldException class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eException thrown when required command fields are empty in Duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class EmptyFieldException extends DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public EmptyFieldException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public EmptyFieldException(String message) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public EmptyFieldException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public EmptyFieldException(Throwable cause) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(cause);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 27
    }
  },
  {
    "path": "src/main/java/exception/InvalidCommandFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * InvalidCommandFormatException class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eException thrown when invalid command formats are given in Duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class InvalidCommandFormatException extends DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public InvalidCommandFormatException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public InvalidCommandFormatException(String message) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public InvalidCommandFormatException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public InvalidCommandFormatException(Throwable cause) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(cause);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 27
    }
  },
  {
    "path": "src/main/java/exception/InvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * InvalidIndexException class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eException thrown when invalid index is given in Duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class InvalidIndexException extends DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public InvalidIndexException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public InvalidIndexException(String message) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public InvalidIndexException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public InvalidIndexException(Throwable cause) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(cause);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 27
    }
  },
  {
    "path": "src/main/java/exception/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * UnknownCommandException class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eException thrown when command given is unknown in Duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class UnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public UnknownCommandException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public UnknownCommandException(String message) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public UnknownCommandException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public UnknownCommandException(Throwable cause) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(cause);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 27
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * Deadline Class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eRepresents the deadline-type task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    protected LocalDateTime byDateTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    protected boolean isAllDay;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Deadline Constructor."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param description Description of Deadline task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param byDateTime Deadline datetime."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public Deadline(String description, LocalDateTime byDateTime) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(description, TaskType.DEADLINE);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.byDateTime \u003d byDateTime;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.isAllDay \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Deadline Constructor."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param description Description of Deadline task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param byDateTime Deadline datetime."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param isAllDay Whether task is all day."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public Deadline(String description, LocalDateTime byDateTime, boolean isAllDay) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(description, TaskType.DEADLINE);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.byDateTime \u003d byDateTime;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.isAllDay \u003d isAllDay;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Getter for by."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @return LocalDateTime representing by."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public LocalDateTime getByDateTime() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return byDateTime;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Setter for by."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param byDateTime LocalDateTime representing by."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void setByDateTime(LocalDateTime byDateTime) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.byDateTime \u003d byDateTime;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Getter for isAllDay."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @return boolean isAllDay."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public boolean isAllDay() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return isAllDay;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Setter for isAllDay."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param allDay boolean isAllDay."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void setAllDay(boolean allDay) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        isAllDay \u003d allDay;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        if (isAllDay) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            return String.format(\"[%s]%s (by: %s)\", TaskType.DEADLINE.getTag(), super.toString(),"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    byDateTime.toLocalDate().format(DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM)));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            return String.format(\"[%s]%s (by: %s)\", TaskType.DEADLINE.getTag(), super.toString(),"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    byDateTime.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM)));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 90
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.DukeIllegalArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * Event Class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eRepresents the event-type task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    protected LocalDateTime startDateTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    protected LocalDateTime endDateTime;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    protected boolean isAllDay;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Event constructor."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param description Description of Event task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param startDateTime Start Datetime of event."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public Event(String description, LocalDateTime startDateTime) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(description, TaskType.EVENT);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.startDateTime \u003d startDateTime;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.endDateTime \u003d startDateTime;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.isAllDay \u003d false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Event constructor."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param description Description of Event task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param startDateTime Start Datetime of event."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param isAllDay Whether task is all day."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public Event(String description, LocalDateTime startDateTime, boolean isAllDay) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(description, TaskType.EVENT);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.startDateTime \u003d startDateTime;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.endDateTime \u003d startDateTime;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.isAllDay \u003d isAllDay;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Event constructor."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param description Description of Event task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param startDateTime Start Datetime of event."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param endDateTime End Datetime of event."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @throws DukeIllegalArgumentException If end date is before start date."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public Event(String description, LocalDateTime startDateTime, LocalDateTime endDateTime) throws"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            DukeIllegalArgumentException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(description, TaskType.EVENT);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        if (endDateTime.isBefore(startDateTime)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            throw new DukeIllegalArgumentException(\"End date should be before start date!\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.startDateTime \u003d startDateTime;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.endDateTime \u003d endDateTime;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.isAllDay \u003d false;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Description of Event task."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param description Description of Event task."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param startDateTime Start Datetime of event."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param endDateTime End Datetime of event."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param isAllDay Whether task is all day."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @throws DukeIllegalArgumentException If end date is before start date."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public Event(String description, LocalDateTime startDateTime, LocalDateTime endDateTime,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                 boolean isAllDay) throws DukeIllegalArgumentException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(description, TaskType.EVENT);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        if (endDateTime.isBefore(startDateTime)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            throw new DukeIllegalArgumentException(\"End date should be before start date!\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.startDateTime \u003d startDateTime;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.endDateTime \u003d endDateTime;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.isAllDay \u003d isAllDay;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Getter for startDateTime."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @return LocalDateTime object representing startDateTime."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public LocalDateTime getStartDateTime() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return startDateTime;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Setter for startDateTime."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param startDateTime LocalDateTime to set startDateTime."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @throws DukeIllegalArgumentException If end date is before start date."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void setStartDateTime(LocalDateTime startDateTime) throws DukeIllegalArgumentException {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        if (this.endDateTime.isEqual(this.startDateTime)) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            this.endDateTime \u003d startDateTime;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        if (this.endDateTime.isBefore(startDateTime)) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            throw new DukeIllegalArgumentException(\"End date should be before start date!\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.startDateTime \u003d startDateTime;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Getter for endDateTime."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @return LocalDateTime object representing endDateTime."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public LocalDateTime getEndDateTime() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return endDateTime;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Setter for startDateTime."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param endDateTime LocalDateTime to set endDateTime."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @throws DukeIllegalArgumentException If end date is before start date."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void setEndDateTime(LocalDateTime endDateTime) throws DukeIllegalArgumentException {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        if (endDateTime.isBefore(this.startDateTime)) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            throw new DukeIllegalArgumentException(\"End date should be before start date!\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.endDateTime \u003d endDateTime;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Getter for isAllDay."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @return boolean isAllDay."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public boolean isAllDay() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return isAllDay;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Setter for isAllDay."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param allDay boolean isAllDay."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void setAllDay(boolean allDay) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        isAllDay \u003d allDay;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        boolean isStartEndSameDay \u003d startDateTime.toLocalDate().isEqual(endDateTime.toLocalDate());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        boolean isStartEndSame \u003d startDateTime.isEqual(endDateTime);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        DateTimeFormatter dtfDate \u003d DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        DateTimeFormatter dtfTime \u003d DateTimeFormatter.ofLocalizedTime(FormatStyle.MEDIUM);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        DateTimeFormatter dtfDateTime \u003d DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        if (isAllDay \u0026\u0026 isStartEndSameDay) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            return String.format(\"[%s]%s (at: %s)\", TaskType.EVENT.getTag(), super.toString(),"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    startDateTime.format(dtfDate));"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } else if (isAllDay) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            return String.format(\"[%s]%s (at: %s - %s)\", TaskType.EVENT.getTag(), super.toString(),"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    startDateTime.format(dtfDate),"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    endDateTime.format(dtfDate));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } else if (isStartEndSame) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            return String.format(\"[%s]%s (at: %s)\", TaskType.EVENT.getTag(), super.toString(),"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    startDateTime.format(dtfDateTime));"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } else if (isStartEndSameDay) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            return String.format(\"[%s]%s (at: %s - %s)\", TaskType.EVENT.getTag(), super.toString(),"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    startDateTime.format(dtfDateTime),"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    endDateTime.format(dtfTime));"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            return String.format(\"[%s]%s (at: %s - %s)\", TaskType.EVENT.getTag(), super.toString(),"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    startDateTime.format(dtfDateTime),"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    endDateTime.format(dtfDateTime));"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 181
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * Task Class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eRepresents a single task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    protected TaskType type;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Task constructor."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param type Type of task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public Task(String description, TaskType type) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public TaskType getType() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void setType(TaskType type) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void setDone(boolean isDone) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Get a status symbol for the task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @return + for a done task or x for an undone task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return (isDone ? \"+\" : \"x\"); //return + or x symbols"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 63
    }
  },
  {
    "path": "src/main/java/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.InvalidIndexException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * TaskList Class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eRepresents a list of Tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public ArrayList\u003cTask\u003e toList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param taskIndex Index of task to set as done."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @return Task set as done."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @throws InvalidIndexException Index is out-of-bounds."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public Task done(int taskIndex) throws InvalidIndexException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            Task task \u003d tasks.get(taskIndex - 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            task.setDone(true);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            throw new InvalidIndexException(\"OOPS!!! I can\u0027t do that, please gimme a valid task ID mate.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Deletes a task from the list permanently."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param taskIndex Index of task to delete."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @return Task that was deleted."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @throws InvalidIndexException Index is out-of-bounds."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public Task delete(int taskIndex) throws InvalidIndexException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            Task task \u003d tasks.remove(taskIndex - 1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            throw new InvalidIndexException(\"OOPS!!! I can\u0027t do that, please gimme a valid task ID mate.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public Task get(int i) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return tasks.get(i);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Finds all tasks in list which contains searchString in its description."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param searchString Search string to match in a Task description."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @return TaskList containing Tasks which contains searchString in their description."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public TaskList find(String searchString) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        TaskList matchingTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            if (t.getDescription().toLowerCase().contains(searchString.toLowerCase())) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                matchingTasks.add(t);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return matchingTasks;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 90
    }
  },
  {
    "path": "src/main/java/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * TaskType Enum."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eRepresents the type of a Task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    TODO(\"T\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    EVENT(\"E\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    DEADLINE(\"D\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private final String tag;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    TaskType(String tag) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.tag \u003d tag;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public String getTag() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return tag;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return getTag();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 30
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * Todo Class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eRepresents the todo-type task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(description, TaskType.TODO);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return String.format(\"[%s]%s\", TaskType.TODO.getTag(), super.toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 20
    }
  },
  {
    "path": "src/main/java/ui/Cli.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * Cli class."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class Cli extends Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private static final String LINE_PREPEND \u003d \"\\t\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private static final String LINE_APPEND \u003d \"\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private static final String HORIZONTAL_LINE \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    protected StringBuilder messageBuilder \u003d new StringBuilder(LINE_PREPEND + HORIZONTAL_LINE + LINE_APPEND);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public Cli() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Read a string input from user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @return String containing user input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Show message to user."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void show() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        addLineToMessage(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        String output \u003d messageBuilder.toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        messageBuilder \u003d new StringBuilder(LINE_PREPEND + HORIZONTAL_LINE + LINE_APPEND);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        System.out.println(output);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Adds a line to the message."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param line String containing a line to add to messageBuilder."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void addLineToMessage(String line) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        messageBuilder.append(LINE_PREPEND);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        messageBuilder.append(line);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        messageBuilder.append(LINE_APPEND);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 51
    }
  },
  {
    "path": "src/main/java/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * DialogBox class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eA custom control using FXML. This control represents a dialog box consisting of an"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * ImageView to represent the speaker\u0027s face and a label containing text from the speaker."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private Text dialog;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Constructor for DialogBox."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param text String text to display."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param img Image object to display."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        // Styling"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        setStyle(\"-fx-background-color: #95e1d3;\");;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        setMargin(dialog, new Insets(0,10,0,0));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        displayPicture.setClip(new Circle(50,50,50));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        // Flip styling"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        setStyle(\"-fx-background-color: #fce38a;\");;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        setMargin(dialog, new Insets(0,0,0,10));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Factory method to generate a User DialogBox."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param text String text to display."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param img Image object to display."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @return User DialogBox object."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Factory method to generate a Duke DialogBox."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param text String text to display."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param img Image object to display."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @return Duke DialogBox object."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 94
    }
  },
  {
    "path": "src/main/java/ui/Gui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * Gui class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class Gui extends Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private final MainWindow mainWindowController;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private static final String LINE_APPEND \u003d \"\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public Gui(MainWindow mainWindowController) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.mainWindowController \u003d mainWindowController;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Show message to user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void show() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        String output \u003d messageBuilder.toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        messageBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        mainWindowController.addDukeResponse(output);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Adds a line to the message."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param line String containing a line to add to messageBuilder."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void addLineToMessage(String line) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        messageBuilder.append(line);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        messageBuilder.append(LINE_APPEND);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Print out welcome message."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        String greeting \u003d \"G\u0027day mate! I\u0027m Duke. Whatcha need help with?\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        addLineToMessage(greeting);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        show();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 46
    }
  },
  {
    "path": "src/main/java/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import core.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import javafx.animation.KeyFrame;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import javafx.animation.Timeline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import javafx.util.Duration;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.util.concurrent.atomic.AtomicInteger;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getUserDialog(input, userImage));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        assert userInput.getText().isEmpty() : \"User Input should be empty after clearing.\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        boolean isExit \u003d duke.consumeUserInput(input);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        if (isExit) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            exit();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Run exit sequence."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        sendButton.setDisable(true);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        userInput.setDisable(true);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        runExitTimer();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Make Duke count down to exit."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private void runExitTimer() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        AtomicInteger i \u003d new AtomicInteger(3);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Timeline timeline \u003d new Timeline(new KeyFrame("
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            Duration.seconds(1),"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            ae -\u003e {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                if (i.get() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    Platform.exit();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    addDukeResponse(\"Shutting down in...\" + i);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    i.getAndDecrement();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            }));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        timeline.setCycleCount(4);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        timeline.play();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Make Duke respond in chat with given String."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param response String which Duke will respond with."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void addDukeResponse(String response) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(response, dukeImage));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 99
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import command.CommandType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public abstract class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    protected StringBuilder messageBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Show message to user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public abstract void show();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Add a line to messageBuilder."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param line String containing a line to add to messageBuilder."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public abstract void addLineToMessage(String line);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Print out message for adding a task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void showAddTask(Task task, int taskCount) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        addLineToMessage(\"Got it mate. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        addLineToMessage(task.toString());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        addLineToMessage(\"Now you have \" + taskCount + \" tasks in the list mate.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        show();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Print out message for setting a task to done."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param task Task to set as done."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void showDoneTask(Task task) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        addLineToMessage(\"Nice one mate! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        addLineToMessage(\"  \" + task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        show();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Print out message for deleting a task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param task      Task to delete."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param taskCount Current number of tasks in list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void showDeleteTask(Task task, int taskCount) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        addLineToMessage(\"Noted mate! I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        addLineToMessage(\"  \" + task);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        addLineToMessage(\"Now you have \" + taskCount + \" tasks in the list mate.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        show();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Print out list of tasks."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param tasks TaskList to print out."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void listTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        if (tasks.size() \u003e 0) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            addLineToMessage(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            IntStream.range(0, tasks.size())"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                .forEach(i -\u003e {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    addLineToMessage((i + 1) + \". \" + tasks.get(i));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                });"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            addLineToMessage(\"Can\u0027t see any tasks in the list, start adding tasks mate!\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        show();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Print out list of tasks matching search string."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param matchingTasks TaskList to print out."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void showFoundTasks(TaskList matchingTasks) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        if (matchingTasks.size() \u003e 0) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            addLineToMessage(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                addLineToMessage((i + 1) + \". \" + matchingTasks.get(i));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            addLineToMessage(\"Mate, I found no matching tasks. Try something else.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        show();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Print out loading error."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        showError(\"Oops! Unable to load tasks from hard disk, starting with an empty list.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Print out welcome message."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        String logo \u003d \" ____        _        \\n\\t\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\\t\""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\\t\""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\\t\""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\\t\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        String greeting \u003d logo + \"G\u0027day mate! I\u0027m Duke.\\n\\tWhatcha need help with?\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        addLineToMessage(greeting);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        show();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Print out exit message."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void showBye() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        String bye \u003d \"Bye mate. Catch you later!\";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        addLineToMessage(bye);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        show();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Print out generic error."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param message Error message."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        addLineToMessage(message);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        show();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Print out list of aliases."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void listAliases() {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        addLineToMessage(\"Here are the aliases for all commands:\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        addLineToMessage(\"ID: Aliases\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        addLineToMessage(\"-----------\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        for (CommandType type : CommandType.values()) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            ArrayList\u003cString\u003e aliases \u003d Command.getAliases(type);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            String aliasesString \u003d String.join(\",\", aliases);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            addLineToMessage(type.getId() + \": \" + aliasesString);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        show();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Print out add alias message."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param type Type of Command."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param aliasesAdded Strings of aliases added."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void showAddAlias(CommandType type, String...aliasesAdded) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        addLineToMessage(\"I\u0027ve added the following aliases for \" + type.getId() + \":\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        addLineToMessage(String.join(\",\", aliasesAdded));"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        show();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Print out remove alias message."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param type Type of Command."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param aliasesDeleted Strings of aliases deleted."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void showDeleteAlias(CommandType type, String...aliasesDeleted) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        addLineToMessage(\"I\u0027ve deleted the following aliases for \" + type.getId() + \":\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        addLineToMessage(String.join(\",\", aliasesDeleted));"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        show();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 178
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\u003c?import javafx.scene.text.Text?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\u003c!--        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" text\u003d\"Labels\" wrapText\u003d\"true\"\u003e--\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\u003c!--         \u003cHBox.margin\u003e--\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\u003c!--            \u003cInsets /\u003e--\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\u003c!--         \u003c/HBox.margin\u003e\u003c/Label\u003e--\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "      \u003cText fx:id\u003d\"dialog\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Text\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/Text\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 23
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"424.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"523.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"0.39999999999997726\" AnchorPane.rightAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"500.0\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"42.39999999999998\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"488.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 19
    }
  },
  {
    "path": "src/test/java/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    void getBy_sameDateTime_success() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"Deadline\", LocalDate.parse(\"2019-05-10\").atStartOfDay());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        assertEquals(deadline.getByDateTime(), LocalDate.parse(\"2019-05-10\").atStartOfDay());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    void setBy_sameDateTime_success() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"Deadline\", LocalDate.parse(\"2019-05-10\").atStartOfDay());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        deadline.setByDateTime(LocalDate.parse(\"2019-06-22\").atStartOfDay());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        assertEquals(deadline.getByDateTime(), LocalDate.parse(\"2019-06-22\").atStartOfDay());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    void isAllDay_true_success() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"Deadline\", LocalDate.parse(\"2019-05-10\").atStartOfDay(), true);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        assertEquals(deadline.isAllDay, true);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    void setAllDay() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"Deadline\", LocalDate.parse(\"2019-05-10\").atStartOfDay());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        deadline.setAllDay(true);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        assertEquals(deadline.isAllDay, true);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    void testToString_byDateOnly_success() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        assertEquals(\"[D][x] Achieve Goal A (by: May 10, 2019)\","
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                new Deadline(\"Achieve Goal A\","
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        LocalDate.parse(\"2019-05-10\").atStartOfDay(), true).toString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    void testToString_byDateTime_success() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        assertEquals(\"[D][x] Achieve Goal A (by: May 10, 2019, 11:00:00 AM)\","
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                new Deadline(\"Achieve Goal A\","
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        LocalDateTime.parse(\"2019-05-10T11:00\")).toString());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 52
    }
  },
  {
    "path": "src/test/java/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.DukeIllegalArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    void getStartDateTime_sameDateTime_success() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Event event \u003d new Event(\"Event\", LocalDate.parse(\"2019-05-10\").atStartOfDay());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        assertEquals(event.getStartDateTime(), LocalDate.parse(\"2019-05-10\").atStartOfDay());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    void setStartDateTime_sameDateTime_success() throws DukeIllegalArgumentException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Event event \u003d new Event(\"Event\", LocalDate.parse(\"2019-05-10\").atStartOfDay());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        event.setStartDateTime(LocalDate.parse(\"2019-06-22\").atStartOfDay());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        assertEquals(event.startDateTime, LocalDate.parse(\"2019-06-22\").atStartOfDay());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    void getEndDateTime_sameDateTime_success() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Event event \u003d new Event(\"Event\", LocalDate.parse(\"2019-05-10\").atStartOfDay());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        assertEquals(event.getEndDateTime(), LocalDate.parse(\"2019-05-10\").atStartOfDay());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    void setEndDateTime_sameDateTime_success() throws DukeIllegalArgumentException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Event event \u003d new Event(\"Event\", LocalDate.parse(\"2019-05-10\").atStartOfDay());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        event.setEndDateTime(LocalDate.parse(\"2019-06-22\").atStartOfDay());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        assertEquals(event.endDateTime, LocalDate.parse(\"2019-06-22\").atStartOfDay());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    void isAllDay_true_success() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Event event \u003d new Event(\"Event\", LocalDate.parse(\"2019-05-10\").atStartOfDay(), true);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        assertEquals(event.isAllDay(), true);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    void setAllDay_true_success() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Event event \u003d new Event(\"Event\", LocalDate.parse(\"2019-05-10\").atStartOfDay());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        event.setAllDay(true);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        assertEquals(event.isAllDay, true);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    void testToString_startDateOnly_success() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        assertEquals(\"[E][x] Mother\u0027s Day (at: May 10, 2019)\","
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                new Event(\"Mother\u0027s Day\", LocalDate.parse(\"2019-05-10\").atStartOfDay(), true).toString());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    void testToString_startDateTimeOnly_success() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        assertEquals(\"[E][x] Start of Long Project (at: May 10, 2019, 11:00:00 AM)\","
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                new Event(\"Start of Long Project\", LocalDateTime.parse(\"2019-05-10T11:00\")).toString());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    void testToString_startEndDate_success() throws DukeIllegalArgumentException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        assertEquals(\"[E][x] Conference (at: May 10, 2019 - May 11, 2019)\","
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                new Event(\"Conference\","
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        LocalDate.parse(\"2019-05-10\").atStartOfDay(),"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        LocalDate.parse(\"2019-05-11\").atStartOfDay(),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        true).toString());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    void testToString_startEndDateTime_success() throws DukeIllegalArgumentException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        assertEquals(\"[E][x] Hackathon (at: May 10, 2019, 10:00:00 AM - May 11, 2019, 1:00:00 PM)\","
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                new Event(\"Hackathon\","
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        LocalDateTime.parse(\"2019-05-10T10:00\"),"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        LocalDateTime.parse(\"2019-05-11T13:00\")).toString());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    void testToString_startEndDateTimeSame_success() throws DukeIllegalArgumentException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        assertEquals(\"[E][x] Meeting (at: May 10, 2019, 10:00:00 AM - 1:00:00 PM)\","
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                new Event(\"Meeting\","
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        LocalDateTime.parse(\"2019-05-10T10:00\"),"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        LocalDateTime.parse(\"2019-05-10T13:00\")).toString());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    void testToString_endBeforeStart_exceptionThrown() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            assertEquals(\"[E][x] Meeting (at: May 10, 2019, 10:00:00 AM - 1:00:00 PM)\","
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    new Event(\"Meeting\","
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                            LocalDateTime.parse(\"2019-05-10T10:00\"),"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                            LocalDateTime.parse(\"2019-05-10T13:00\")).toString());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } catch (DukeIllegalArgumentException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            assertEquals(\"End date should be before start date!\", e.getMessage());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 100
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\tG\u0027day mate! I\u0027m Duke."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\tWhatcha need help with?"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\tGot it mate. I\u0027ve added this task:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t[T][x] borrow book"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\tNow you have 1 tasks in the list mate."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\tHere are the tasks in your list:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t1. [T][x] borrow book"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\tGot it mate. I\u0027ve added this task:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t[D][x] return book (by: Sunday)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\tNow you have 2 tasks in the list mate."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\tGot it mate. I\u0027ve added this task:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t[E][x] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\tNow you have 3 tasks in the list mate."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\tNice one mate! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t  [T][+] borrow book"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\tHere are the tasks in your list:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t1. [T][+] borrow book"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t2. [D][x] return book (by: Sunday)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t3. [E][x] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\tNoted mate! I\u0027ve removed this task:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t  [D][x] return book (by: Sunday)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\tNow you have 2 tasks in the list mate."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\tOOPS!!! Sorry mate, I don\u0027t geddit."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\tBye mate. Catch you later!"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 49
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 8
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 21
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 34
    }
  }
]
