[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    // shadow: to create JAR files"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    // checkstyle"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "//    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    // mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    // mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    //JUnit testing unit"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    // make Duke cross-platform"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "test {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "// shadow: create JAR files"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "// checkstyle"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "//checkstyle {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "//    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "//}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 50,
      "-": 19
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "T | false | do homework | HIGH"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "T | false | project | HIGH"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "D | true | essay | 1568822340000 | null"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "E | false |   meeting | 1569211200000 | null"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "T | false | description | null"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "D | false | essay | 1566316740000 | null"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "D | false | essay | 1568995140000 | null"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "E | false | birthday celebration | 1597420860000 | null"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "T | false | hahaha | null"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 9
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "# User Guide for Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "### Adding new tasks "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "Duke supports three types of tasks:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "* `todo` normal to-do tasks without a specified time. "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "* `deadline` a task that needs to be done by a specified time. "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "* `event` a task that will take place at a specified time. "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "### Listing all existing tasks"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "You may ask Duke to list down all your existing tasks, both done and undone."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "### Deleting an existing task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "You may delete an existing task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "### Marking a task as done"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "You may complete a task and mark it as done."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "### Assigning priority level to a task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "Duke provides you with the option to mark the priority level of a specific task. There are three levels of priority: `LOW`, `MEDIUM` and `HIGH`. A task can have zero or one priority level associated. "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "### Searching for tasks with keywords"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "You may search for all the tasks containing certain keywords."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "### Bidding farewell to Duke"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "You may quit the application by simply typing `bye` or closing the window using your cursor."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "### `todo` - add a to-do task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "Command: `todo [task description]`  "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "Example: `todo go to school`  "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "```"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "[T][x] go to school"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "Now you have [number of tasks] tasks in the list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "```"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "### `deadline` - add a deadline task"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "Command: `deadline [task description] /by [dd/mm/yyyy hhmm]`  "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "Example: `deadline essay /by 20/09/2019 2359`  "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "```"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "[D][x] essay (by: Fri, 20 Sep 2019 23:59:00 SGT)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "Now you have [number of tasks] tasks in the list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "```"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "### `event` - add an event task"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "Command: `event [task description] /at [dd/mm/yyyy hhmm]`  "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "Example: `event birthday celebration /at 15/08/2020 0001`  "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "```"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "[E][x] birthday celebration (at: Sat, 15 Aug 2020 00:01:00 SGT)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "Now you have [number of tasks] tasks in the list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "```"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "### `list` - list down all existing tasks"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "This will show all the tasks with their index, task type, status (done/undone), task description, time (if any), priority level (if any).  "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "Command: `list`  "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "Expected outcome (example):"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "```"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "1.[T][x] go to school"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "2.[D][x] essay (by: Fri, 20 Sep 2019 23:59:00 SGT) [Priority: HIGH]"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "3.[E][x] birthday celebration (at: Sat, 15 Aug 2020 00:01:00 SGT)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "```"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "### `delete` - delete an existing task"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "Command: `delete [index of the task]`  "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "Example: `delete 5`  "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "```"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "[E][x] skype meeting (at: Wed, 25 Sep 2019 13:00:00 SGT)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "Now you have [number of tasks] tasks in the list."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "```"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "### `done` - mark a task as done"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "Command: `done [index of the task]`  "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "Example: `done 3`  "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "```"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "[E][tick] birthday celebration (at: Sat, 15 Aug 2020 00:01:00 SGT)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "```"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "### `priority` - assign a priority level to a task"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "You may assign a priority level to a task or change an existing priority level.  "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "Command: `priority [index of the task] [priority level]`  "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "Example: `priority 2 high`  "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "```"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "The following task has been set to Priority HIGH"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "2. [D][x] essay (by: Fri, 20 Sep 2019 23:59:00 SGT) [Priority: HIGH]"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "```"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "### `find` - find tasks by keywords"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "Command: `find [keywords or phrases]`  "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "Example: `find group project`  "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "```"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "5.[T][x] project meeting [Priority: MEDIUM]"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "6.[T][tick] skype meeting"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "```"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "### `bye` - close the application"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "Command: `bye`  "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "Expected outcome:  "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "```"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "```"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "Then the application will automatically close after 1 second."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "## Contact "
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "If you have any queries regarding Duke, feel free to contact @LiuZechu."
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 106,
      "-": 15
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "T | false | HAHAHHA | null"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 1
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Returns a DialogBox for the user."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param text Text to be put into the dialog box."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param img Image to represent the user."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @return DialogBox for the user."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        DialogBox db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        db.setBackground(new Background(new BackgroundFill("
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                Color.gray(0.865), CornerRadii.EMPTY, Insets.EMPTY)));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Returns a DialogBox for the Duke avatar."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param text Text to be put into the dialog box."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param img Image to represent Duke."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @return DialogBox for Duke."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 82
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " * The Duke programme implements a personal task assistant to which you can give commands."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " * It helps you store and manage to to-do tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " * @author Liu Zechu"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private static Parser parser;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private static TaskList tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Returns a Duke programme whose tasks are stored in the given file path."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param filePath File path of the file where the tasks are stored."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        parser \u003d new Parser(ui);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            tasks \u003d new TaskList(storage.loadTasksFromFile());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            ui.println(\"FILE NOT FOUND\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            ui.println(e.toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        // nothing"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        new Duke(\"/Users/liuzechu/Desktop/CS2103/project_duke/duke/data/duke.txt\").run();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Kick-starts the Duke application."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                String fullCommand \u003d ui.getUserInput();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                Command c \u003d parser.parse(fullCommand);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                ui.println(\"      OOPS!!!\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        exitDuke();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Saves tasks into hard disk and exits the Duke programme."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public static void exitDuke() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        String toSave \u003d \"\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        if (tasks !\u003d null) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            toSave \u003d tasks.convertTasksToString();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            storage.writeToFile(toSave);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            System.out.println(\"FILE NOT SAVED PROPERLY\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Returns the Ui object associated with Duke."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @return Ui object associated with Duke."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public static Ui getUi() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        return ui;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Generates a response to user input."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param input The user\u0027s input."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @return Duke\u0027s response."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            Command c \u003d parser.parse(input);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            ui.println(e.getMessage());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        String toReturn \u003d Main.getBaos().toString();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        Main.getBaos().reset();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        return toReturn;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 114,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import javafx.event.EventHandler;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import javafx.stage.WindowEvent;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private Duke duke \u003d new Duke(\"duke.txt\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private static ByteArrayOutputStream baos;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private MainWindow mainWindow;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        // Redirect output of System.out.print into a stream so as to capture it as a String"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        baos \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        PrintStream ps \u003d new PrintStream(baos);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        // Tell Java to use the special stream"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        System.setOut(ps);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            stage.setOnCloseRequest(new EventHandler\u003cWindowEvent\u003e() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                public void handle(WindowEvent event) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    Duke.exitDuke();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            });"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public void stop() throws Exception {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        super.stop();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        Duke.exitDuke();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public static ByteArrayOutputStream getBaos() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        return baos;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 62
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import javafx.scene.Group;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        showGreeting();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                new Group(DialogBox.getUserDialog(input, userImage)),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                new Group(DialogBox.getDukeDialog(response, dukeImage))"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        );"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Shows user greetings from Duke."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private void showGreeting() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        String greeting \u003d \"     Hello! I\u0027m Duke!\\n\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                + \"     What can I do for you?\\n\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                new Group(DialogBox.getDukeDialog(greeting, dukeImage))"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        );"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 63
    }
  },
  {
    "path": "src/main/java/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import task.TaskType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " * Represents a command that adds a task to the task list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private TaskType taskType;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private Calendar calendar;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Creates a Command to add a new task with a date."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param taskType type of the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param message message of the task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param calendar date of the task represented in a Calendar object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public AddCommand(TaskType taskType, String message, Calendar calendar) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        this.calendar \u003d calendar;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Creates a Command to add a new task without a date."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param taskType type of the task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param message message of the task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public AddCommand(TaskType taskType, String message) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Executes this task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param tasks All the tasks that the user currently has."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param ui The Ui object associated with Duke."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param storage The Storage object associated with Duke"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            Task newTaskTodo \u003d new Task(message, TaskType.TODO);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            tasks.add(newTaskTodo);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            task \u003d newTaskTodo;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            Task newTaskDeadline \u003d new Task(message, TaskType.DEADLINE);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            newTaskDeadline.setTime(calendar);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            tasks.add(newTaskDeadline);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            task \u003d newTaskDeadline;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            Task newTaskEvent \u003d new Task(message, TaskType.EVENT);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            newTaskEvent.setTime(calendar);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            tasks.add(newTaskEvent);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            task \u003d newTaskEvent;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            task \u003d new Task(\"placeholder\", TaskType.TODO);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        ui.showAddTaskMessage();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        ui.printAddedTask(task);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        ui.println(\"     Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 83
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " * Represents a command returned by a Parser."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    protected boolean isExit \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Returns a Boolean that indicates whether this Command is an ExitCommand."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @return Whether this is an ExitCommand."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        return this.isExit;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 23
    }
  },
  {
    "path": "src/main/java/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " * Represents a command that deletes a task from the task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Executes this task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param tasks All the tasks that the user currently has."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param ui The Ui object associated with Duke."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param storage The Storage object associated with Duke"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            assert index \u003c\u003d tasks.size() : \"index out of range!\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            Task taskRemoved \u003d tasks.remove(index - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            ui.showLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            ui.println(\"     Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            ui.println(\"       \" + taskRemoved.getTypeIcon() + taskRemoved.getStatusIcon()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    + \" \" + taskRemoved);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            ui.println(\"     Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            ui.showLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            ui.println(\"OOPS!!! The item that you want to delete does not exist.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 42
    }
  },
  {
    "path": "src/main/java/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " * Represents a command that marks as done a task in the task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Executes this task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param tasks All the tasks that the user currently has."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param ui The Ui object associated with Duke."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param storage The Storage object associated with Duke"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        assert index \u003c\u003d tasks.size() : \"index out of range!\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        Task taskDone \u003d tasks.getTasks().get(index - 1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        taskDone.markAsDone();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        ui.println(\"     Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        ui.println(\"       \" + taskDone.getTypeIcon() + taskDone.getStatusIcon() + \" \" + taskDone);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 37
    }
  },
  {
    "path": "src/main/java/command/EmptyCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " * Represents a command that does nothing."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "public class EmptyCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Executes this task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param tasks All the tasks that the user currently has."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param ui The Ui object associated with Duke."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param storage The Storage object associated with Duke"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        // do nothing"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 23
    }
  },
  {
    "path": "src/main/java/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.util.Timer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.util.TimerTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " * Represents a command that exits Duke."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        super.isExit \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Executes this task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param tasks All the tasks that the user currently has."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param ui The Ui object associated with Duke."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param storage The Storage object associated with Duke"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        ui.showFarewellMessage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        Timer timer \u003d new Timer();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        timer.schedule(new ExitTask(), 1000); // 1 second"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    class ExitTask extends TimerTask {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "         * Exits the application after five seconds."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "         */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        public void run() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Returns a Boolean to indicate whether this command is an ExitCommand."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @return Whether this Command is an ExitCommand."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 54
    }
  },
  {
    "path": "src/main/java/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " * Represents a command that finds a task in the task list, which contains keywords that the user inputs."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private String textToFind;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public FindCommand(String textToFind) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        this.textToFind \u003d textToFind;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Executes this task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param tasks All the tasks that the user currently has."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param ui The Ui object associated with Duke."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param storage The Storage object associated with Duke"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public void  execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        for (Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            if (task.getDescription().contains(textToFind)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                matchingTasks.add(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        if (matchingTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            ui.showLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            ui.println(\"     I\u0027m sorry, but I can\u0027t find any matching tasks :-(\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            ui.showLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            ui.showLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            ui.println(\"     Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                Task currentTask \u003d matchingTasks.get(i);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                System.out.println(\"     \" + Integer.toString(i + 1) + \".\" + currentTask.getTypeIcon()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                        + currentTask.getStatusIcon() + \" \" + currentTask);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            ui.showLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 51
    }
  },
  {
    "path": "src/main/java/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " * Represents a command that lists all the tasks in the task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Executes this task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param tasks All the tasks that the user currently has."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param ui The Ui object associated with Duke."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param storage The Storage object associated with Duke"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        ui.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            Task currentTask \u003d tasks.getTasks().get(i);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            System.out.println(\"     \" + Integer.toString(i + 1) + \".\" + currentTask.getTypeIcon()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    + currentTask.getStatusIcon() + \" \" + currentTask);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 31
    }
  },
  {
    "path": "src/main/java/command/PriorityCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import task.Priority;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " * Represents a command that sets the priority level of a task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "public class PriorityCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private Priority priority;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public PriorityCommand(int index, Priority priority) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        this.priority \u003d priority;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Executes this task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param tasks All the tasks that the user currently has."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param ui The Ui object associated with Duke."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param storage The Storage object associated with Duke"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            Task task \u003d tasks.getTasks().get(index - 1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            task.setPriority(priority);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            ui.println(\"The following task has been set to Priority \" + priority.toString());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            ui.println(\" \" + Integer.toString(index) + \". \" + task.toString());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            ui.println(\"OOPS!!! Index out of bounds!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 39
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import exception.WrongDateFormatException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import task.Priority;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import task.TaskType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " * Processes user\u0027s input text and executes corresponding commands."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Returns a parser that parses user\u0027s input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param ui duke.Ui object that Duke has initialised"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public Parser(Ui ui) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Parses user\u0027s input and executes the corresponding commands."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param userInput text that user sends to Duke"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public Command parse(String userInput) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        // default command to be returned"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        Command command \u003d new EmptyCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        String firstWord \u003d userInput.split(\"\\\\s\")[0];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        switch (firstWord) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            command \u003d new ExitCommand();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            command \u003d new ListCommand();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                int index \u003d Integer.parseInt(userInput.split(\"\\\\s\")[1]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                command \u003d new DoneCommand(index);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                ui.println(\"     ☹ OOPS!!! The task you want to mark as done doesn\u0027t exist.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                String messageTodo \u003d userInput.split(\"todo \")[1];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                if (messageTodo.trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    throw new EmptyDescriptionException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                command \u003d new AddCommand(TaskType.TODO, messageTodo);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException | EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                ui.println(\"     ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                String[] deadlineMessageAndTime \u003d userInput.split(\"deadline \")[1].split(\" /by \");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                String messageDeadline \u003d deadlineMessageAndTime[0];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                if (messageDeadline.trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    throw new EmptyDescriptionException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                if (!userInput.split(\"deadline \")[1].contains(\" /by \")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    throw new DukeException(\"A deadline requires the \u0027/by\u0027 keyword.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                Calendar deadlineCalendar \u003d convertStringToCalendar(deadlineMessageAndTime[1]);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                command \u003d new AddCommand(TaskType.DEADLINE, messageDeadline, deadlineCalendar);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException | EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                ui.println(\"     ☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            } catch (WrongDateFormatException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                ui.println(\"     ☹ OOPS!!! The date format must be dd/mm/yyyy hhmm.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                ui.println(\"     ☹ OOPS!!! \"  + e);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                String[] eventMessageAndTime \u003d userInput.split(\"event \")[1].split(\" /at \");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                String messageEvent \u003d eventMessageAndTime[0];"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                if (messageEvent.trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    throw new EmptyDescriptionException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                if (!userInput.split(\"event \")[1].contains(\" /at \")) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    throw new DukeException(\"An event requires the \u0027/at\u0027 keyword.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                Calendar eventCalendar \u003d convertStringToCalendar(eventMessageAndTime[1]);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                command \u003d new AddCommand(TaskType.EVENT, messageEvent, eventCalendar);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException | EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                ui.println(\"     ☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            } catch (WrongDateFormatException e) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                ui.println(\"     ☹ OOPS!!! The date format must be dd/mm/yyyy hhmm.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                ui.println(\"     ☹ OOPS!!! \" + e);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                int index \u003d Integer.parseInt(userInput.split(\"\\\\s\")[1]);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                command \u003d new DeleteCommand(index);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                ui.println(\"     ☹ OOPS!!! The task you want to delete doesn\u0027t exist.\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                String textToFind \u003d userInput.split(\"find \")[1].trim();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                if (textToFind.trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    throw new EmptyDescriptionException(\"The description cannot be empty.\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                command \u003d new FindCommand(textToFind);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException | EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                ui.println(\"     ☹ OOPS!!! The description cannot be empty.\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        case \"priority\":"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                String indexString \u003d userInput.split(\"\\\\s\")[1];"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                String priorityString \u003d userInput.split(\"\\\\s\")[2];"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                int index \u003d Integer.parseInt(indexString);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                Priority priority \u003d Priority.parsePriority(priorityString);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                command \u003d new PriorityCommand(index, priority);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                ui.println(\"     ☹ OOPS!!!\" + e.toString());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                ui.println(\"     ☹ OOPS!!! The format must be: priority [task index] [high/medium/low]\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                ui.println(\"     ☹ OOPS!!! \" + e);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Converts a date string in the format of dd/mm/yyyy hhmm into a \u003ccode\u003eCalendar\u003c/code\u003e object."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param dateString String in the format of dd/mm/yyyy hhmm"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @return Calendar that represents the given date"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private static Calendar convertStringToCalendar(String dateString) throws WrongDateFormatException {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            String[] dateAndTime \u003d dateString.split(\"\\\\s\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            String date \u003d dateAndTime[0];"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            String time \u003d dateAndTime[1];"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            assert time !\u003d null : \"no time entered!\";"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            int hour \u003d Integer.parseInt(time) / 100;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            int minute \u003d Integer.parseInt(time) % 100;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            String[] dateComponents \u003d date.split(\"/\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            int day \u003d Integer.parseInt(dateComponents[0]);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            int month \u003d Integer.parseInt(dateComponents[1]);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            int year \u003d Integer.parseInt(dateComponents[2]);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            Calendar calendar \u003d new Calendar.Builder().setDate(year, month - 1, day)"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    .setTimeOfDay(hour, minute, 0).build();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            return calendar;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            throw new WrongDateFormatException(\"Wrong date format!\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 204
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import task.Priority;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import task.TaskType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " * Deals with storage related functionality, such as writing to a file or loading tasks from a file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Writes a string to the file path of this duke.Storage object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param textToAdd String that the user wants to write to a file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @throws IOException When no such file is available."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public void writeToFile(String... textToAdd) throws IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        fw.write(textToAdd[0]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Loads strings from a text file and parse them into an ArrayList of Tasks."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @return ArrayList of Tasks stored in the file"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @throws FileNotFoundException When no such file is available."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public ArrayList\u003cTask\u003e loadTasksFromFile() throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        // create a new file if it does not already exist"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        File f \u003d new File(filePath); // create a File for the given file path"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        Scanner scanner \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            String keyword \u003d scanner.next();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            switch (keyword) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                String[] todoLine \u003d scanner.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                boolean isDoneTodo \u003d Boolean.parseBoolean(todoLine[1]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                String todoDescription \u003d todoLine[2];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                Task todoTask \u003d new Task(todoDescription, TaskType.TODO);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                if (isDoneTodo) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    todoTask.markAsDone();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                Priority todoPriority \u003d Priority.parsePriority(todoLine[3]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                todoTask.setPriority(todoPriority);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                result.add(todoTask);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                String[] deadlineLine \u003d scanner.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                boolean isDoneDeadline \u003d Boolean.parseBoolean(deadlineLine[1]);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                String deadlineDescription \u003d deadlineLine[2];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                String deadlineTime \u003d deadlineLine[3];"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                Task deadlineTask \u003d new Task(deadlineDescription, TaskType.DEADLINE);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                Calendar deadlineCalendar \u003d new Calendar.Builder().setInstant(Long.parseLong(deadlineTime)).build();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                deadlineTask.setTime(deadlineCalendar);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                if (isDoneDeadline) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    deadlineTask.markAsDone();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                Priority deadlinePriority \u003d Priority.parsePriority(deadlineLine[4]);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                deadlineTask.setPriority(deadlinePriority);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                result.add(deadlineTask);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                String[] eventLine \u003d scanner.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                boolean isDoneEvent \u003d Boolean.parseBoolean(eventLine[1]);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                String eventDescription \u003d eventLine[2];"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                String eventTime \u003d eventLine[3];"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                Task eventTask \u003d new Task(eventDescription, TaskType.EVENT);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                Calendar eventCalendar \u003d new Calendar.Builder().setInstant(Long.parseLong(eventTime)).build();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                eventTask.setTime(eventCalendar);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                if (isDoneEvent) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    eventTask.markAsDone();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                Priority eventPriority \u003d Priority.parsePriority(eventLine[4]);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                eventTask.setPriority(eventPriority);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                result.add(eventTask);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 110
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " * Deals with user interaction for Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public static final String LINE \u003d \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Greets the user with default text."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        String greeting \u003d \"     Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                        + \"     What can I do for you?\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        System.out.println(greeting);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Shows a horizontal line."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        // do nothing"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        // System.out.print(LINE);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Shows the message preceding a task that has just been added."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public void showAddTaskMessage() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        String addTaskMessage \u003d \"     Got it. I\u0027ve added this task: \";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        System.out.println(addTaskMessage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Prints the information about a task that has just been added."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param task Task that has just been added to the task list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public void printAddedTask(Task task) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        switch (task.getType()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            result +\u003d \"       [T][✗] \";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            result +\u003d \"       [D][✗] \";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            result +\u003d \"       [E][✗] \";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        result +\u003d task;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        System.out.println(result);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Prints a string to the user interface."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param string The text to be printed."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public void println(String string) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        System.out.println(string);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Shows the farewell message when the user exits Duke."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public void showFarewellMessage() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        String farewellMessage \u003d \"     Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        System.out.println(farewellMessage);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Gets user input through the console."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public String getUserInput() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        String userInput \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        return userInput;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 93
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " * Exception due to Duke\u0027s user\u0027s invalid input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    protected String message;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Returns a String representation of the Exception."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @return String representation of the Exception."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 22
    }
  },
  {
    "path": "src/main/java/exception/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " * Exception where the user does not enter anything after a command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public EmptyDescriptionException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 10
    }
  },
  {
    "path": "src/main/java/exception/WrongDateFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " * Exception where the user enters a wrong date format instead of dd/mm/yyyy hhmm."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "public class WrongDateFormatException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public WrongDateFormatException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 10
    }
  },
  {
    "path": "src/main/java/task/Priority.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "public enum Priority {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    HIGH, MEDIUM, LOW;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public static Priority parsePriority(String string) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        string \u003d string.trim().toLowerCase();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        switch (string) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        case \"high\":"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            return Priority.HIGH;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        case \"medium\":"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            return Priority.MEDIUM;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        case \"low\":"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            return Priority.LOW;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        case \"null\":"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            throw new DukeException(\"Priority value must be high, medium, or low!\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 23
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " * Represents a task that the user wants Duke to keep track of."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    protected TaskType type;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    protected Calendar time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    protected Priority priority;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Creates a new task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param type type of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public Task(String description, TaskType type) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Sets the date and the time associated with this task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param time String in the format of dd/mm/yyyy hhmm"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public void setTime(Calendar time) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Returns the task type of this task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @return task type of this task;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public TaskType getType() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Returns the description of this task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @return description of this task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Returns the time of this task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @return time of this task in String representation in milliseconds."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        return time.getTimeInMillis() + \"\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Returns the status icon of this task."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @return Status icon of this task. A tick means that the task is done and a cross otherwise."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Returns the String representation of this task\u0027s icon."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @return String representation of this task\u0027s icon."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public String getTypeIcon() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            result \u003d \"T\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            result \u003d \"D\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            result \u003d \"E\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        return \"[\" + result + \"]\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Marks this task as done."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Sets the priority level of this task."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @param priority priority level of this task."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public void setPriority(Priority priority) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        this.priority \u003d priority;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Returns the priority level of this task."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @return priority level of this task."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public Priority getPriority() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        return priority;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Returns the String representation of this task, which the user will see on the console."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @return String representation of this task."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        String timeString \u003d \"\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        if (time !\u003d null) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            SimpleDateFormat formatter \u003d new SimpleDateFormat(\"E, dd MMM yyyy HH:mm:ss z\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            timeString \u003d formatter.format(time.getTime());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        String priorityString \u003d \"\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        if (priority !\u003d null) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            priorityString \u003d \" [Priority: \" + priority.toString() + \"]\";"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            return description + priorityString;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            return description + \" (by: \" + timeString + \")\" + priorityString;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            return description + \" (at: \" + timeString + \")\" + priorityString;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            return description + priorityString;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 151
    }
  },
  {
    "path": "src/main/java/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " * Represents the list of tasks that the user has."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public Task remove(int index) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        return tasks.remove(index);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * Converts the list of tasks in this object into its String representation so as to be stored in a text file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     * @return String representation of this list of tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public String convertTasksToString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        if (tasks \u003d\u003d null) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        StringBuilder result \u003d new StringBuilder(\"\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            TaskType type \u003d task.getType();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            switch (type) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                result.append(\"T | \");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                result.append(task.isDone);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                result.append(\" | \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                result.append(task.getDescription());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                result.append(\"D | \");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                result.append(task.isDone);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                result.append(\" | \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                result.append(task.getDescription());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                result.append(\" | \");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                result.append(task.getTime());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                result.append(\"E | \");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                result.append(task.isDone);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                result.append(\" | \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                result.append(task.getDescription());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                result.append(\" | \");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                result.append(task.getTime());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            // add priority level"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            result.append(\" | \");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            result.append(task.getPriority() \u003d\u003d null ? \"null\" : task.getPriority().toString());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            result.append(\"\\n\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        return result.toString();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 84
    }
  },
  {
    "path": "src/main/java/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " * Represents different types of tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    TODO, DEADLINE, EVENT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 8
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "\u003cAnchorPane fx:id\u003d\"mainWindow\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 19
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    void parse() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 8
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import task.TaskType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    void convertTasksToString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        tasks.add(new Task(\"go to school\", TaskType.TODO));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        TaskList taskList \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        assertEquals(\"T | false | go to school | null\\n\", taskList.convertTasksToString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 20
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import task.TaskType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "class TaskTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    void getType() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        Task task \u003d new Task(\"return book\", TaskType.TODO);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        assertEquals(TaskType.TODO, task.getType());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    void getDescription() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        Task task \u003d new Task(\"description\", TaskType.TODO);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        assertEquals(\"description\", task.getDescription());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    void getStatusIcon() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        Task task \u003d new Task(\"task\", TaskType.TODO);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        assertEquals(\"[\\u2718]\", task.getStatusIcon());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    void getTypeIcon() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        Task task \u003d new Task(\"task\", TaskType.TODO);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        assertEquals(\"[T]\", task.getTypeIcon());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 32
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 8
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 1
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 34
    }
  }
]
