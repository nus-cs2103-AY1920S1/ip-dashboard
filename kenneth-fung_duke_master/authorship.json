[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "\tid \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "test {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "run {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kenneth-fung": 33,
      "-": 14
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.view.MainWindow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import java.util.Timer;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import java.util.TimerTask;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " * Duke is a personal assistant that helps manage tasks in a list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    private static final String FILEPATH \u003d \"\\\\data\\\\duke.txt\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    private boolean isExiting \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Starts a new Duke session, loading any existing tasks from previous sessions from the hard disk."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        storage \u003d new Storage(FILEPATH);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Takes a command by the user, parses and executes it, then returns a text response."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param fullCommand The user\u0027s input as a String."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @return A String representing Duke\u0027s response."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public String getResponse(String fullCommand) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            Command c \u003d Parser.parseCommand(fullCommand);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            isExiting \u003d c.isExit();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            if (isExiting) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                exitDuke();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            return c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Waits 3 seconds, then exits the app."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    private void exitDuke() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        new Timer().schedule(new TimerTask() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            public void run() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                Platform.exit();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                System.exit(0);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        }, 2000);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Gets the value of isExiting."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @return True if isExiting is true. False otherwise."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public boolean getIsExiting() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        return isExiting;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Gets the UI object being used."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @return Ui object."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public Ui getUi() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        return ui;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kenneth-fung": 82,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " * A custom Duke exception to handle errors specific to Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Instantiates a custom Duke exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param error The exception\u0027s error message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public DukeException(String error) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kenneth-fung": 14
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Main method; launches start method in Duke class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param args Command-line arguments."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kenneth-fung": 16
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.view.MainWindow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            AnchorPane anchorPane \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            Scene scene \u003d new Scene(anchorPane);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            stage.setResizable(false);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kenneth-fung": 33
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.command.CommandFind;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.command.CommandList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.command.CommandMark;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.command.CommandDelete;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.command.CommandAdd;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.command.CommandExit;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " * Deals with making sense of user input."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Parses user input into a Command object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param fullCommand The full user input."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @return A Command object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @throws DukeException If the user input is an invalid or unknown command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public static Command parseCommand(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        String[] commandWords \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        switch (commandWords[0]) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            return new CommandList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                return new CommandMark(Integer.parseInt(commandWords[1]));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                throw new DukeException(\"Invalid task number.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                return new CommandDelete(Integer.parseInt(commandWords[1]));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                throw new DukeException(\"Invalid task number.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                String taskType \u003d fullCommand.split(\" \")[0];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                String taskDescription \u003d fullCommand.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                return new CommandAdd(taskType, taskDescription);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                throw new DukeException(\"To add tasks, please use the format: type description\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                        + \"e.g. todo read book\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                );"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                String query \u003d fullCommand.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                return new CommandFind(query);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                throw new DukeException(\"Invalid search term.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            return new CommandExit();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            String unknownCommand \u003d commandWords[0].length() \u003e 20"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    ? commandWords[0].substring(0, 20) + \"...\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    : commandWords[0];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, I don\u0027t know what \u0027\" + unknownCommand + \"\u0027 means :(\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Parses a given date and time into a LocalDateTime object."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param dateTime A date and time string in the format: dd/MM/yyyy, hh:mmPM"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @return A LocalDateTime object representing the given date and time."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @throws DukeException If the date and time are provided do not match the required format."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public static LocalDateTime parseDateTimeString(String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        // ensure that dateTime string is in the format: \"12/02/2019, 6:05pm\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            // get day of month, month, and year"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            String[] dateArray \u003d dateTime.split(\", \")[0].split(\"/\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            int dayOfMonth \u003d Integer.parseInt(dateArray[0]);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            int month \u003d Integer.parseInt(dateArray[1]);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            int year \u003d Integer.parseInt(dateArray[2]);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            // get minute and hour"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            String time \u003d dateTime.split(\", \")[1];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            int minute \u003d Integer.parseInt(time.split(\":\")[1].substring(0, 2));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            int hour \u003d Integer.parseInt(time.split(\":\")[0]);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            // check if given hour is valid"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            if (hour \u003c\u003d 0) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                throw new DukeException(\"Hour cannot be less than or equal to 0\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            // convert hour to 24-hour format (0 - 23) based on given AM/PM"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            boolean isPastNoon \u003d time.substring(time.length() - 2).equalsIgnoreCase(\"pm\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            if (isPastNoon \u0026\u0026 hour !\u003d 12) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                // convert to 24 hour format (except for 12pm)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                hour +\u003d 12;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            } else if (!isPastNoon \u0026\u0026 hour \u003d\u003d 12) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                // edge case: 12am to 12:59am"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                hour \u003d 0;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            return LocalDateTime.of(year, month, dayOfMonth, hour, minute);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            throw new DukeException(\"DateTime \\\"\" + dateTime + \"\\\" format incorrect\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kenneth-fung": 109
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Instantiates Storage to load/save tasks to the disk."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param filepath The directory which holds the file this object will load/save tasks from/to."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        this.filepath \u003d System.getProperty(\"user.dir\") + filepath;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Reads tasks from a disk file into a virtual list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @return A Task ArrayList of the tasks from the disk file."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @throws DukeException If the reading of the disk file fails."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        File file \u003d new File(filepath);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        BufferedReader reader \u003d null;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            reader \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            String line \u003d reader.readLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            while (line !\u003d null) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                Task taskToRead \u003d null;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                // get task type and description"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                String[] lineArray \u003d line.split(\" ~ \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                String taskType \u003d lineArray[0];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                String taskDescription;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    taskDescription \u003d lineArray[2];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    taskToRead \u003d new ToDo(taskDescription);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    // get description"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    taskDescription \u003d lineArray[2].split(\"by: \")[0];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    // remove space and closing bracket"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    taskDescription \u003d taskDescription.substring(0, taskDescription.length() - 2);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    // get deadline"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    String deadline \u003d lineArray[2].split(\"by: \")[1];"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    // remove closing bracket"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    deadline \u003d deadline.substring(0, deadline.length() - 1);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    // read task with deadline"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    taskToRead \u003d new Deadline(taskDescription, Parser.parseDateTimeString(deadline));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    // get description"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    taskDescription \u003d lineArray[2].split(\"at: \")[0];"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    // remove space and closing bracket"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    taskDescription \u003d taskDescription.substring(0, taskDescription.length() - 2);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    // get time"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    String time \u003d lineArray[2].split(\"at: \")[1];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    // remove closing bracket"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    time \u003d time.substring(0, time.length() - 1);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    // read task with deadline"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    taskToRead \u003d new Event(taskDescription, Parser.parseDateTimeString(time));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    throw new DukeException(\"Unknown task type detected.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                // check if the task is marked as done"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                if (lineArray[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    taskToRead.markDone();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                tasks.add(taskToRead);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                line \u003d reader.readLine();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            // close reader"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            if (reader !\u003d null) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    reader.close();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    System.err.println(e.getMessage());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Writes tasks to a disk file from the app\u0027s virtual task list."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param tasks A TaskList representing the app\u0027s virtual task list."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @throws DukeException If the writing to the disk file fails."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public void save(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        BufferedWriter writer \u003d null;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            writer \u003d new BufferedWriter(new FileWriter(filepath));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            // empty file before writing"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            FileWriter overwrite \u003d new FileWriter(filepath);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            overwrite.close();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            // write all tasks in virtual list to file"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                // task string structured as [D][+] description (by: datetime)"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                char type \u003d task.toString().toCharArray()[1];"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                char done \u003d task.toString().toCharArray()[4] \u003d\u003d \u0027+\u0027 ? \u00271\u0027 : \u00270\u0027;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                String description \u003d task.toString().split(\"] \", 2)[1];"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                // write task to file"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                writer.write(String.format(\"%s ~ %s ~ %s\", type, done, description));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                writer.newLine();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            System.err.println(e.getMessage());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            throw new DukeException(\"Failed to save task list to file.\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            // close writer"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            if (writer !\u003d null) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    writer.close();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    System.err.println(e.getMessage());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kenneth-fung": 160
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " * Contains the app\u0027s task list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Instantiates a new Task ArrayList."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Sets this object\u0027s ArrayList to an existing Task ArrayList."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param tasks An existing Task ArrayList."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Gets the size of the TaskList."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @return The size of the TaskList as an int."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Gets a Task from the TaskList by its position in the list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param taskNumber The Task\u0027s position in the list (1-indexed)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @return The Task at the given position."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public Task get(int taskNumber) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        return tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Adds a Task to the end of the TaskList."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param task The Task to be added to the TaskList."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @return True if the Task is successfully added. False otherwise."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public boolean add(Task task) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        return tasks.add(task);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Removes a Task at the given position from the TaskList."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param taskNumber The position (1-indexed) of the Task to be removed."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @return The Task that has been removed from the TaskList."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public Task remove(int taskNumber) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        return tasks.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kenneth-fung": 62
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " * Deals with interactions with the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Gets a String of all the tasks in a given TaskList."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param tasks The TaskList containing the tasks to be printed."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @return A String of all given tasks, with each task on one row."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    private String getTasksString(TaskList tasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        StringBuilder tasksString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            tasksString.append(String.format(\"%d.%s\", i, tasks.get(i)));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            if (i !\u003d tasks.size()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                tasksString.append(\"\\n\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        return tasksString.toString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Gets the welcome message to be displayed when the app starts."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @return The welcome message as a String."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public static String getWelcomeMessage() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        return \"Hello! I\u0027m Duke. What can I do for you?\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Gets information about how the user should format datetime inputs."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @return The datetime format information as a String."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public static String getDatetimeFormatMessage() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        return \"To input dates and times for deadlines and events, \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                + \"please use the format: 29/03/2019, 6:05pm\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Gets the app\u0027s exit message."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @return The exit message as a String."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public static String getExitMessage() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        return \"Bye! Hope to see you again soon :)\\nExiting...\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Prints each Task in the given TaskList, if any."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param tasks The TaskList containing the tasks to print."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public String getTaskList(TaskList tasks) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            return \"There are no tasks in your list right now.\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            return \"Here are the task(s) in your list:\" + getTasksString(tasks);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Prints the confirmation message for marking a Task as done."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param task The Task marked as done."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public String getTaskMarkedDoneMessage(Task task) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\\n  \" + task;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Prints the confirmation message for deleting a Task from the TaskList."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param tasks The TaskList, containing the remaining tasks."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param task The deleted Task."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public String getTaskDeletedMessage(TaskList tasks, Task task) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                \"Noted. I\u0027ve removed this task:\\n  %s\\nNow you have %d task(s) in the list.\","
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                task, tasks.size()"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        );"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Prints the confirmation message for adding a new Task to the TaskList."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param tasks The TaskList, containing all tasks including the newly added Task."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param task The newly added Task."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public String getTaskAddedMessage(TaskList tasks, Task task) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                \"Got it. I\u0027ve added this task:\\n  %s\\nNow you have %d task(s) in the list.\","
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                task, tasks.size()"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        );"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Prints the results of a user search query."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param results A TaskList of results matching the user\u0027s query."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public String getSearchResults(TaskList results) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        if (results.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            return \"No matching tasks found in your list.\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            return \"Here are the matching tasks in your list:\\n\" + getTasksString(results);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kenneth-fung": 106
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " * An abstract Command to be overridden by more specific Command types."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Executes the command in a manner specific to the type of command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * This method is abstract and should be overridden in child classes."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param tasks The TaskList containing the user\u0027s added Tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param ui The UI to interact with the user by printing instructions/messages."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param storage Storage to use for loading/saving tasks from/to a file on the hard disk."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @return Duke\u0027s response to the Command as a String."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @throws DukeException If the execution of the command fails."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Checks whether the command is the command to exit the app."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @return True if the command is the exit command. False otherwise."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kenneth-fung": 31
    }
  },
  {
    "path": "src/main/java/duke/command/CommandAdd.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " * A Command to add a task to the task list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "public class CommandAdd extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    private String taskDescription;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Instantiates a new \u0027Add\u0027 Command with a given task type and description."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param taskType The type of Task to add."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param taskDescription The description of the Task to add."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public CommandAdd(String taskType, String taskDescription) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Creates a new Task, adds it to the TaskList, saves it to disk, and prints a confirmation."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param tasks The TaskList containing the user\u0027s added Tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param ui The UI to interact with the user by printing instructions/messages."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param storage Storage to use for loading/saving tasks from/to a file on the hard disk."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @return Duke\u0027s response to the Command as a String."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @throws DukeException If task creation, adding, or saving fails."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        Task newTask \u003d null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        // create new task of specified type"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            newTask \u003d new ToDo(taskDescription);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            String[] descriptionAndDeadline \u003d taskDescription.split(\" /by \", 2);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            if (descriptionAndDeadline.length !\u003d 2) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                throw new DukeException(\"Deadline format incorrect, should be \""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                        + \"e.g. deadline description /by time\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            newTask \u003d new Deadline("
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    descriptionAndDeadline[0],"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    Parser.parseDateTimeString(descriptionAndDeadline[1])"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            );"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            String[] descriptionAndTime \u003d taskDescription.split(\" /at \", 2);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            if (descriptionAndTime.length !\u003d 2) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                throw new DukeException(\"Event format incorrect, should be \""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                        + \"e.g. event description /at time\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            newTask \u003d new Event("
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    descriptionAndTime[0],"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    Parser.parseDateTimeString(descriptionAndTime[1])"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            );"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            throw new DukeException(\"Unknown task type.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        return ui.getTaskAddedMessage(tasks, newTask);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kenneth-fung": 79
    }
  },
  {
    "path": "src/main/java/duke/command/CommandDelete.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " * A Command to delete a task from the task list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "public class CommandDelete extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Instantiates a new \u0027Delete\u0027 Command with a given task number."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param taskNumber The position (1-indexed) of the Task to delete from the TaskList."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public CommandDelete(int taskNumber) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Deletes a Task from the TaskList, saves the change to disk, and prints a confirmation."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param tasks The TaskList containing the user\u0027s added Tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param ui The UI to interact with the user by printing instructions/messages."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param storage Storage to use for loading/saving tasks from/to a file on the hard disk."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @return Duke\u0027s response to the Command as a String."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @throws DukeException If task deletion or file saving on disk fails."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        Task taskToDelete;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            taskToDelete \u003d tasks.remove(taskNumber);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            throw new DukeException(\"Invalid task number.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        return ui.getTaskDeletedMessage(tasks, taskToDelete);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kenneth-fung": 44
    }
  },
  {
    "path": "src/main/java/duke/command/CommandExit.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " * A Command to exit the app."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "public class CommandExit extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Prints the exit message through the UI."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param tasks The TaskList containing the user\u0027s added Tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param ui The UI to interact with the user by printing instructions/messages."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param storage Storage to use for loading/saving tasks from/to a file on the hard disk."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @return Duke\u0027s response to the Command as a String."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        return Ui.getExitMessage();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Returns true to break the app\u0027s main loop and exit."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @return True (boolean)."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kenneth-fung": 31
    }
  },
  {
    "path": "src/main/java/duke/command/CommandFind.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " * A Command to search the TaskList with a specific query."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "public class CommandFind extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    private TaskList results;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    private String query;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Instantiates a new \u0027Find\u0027 Command with a given query."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param query The user\u0027s search query as a String."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public CommandFind(String query) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        this.results \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        this.query \u003d query;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Searches the TaskList with the user\u0027s query and prints the results."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param tasks The TaskList containing the user\u0027s added Tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param ui The UI to interact with the user by printing instructions/messages."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param storage Storage to use for loading/saving tasks from/to a file on the hard disk."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @return Duke\u0027s response to the Command as a String."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @throws DukeException If the search fails (error in search method)."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                if (task.toString().contains(query)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    results.add(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            throw new DukeException(\"Search of task list failed.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        return ui.getSearchResults(results);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kenneth-fung": 48
    }
  },
  {
    "path": "src/main/java/duke/command/CommandList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " * A Command to list all tasks in the task list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "public class CommandList extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Prints all the entire TaskList through the UI."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param tasks The TaskList containing the user\u0027s added Tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param ui The UI to interact with the user by printing instructions/messages."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param storage Storage to use for loading/saving tasks from/to a file on the hard disk."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @return Duke\u0027s response to the Command as a String."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        return ui.getTaskList(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kenneth-fung": 21
    }
  },
  {
    "path": "src/main/java/duke/command/CommandMark.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " * A Command to mark as task as done."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "public class CommandMark extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Instantiates a new \u0027Mark\u0027 Command with a given task number."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param taskNumber The position (1-indexed) of the Task to mark as done in the TaskList."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public CommandMark(int taskNumber) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Marks a specific Task in the TaskList as done, saves the change to disk, and prints a confirmation."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param tasks The TaskList containing the user\u0027s added Tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param ui The UI to interact with the user by printing instructions/messages."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param storage Storage to use for loading/saving tasks from/to a file on the hard disk."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @return Duke\u0027s response to the Command as a String."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @throws DukeException If marking as done or file saving to disk fails."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        Task taskToMark;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            taskToMark \u003d tasks.get(taskNumber);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            taskToMark.markDone();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            throw new DukeException(\"Invalid task number.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        return ui.getTaskMarkedDoneMessage(taskToMark);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kenneth-fung": 46
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " * A Task with a specific end date/time."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    private LocalDateTime deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Instantiates a new Deadline Task with a given description and deadline."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param description The task\u0027s description as a String."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param deadline The task\u0027s deadline as a LocalDateTime object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public Deadline(String description, LocalDateTime deadline) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Returns the task\u0027s type, done status, description and deadline as a String."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @return A String in the format: [D][+] task_description (by: dd/MM/yyyy, hh:mmPM)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy, h:mma\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                \"[D][%s] %s (by: %s)\","
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                isDone ? \"+\" : \" \","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                description,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                deadline.format(dateTimeFormatter)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        );"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kenneth-fung": 36
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " * A Task with specific start and end dates/times."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    private LocalDateTime time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Instantiates a new Event Task with a given description and time."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param description The task\u0027s description as a String."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param time The task\u0027s time as a LocalDateTime object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public Event(String description, LocalDateTime time) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Returns the task\u0027s type, done status, description and time as a String."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @return A String in the format: [E][+] task_description (at: dd/MM/yyyy, hh:mmPM)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy, h:mma\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                \"[E][%s] %s (at: %s)\","
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                isDone ? \"+\" : \" \","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                description,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                time.format(dateTimeFormatter)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        );"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kenneth-fung": 36
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " * An abstract Task that can be a to-do, deadline, or event task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Instantiates a new Task with a given description and false done status."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param description The task\u0027s description as a String."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Sets the task\u0027s done status to true."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Returns the task\u0027s done status and description as a String."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @return A String in the format: [+] task_description"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        String doneIcon \u003d isDone ? \"+\" : \" \";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        return String.format(\"[%s] %s\", doneIcon, description);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kenneth-fung": 35
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " * A Task with no time constraints."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Instantiates a new To-Do Task with a given description."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param description The task\u0027s description as a String."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Returns the task\u0027s type, done status and description as a String."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @return A String in the format: [T][+] task_description"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kenneth-fung": 23
    }
  },
  {
    "path": "src/main/java/duke/view/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "package duke.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import javafx.scene.paint.Paint;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s avatar"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " * and a label containing text from the speaker."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Displays a new DialogBox by setting the text and image."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param text The text that forms the speaker\u0027s dialogue."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param img The speaker\u0027s avatar."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        // set background color of messages"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        dialog.setBackground(new Background("
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                new BackgroundFill("
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                        Paint.valueOf(Color.GAINSBORO.toString()),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                        CornerRadii.EMPTY,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                        new Insets(0, 5, 0, 5)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                )"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        ));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        // clip display picture of speakers into a circle"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        displayPicture.setClip(new Circle("
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                displayPicture.getFitWidth() / 2,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                displayPicture.getFitHeight() / 2,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                displayPicture.getFitWidth() / 2"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        ));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Returns a new DialogBox for the user\u0027s input."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param text The Label representing the user\u0027s text input."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param img The ImageView representing the user\u0027s avatar."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @return A DialogBox containing the user\u0027s text input and avatar."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Returns a new DialogBox for Duke\u0027s response to user input."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param text The Label representing the text in Duke\u0027s response."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param img The ImageView representing Duke\u0027s avatar."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @return A DialogBox aligned to the left, containing Duke\u0027s text response and avatar."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        DialogBox db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Flips a dialog box such that the ImageView is on the left and the text is on the right."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kenneth-fung": 104
    }
  },
  {
    "path": "src/main/java/duke/view/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "package duke.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.jpg\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.jpg\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Initializes the main window (and prints welcome messages)."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                DialogBox.getDukeDialog(Ui.getWelcomeMessage(), dukeImage),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                DialogBox.getDukeDialog(Ui.getDatetimeFormatMessage(), dukeImage)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        );"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Sets main window\u0027s Duke object to the given Duke object."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * @param duke The Duke object to be set to."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public void setDuke(Duke duke) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        this.duke \u003d duke;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        this.ui \u003d duke.getUi();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     * Parses the user\u0027s input, executes it, and prints a response."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                DialogBox.getUserDialog(input, userImage)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        );"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        if (duke.getIsExiting()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    DialogBox.getDukeDialog(\"Exiting...\", dukeImage)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            );"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            );"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kenneth-fung": 77
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "      \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "         \u003c/padding\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"60.0\" fitWidth\u003d\"60.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "      \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "   \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "      \u003cInsets /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "   \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "kenneth-fung": 25
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.view.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "kenneth-fung": 19
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public void testParseDateTimeString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            assertEquals("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    \"2007-12-03T10:15\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "                    Parser.parseDateTimeString(\"03/12/2007, 10:15AM\").toString()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            );"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kenneth-fung": 20
    }
  },
  {
    "path": "src/test/java/duke/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public void testSize() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        assertEquals(0, new TaskList().size());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public void testAdd() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        assertEquals(true, new TaskList().add(new ToDo(\"event\")));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kenneth-fung": 17
    }
  },
  {
    "path": "src/test/java/duke/task/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "        assertEquals(\"[T][ ] thing\", new ToDo(\"thing\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kenneth-fung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kenneth-fung": 12
    }
  }
]
