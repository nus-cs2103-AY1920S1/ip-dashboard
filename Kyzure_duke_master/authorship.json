[
  {
    "path": "src/main/java/Action.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "enum Action {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    LIST, BYE, HELP, TODO, DEADLINE, EVENT, DONE, DELETE;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 3
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private LocalTime time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public Deadline(String task, String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        String[] dateTimeArr \u003d dateTime.split(\" \", 2);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if (dateTimeArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                this.date \u003d LocalDate.parse(dateTimeArr[0], DATE_FORMATTER);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                this.time \u003d null;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    this.time \u003d LocalTime.parse(dateTimeArr[0], TIME_FORMATTER);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    this.date \u003d null;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                } catch (DateTimeParseException error) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    throw new DukeException(\"Please enter a legitamate date, time or both\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                } catch (Exception error) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    throw new DukeException(\"The format entered is wrong. Use \\\u0027help\\\u0027 \""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            + \"for formatting styles\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                this.date \u003d LocalDate.parse(dateTimeArr[0], DATE_FORMATTER);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                this.time \u003d LocalTime.parse(dateTimeArr[1], TIME_FORMATTER);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            } catch (DateTimeParseException error) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                throw new DukeException(\"Please enter a legitamate date, time or both\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            } catch (Exception error) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                throw new DukeException(\"The format entered is wrong. Use \\\u0027help\\\u0027 \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        + \"for formatting styles\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if (this.date \u003d\u003d null) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return \"[D]\" + super.toString() + \" (by: \" + this.time.format(TIME_FORMATTER) + \")\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } else if (this.time \u003d\u003d null) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return \"[D]\" + super.toString() + \" (by: \" + this.date.format(DATE_FORMATTER) + \")\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return \"[D]\" + super.toString() + \" (by: \" + this.date.format(DATE_FORMATTER) "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    + \" \" + this.time.format(TIME_FORMATTER) + \")\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 51
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static void main(String[] args) throws DukeException, ClassNotFoundException, IOException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        System.out.println(\"If you need help, type \\\u0027help\\\u0027 anytime\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        TaskManager taskManager \u003d new TaskManager();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        taskManager.initializeTasks();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 9,
      "-": 9
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private LocalTime time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public Event(String task, String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        String[] dateTimeArr \u003d dateTime.split(\" \", 2);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if (dateTimeArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                this.date \u003d LocalDate.parse(dateTimeArr[0], DATE_FORMATTER);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    this.time \u003d LocalTime.parse(dateTimeArr[0], TIME_FORMATTER);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                } catch (DateTimeParseException error) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    throw new DukeException(\"Please enter a legitamate date, time or both\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                } catch (Exception error) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    throw new DukeException(\"The format entered is wrong. Use \\\u0027help\\\u0027 \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            + \"for formatting styles\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                this.date \u003d LocalDate.parse(dateTimeArr[0], DATE_FORMATTER);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                this.time \u003d LocalTime.parse(dateTimeArr[1], TIME_FORMATTER);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            } catch (DateTimeParseException error) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                throw new DukeException(\"Please enter a legitamate date, time or both\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            } catch (Exception error) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                throw new DukeException(\"The format entered is wrong. Use \\\u0027help\\\u0027 \""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        + \"for formatting styles\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if (this.date \u003d\u003d null) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return \"[E]\" + super.toString() + \" (at: \" + this.time.format(TIME_FORMATTER) + \")\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } else if (this.time \u003d\u003d null) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return \"[E]\" + super.toString() + \" (at: \" + this.date.format(DATE_FORMATTER) + \")\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return \"[E]\" + super.toString() + \" (at: \" + this.date.format(DATE_FORMATTER) "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    + \" \" + this.time.format(TIME_FORMATTER) + \")\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 49
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "class Task implements Serializable{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    protected static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    protected static final DateTimeFormatter TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HH:mm\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String TICK \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String CROSS \u003d \"\\u2717\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private String task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private boolean isCompleted;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public Task(String task) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.isCompleted \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return this.task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public boolean isCompleted() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return this.isCompleted;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void setCompleted(boolean isCompleted) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.isCompleted \u003d isCompleted;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if (this.isCompleted) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return \"[\" + TICK + \"] \" + this.task;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return \"[\" + CROSS + \"] \" + this.task;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 40
    }
  },
  {
    "path": "src/main/java/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.io.ObjectOutputStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.io.ObjectInputStream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "class TaskManager {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private PrintStream printer;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private File tasksList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public TaskManager() throws IOException, ClassNotFoundException, DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.printer \u003d new PrintStream(System.out, true, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.tasksList \u003d new File(\"TasksList.sav\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if(!tasksList.exists()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            this.list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            tasksList.createNewFile();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            serializeList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                FileInputStream fileIn \u003d new FileInputStream(\"TasksList.sav\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                ObjectInputStream in \u003d new ObjectInputStream(fileIn);       "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                Object ob \u003d in.readObject();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                if(ob instanceof ArrayList\u003c?\u003e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    this.list \u003d (ArrayList) ob;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                fileIn.close();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                in.close();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            } catch (IOException error) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                this.list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                tasksList.createNewFile();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                serializeList();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                throw new DukeException(\"Oof. Corrupted save file. \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        + \"I have rewrote the old save file with a new one. \""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        + \"Please restart me again.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void initializeTasks() throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            String[] inputArr \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            Action action \u003d getAction(inputArr[0]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            // For 1 word type Actions"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            if (inputArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                switch (action) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                case LIST :"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    printList();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                case BYE :"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                case HELP :"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    printHelp();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                default :"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    checkInputError(action);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            } else if (inputArr.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                // For 2 word type Actions (Or greater than 2 word)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                switch (action) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    case TODO :"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        todoAction(inputArr[1]);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    case DEADLINE :"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        deadlineAction(inputArr[1], action);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    case EVENT :"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        eventAction(inputArr[1], action);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    case DONE :"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        doneAction(getTask(inputArr[1]));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    case DELETE :"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        deleteAction(getTask(inputArr[1]));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    default :"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        generalError();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }      "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            // Print a empty line after every action"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void todoAction(String taskString) throws DukeException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Todo todo \u003d new Todo(taskString);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        list.add(todo);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        printTask(todo);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        serializeList();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void deadlineAction(String taskString, Action action) throws DukeException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        String[] taskArr \u003d taskString.split(\" /by \", 2);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if (taskArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            taskFormatError(action);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            Deadline deadline \u003d new Deadline(taskArr[0], taskArr[1]);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            list.add(deadline);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            printTask(deadline);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            serializeList();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void eventAction(String taskString, Action action) throws DukeException {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        String[] taskArr \u003d taskString.split(\" /at \", 2);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if (taskArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            taskFormatError(action);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            Event event \u003d new Event(taskArr[0], taskArr[1]);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            list.add(event);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            printTask(event);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            serializeList();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void doneAction(Task task) throws DukeException {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if(task.isCompleted()) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            throw new DukeException(\"Task is already completed!\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            task.setCompleted(true);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            printer.println(\"  \" + task.toString());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            serializeList();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    "
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void deleteAction(Task task) throws DukeException {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        printer.println(\"  \" + task.toString());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        list.remove(task);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        serializeList();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Task getTask(String givenTask) throws DukeException {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            Integer.parseInt(givenTask);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            throw new DukeException(\"Oof. Done requires a number behind\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Integer taskNum \u003d Integer.parseInt(givenTask);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            list.get(taskNum - 1);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            throw new DukeException(\"Oof. The given task number is not found\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return list.get(taskNum - 1);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void printTask(Task task) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        printer.println(\"  \" + task.toString());"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        System.out.println(\"Now you have \" + this.list.size() +  \" tasks in the list.\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void printList() {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if(this.list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            System.out.println(\"Your list is empty!\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            for (int i \u003d 0; i \u003c this.list.size(); i++) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                if(this.list.get(i).isCompleted()) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    printer.println((i + 1) + \". \" + this.list.get(i));"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    printer.println((i + 1) + \". \" + this.list.get(i));"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public Action getAction(String action) throws DukeException {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        switch (action) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        case \"List\" :"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        case \"list\" :"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return Action.LIST;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        case \"Bye\" :"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        case \"bye\" :"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return Action.BYE;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        case \"Help\" :"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        case \"help\" :"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return Action.HELP;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        case \"Todo\" :"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        case \"todo\" :"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return Action.TODO;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        case \"Deadline\" :"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        case \"deadline\" :"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return Action.DEADLINE;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        case \"Event\" :"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        case \"event\" :"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return Action.EVENT;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        case \"Done\" :"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        case \"done\" :"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return Action.DONE;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        case \"Delete\" :"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        case \"delete\" :"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return Action.DELETE;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        default :"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            generalError();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void checkInputError(Action action) throws DukeException {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        switch (action) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        case TODO :"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            throw new DukeException(\"Oof. The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        case DEADLINE :"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            throw new DukeException(\"Oof. The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        case EVENT :"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            throw new DukeException(\"Oof. The description of a event cannot be empty.\"); "
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        case DONE :"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            throw new DukeException(\"Oof. The description of a done cannot be empty.\");"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        case DELETE :"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            throw new DukeException(\"Oof. The description of a delete cannot be empty.\");"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        default :"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            throw new DukeException(\"Oof. I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void taskFormatError(Action action) throws DukeException {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        switch (action) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        case DEADLINE :"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            throw new DukeException(\"Oof. There seems to be an error with your deadline format. \""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    + \"Here\u0027s an example: \\\u0027deadline Handup Quiz /by 17/05/2019 14:05\\\u0027\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        case EVENT :"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            throw new DukeException(\"Oof. There seems to be an eror with your event format\" "
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    + \"Here\u0027s an example: \\\u0027event Go to class /at 17/05/2019 14:05\\\u0027\");"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        default :"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            throw new DukeException(\"Oof. I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void generalError() throws DukeException {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        throw new DukeException(\"Oof. I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void serializeList() throws DukeException {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            FileOutputStream fileOut \u003d new FileOutputStream(\"TasksList.sav\");"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            ObjectOutputStream out \u003d  new ObjectOutputStream(fileOut);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            out.writeObject(this.list);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            out.close();"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            fileOut.close();"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } catch (IOException error) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            throw new DukeException(\"Oof. Unable to serialize the list to TasksList.sav. Error: \" "
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    + error.getMessage());"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void printHelp() {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        System.out.println(\"Hello this is Duke\u0027s Task Manager help page.\");"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        System.out.println(\"There are 7 main features excluding help\");"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        System.out.println(\"Type in the number respective to what you want to know. \");"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        System.out.println(\"Otherwise, type in any other thing to return.\");"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        System.out.println(\"1. list 2. todo 3. deadline 4. event 5. done 6. delete 7. bye\");"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        while(scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            switch(scanner.nextLine()) {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                case \"1\" :"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    System.out.println(\"Type \\\u0027list\\\u0027 to print your current tasks.\");"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                case \"2\" :"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    System.out.println(\"Type \\\u0027todo myTask\\\u0027 to keep track of a to-do.\");"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                case \"3\" :"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    System.out.println(\"Type \\\u0027deadline myTask /by myDate\\\u0027 to record a deadline.\");"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    System.out.println(\"Format of myDate can be either in date or time or both: \");"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    System.out.println(\"DD/MM/YYYY HH:mm\");"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    System.out.println(\"DD/MM/YYYY\");"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    System.out.println(\"hh:mm\");"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                case \"4\" :"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    System.out.println(\"Type \\\u0027event myTask /at myDate\\\u0027 to record an event.\");"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    System.out.println(\"Format of myDate can be either in date or time or both: \");"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    System.out.println(\"DD/MM/YYYY HH:mm\");"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    System.out.println(\"DD/MM/YYYY\");"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    System.out.println(\"hh:mm\");"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                case \"5\" :"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    System.out.println(\"Type \\\u0027done number\\\u0027 to complete the task of the number.\");"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    System.out.println(\"If unsure of the task\u0027s number, use \\\u0027list\\\u0027 to check first.\");"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                case \"6\" :"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    System.out.println(\"Type \\\u0027delete number\\\u0027 to remove the task of the number.\");"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    System.out.println(\"If unsure of the task\u0027s number, use \\\u0027list\\\u0027 to check first.\");"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                case \"7\" :"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    System.out.println(\"Exits, what more?\");"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                default :"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    System.out.println(\"Returning back to main page.\");"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 311
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public Todo(String task) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public String toStore() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if(super.isCompleted()) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return \"T | 1 | \" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return \"T | 0 | \" + super.toString();     "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 18
    }
  }
]
