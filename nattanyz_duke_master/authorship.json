[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    mainClassName \u003d \u0027duke.Duke\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "test {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    archiveVersion \u003d \"0.1\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 17,
      "-": 17
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.util.UiMessage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.util.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.util.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        ui.showMessage(UiMessage.WELCOME);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            TaskList tasksFromFile \u003d storage.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            tasks \u003d tasksFromFile;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // temporary haxx"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "                c.execute(tasks, ui);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "                ui.showError(e);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        ui.showMessage(UiMessage.GOODBYE);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        Duke duke \u003d new Duke(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 51,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/command/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.util.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class AddDeadlineCommand extends AddTaskCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public AddDeadlineCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        // todo: use enum and then lambda to pass in delimiter"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        s.useDelimiter(\"/by\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        setDescription();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        setDeadlineString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        setDeadline();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public Task createTask() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return new Deadline(getDescription(), getDeadline());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 21
    }
  },
  {
    "path": "src/main/java/duke/command/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.util.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class AddEventCommand extends AddTaskCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public AddEventCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        // todo: use enum and then lambda to pass in delimiter"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        s.useDelimiter(\"/at\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        setDescription();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        setDeadlineString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        setDeadline();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public Task createTask() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return new Event(getDescription(), getDeadline());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 21
    }
  },
  {
    "path": "src/main/java/duke/command/AddTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.util.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.util.exception.ExceptionType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public abstract class AddTaskCommand implements Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    Scanner s;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private Date deadline;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private String deadlineString;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    // todo: move dateFormatter to somewhere else that makes more sense"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    AddTaskCommand(String fullCommand) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.s \u003d new Scanner(fullCommand);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        s.next(); // ignore command"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    String getDescription() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    Date getDeadline() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return this.deadline;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    void setDescription() throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            this.description \u003d this.s.next().strip();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // user input after task type is blank"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            throw new DukeException(ExceptionType.DESCRIPTION_BLANK);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    void setDeadlineString() throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            this.deadlineString \u003d this.s.next().strip();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // no deadline entered"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            throw new DukeException(ExceptionType.DEADLINE_BLANK);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    void setDeadline() throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            this.deadline \u003d this.dateFormatter.parse(this.deadlineString);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // deadline entered in wrong format"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            throw new DukeException(ExceptionType.INVALID_DATE);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    };"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    abstract Task createTask();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void execute(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        Task newTask \u003d createTask();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        // todo: use UiMessage"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        System.out.println(\"Okay! I\u0027ve added: \" + getDescription()"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            + \". Use list to see all your tasks!\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 74
    }
  },
  {
    "path": "src/main/java/duke/command/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.util.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class AddTodoCommand extends AddTaskCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public AddTodoCommand(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        s.useDelimiter(\"\\n\"); // no special delimiter required"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        setDescription();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    Date getDeadline() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public Task createTask() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return new Todo(getDescription());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 24
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.util.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " * Interface for commands, containing execute() method and isExit() boolean."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Performs command, by interacting with tasks and UI."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param ui UI to display to the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @throws DukeException Application-specific exception thrown during execution."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    void execute(TaskList tasks, Ui ui) throws DukeException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    // implementation varies for each subclass of Command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Returns boolean indicating if command entered was \"exit\", false by default."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @return boolean indicating if command entered was \"exit\"."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    default boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 28
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.util.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.util.exception.ExceptionType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.util.InputMismatchException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class DeleteCommand implements Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private Scanner s;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public DeleteCommand(String fullCommand) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.s \u003d new Scanner(fullCommand);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void execute(TaskList tasks, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // first, try to get taskId"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            s.next(); // command (delete), to be ignored"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            int taskId \u003d s.nextInt();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // if ok, delete task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            Task task \u003d tasks.getTask(taskId);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            tasks.deleteTask(task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } catch (InputMismatchException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // user input after \"done\" is not an int, or is an invalid task ID"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            throw new DukeException(ExceptionType.INVALID_ID);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // user input after \"done\" is blank"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            throw new DukeException(ExceptionType.ID_BLANK);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 38
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.util.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.util.exception.ExceptionType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.util.InputMismatchException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class DoneCommand implements Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private Scanner s;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public DoneCommand(String fullCommand) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.s \u003d new Scanner(fullCommand);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void execute(TaskList tasks, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // first, try to get taskId"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            s.next(); // command (done), to be ignored"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            int taskId \u003d s.nextInt();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // if ok, mark task as done"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            tasks.getTask(taskId).markAsDone();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } catch (InputMismatchException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // user input after \"done\" is not an int, or is an invalid task ID"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            throw new DukeException(ExceptionType.INVALID_ID);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // user input after \"done\" is blank"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            throw new DukeException(ExceptionType.ID_BLANK);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 36
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " * Exits the application."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class ExitCommand implements Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void execute(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        // do nothing"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Returns boolean indicating if command entered was \"exit\", true in this case."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @return boolean indicating if command entered was \"exit\"."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 24
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.util.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.util.exception.ExceptionType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.util.InputMismatchException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class FindCommand implements Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private Scanner s;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param fullCommand Command that was entered by the user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public FindCommand(String fullCommand) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.s \u003d new Scanner(fullCommand);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param ui UI to display to the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @throws DukeException Application-specific exception thrown during execution."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void execute(TaskList tasks, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // first, try to get keyword"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            s.next(); // command (find), to be ignored"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            String keyword \u003d s.nextLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // if ok, find and return matching tasks"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            TaskList matchingTasks \u003d tasks.findTasks(keyword);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // todo: find tasks does not return taskId of original tasks"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            if (matchingTasks.isEmpty()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "                throw new DukeException(ExceptionType.NO_MATCHING_TASKS);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "                ui.showTasks(matchingTasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } catch (InputMismatchException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // user input after \"find\" is empty"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            throw new DukeException(ExceptionType.KEYWORD_BLANK);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 48
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.util.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.util.exception.ExceptionType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class ListCommand implements Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void execute(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            ui.showError(new DukeException(ExceptionType.TASK_LIST_EMPTY));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        tasks.printList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 17
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private Date by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public Deadline(String description, Date by) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.type \u003d \"D\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 18
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private Date at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public Event(String description, Date at) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.type \u003d \"E\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 18
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public abstract class Task implements Serializable {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private Boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    String type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        // todo: add new constructor to create new task from String"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        String type \u003d \"[\" + this.type + \"] \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        String status \u003d \"[\" + this.getStatusIcon() + \"] \";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return type + status + this.description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    String getDescription() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return (isDone ? \"Y\" : \"N\"); // return Y or N"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        System.out.println(this.toString());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public enum TaskType {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        DEADLINE,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        EVENT,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        TODO"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    // todo: use TaskType enum to get type in toString() instead"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 44
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " * List of tasks in the application."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class TaskList implements Serializable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /** ArrayList containing tasks in the TaskList. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Constructs a new TaskList containing the tasks in the list provided."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param tasks ArrayList containing the tasks to be included in the new TaskList."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Constructs a new, empty TaskList."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Returns ArrayList containing the tasks in the TaskList."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @return ArrayList containing the tasks in the TaskList."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Returns true if the TaskList does not contain any tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @return True if the TaskList does not contain any tasks."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return tasks.isEmpty();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Adds a new task to the list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param task New task to be added to the list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Prints the list of tasks to the UI."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void printList() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            int i \u003d getId(task);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            String s \u003d task.toString();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            System.out.println(i + \". \" + s);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Returns the ID of the given task, in the main TaskList."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Helper function for printList() and deleteTask() methods."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param task Task whose ID is required."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @return ID of the given task."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private int getId(Task task) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        // todo: change to return ID in the main TaskList, rather than a sublist"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return tasks.indexOf(task) + 1;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Returns the task with the given ID in the main TaskList."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param taskId ID of the task."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @return Task with the given ID."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @throws IndexOutOfBoundsException Exception thrown when the given ID is not present in"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * the TaskList."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public Task getTask(int taskId) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return tasks.get(taskId - 1);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Deletes the given task from the TaskList."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param taskToDelete Task to be deleted from the TaskList."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void deleteTask(Task taskToDelete) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        // todo: change to use taskID instead of task"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        String taskDescription \u003d taskToDelete.toString();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        tasks.remove(taskToDelete);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \" + taskDescription);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + \" items in this list.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    // todo: javadoc"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public TaskList findTasks(String keyword) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        TaskList matchingTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            if (task.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "                matchingTasks.add(task);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return matchingTasks;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 109
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.type \u003d \"T\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 8
    }
  },
  {
    "path": "src/main/java/duke/util/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "//import duke.util.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    // todo: date format is not implemented correctly"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private static DateFormat dateFormat \u003d new SimpleDateFormat(\"dd/mm/YYYY HHmm\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public static Date parseDate(String date) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        Date d \u003d null;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            d \u003d dateFormat.parse(date);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // how to use ui\u0027s methods without passing Ui to this method?"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            System.out.println(\"Oops! You did not enter the date in an appropriate format.\\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "                    \"Try: DD/MM/YYYY HHmm instead.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return d;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 25
    }
  },
  {
    "path": "src/main/java/duke/util/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.util.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.util.exception.ExceptionType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        Scanner commandReader  \u003d new Scanner(fullCommand);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        String command \u003d commandReader.next();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            return new DoneCommand(fullCommand);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            return new DeleteCommand(fullCommand);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } else if (command.equals(\"find\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            return new FindCommand(fullCommand);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } else if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            return new AddTodoCommand(fullCommand);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            return new AddEventCommand(fullCommand);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            return new AddDeadlineCommand(fullCommand);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            throw new DukeException(ExceptionType.INVALID_COMMAND);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 34
    }
  },
  {
    "path": "src/main/java/duke/util/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.io.ObjectInputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.io.ObjectOutputStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private String tasksImportedMessage \u003d \"Success! Your tasks have been imported from: \";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private String tasksSavedMessage \u003d \"Success! Your tasks have been saved to: \"; // should be in Ui class?"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private String tasksNotSavedMessage \u003d \"Your task list is empty! Adios :)\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private String tasksNotFoundMessage \u003d \"Existing tasks file not found! Starting duke afresh...\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private boolean hasDirectory() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        // check if parent directory exists. if not, create it"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        File file \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        if (!file.getParentFile().exists()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private boolean hasFile() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        File file \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        // check if file exists"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // todo: replace with showMessage(UiMessage.TASKS_NOT_FOUND)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            System.out.println(tasksNotFoundMessage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public TaskList load() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        // if directory does not exist, or file does not exist, no need to load from file"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        if (!hasDirectory() || !hasFile()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            FileInputStream fis \u003d new FileInputStream(filePath);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            ObjectInputStream ois \u003d new ObjectInputStream(fis);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            tasks \u003d (TaskList) ois.readObject();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            ois.close();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            fis.close();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // todo: replace with showMessage(UiMessage.TASKS_IMPORTED)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            System.out.println(tasksImportedMessage + filePath);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // temporary haxx"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void save(TaskList tasks) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        // first, check if task list is empty. if so, do not save"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // todo: replace with showMessage(UiMessage.TASKS_NOT_SAVED)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            System.out.println(tasksNotSavedMessage);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            FileOutputStream fos \u003d new FileOutputStream(this.filePath);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            ObjectOutputStream oos \u003d new ObjectOutputStream(fos);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            oos.writeObject(tasks);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            oos.close();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            fos.close();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // todo: replace with showMessage(UiMessage.TASKS_SAVED)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // how to pass filePath to Ui?"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            System.out.println(tasksSavedMessage + this.filePath);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // temporary haxx"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 95
    }
  },
  {
    "path": "src/main/java/duke/util/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import duke.util.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private Scanner in;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Returns the command entered by the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @return Command entered by the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Displays a divider line in the UI."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        String line \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Displays the required message in the UI, given the type of message required."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param uiMessage Enum indicating type of message required to be displayed."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void showMessage(UiMessage uiMessage) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        System.out.println(uiMessage.getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Displays the required error message in the UI, given the type of exception thrown."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param exception Exception thrown by the application."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void showError(DukeException exception) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        System.out.println(exception.getMessage());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void showTasks(TaskList matchingTasks) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        matchingTasks.printList();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 50
    }
  },
  {
    "path": "src/main/java/duke/util/UiMessage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public enum UiMessage {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    // greetings"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    WELCOME(\"Hello! What can I do for you?\"),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    GOODBYE(\"Bye. Hope to see you again soon!\"),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    // storage"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    TASKS_IMPORTED(\"Success! Your tasks have been imported from: \"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    TASKS_SAVED(\"Success! Your tasks have been saved to: \"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    TASKS_NOT_SAVED(\"Your task list is empty! Adios :)\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    TASKS_NOT_FOUND(\"Existing tasks file not found! Starting duke afresh...\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    // miscellaneous"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    LINE(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private final String message;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    UiMessage(String message) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return this.message;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 24
    }
  },
  {
    "path": "src/main/java/duke/util/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package duke.util.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private ExceptionType exceptionType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public DukeException(ExceptionType exceptionType) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.exceptionType \u003d exceptionType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return this.exceptionType.getMessage();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 15
    }
  },
  {
    "path": "src/main/java/duke/util/exception/ExceptionType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package duke.util.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public enum ExceptionType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    // invalid"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    INVALID_ID(\"Oops! You entered an invalid task ID!\"),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    INVALID_COMMAND(\"Command not recognised!\"),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    INVALID_DATE(\"Oops! You did not enter the date in an appropriate format.\\n\" +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        \"Try: DD/MM/YYYY HHmm instead.\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    // blank"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    ID_BLANK(\"Oops! You did not enter a task ID!\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    DESCRIPTION_BLANK(\"Oops! You did not enter a description!\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    DEADLINE_BLANK(\"Oops! You did not enter a deadline!\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    KEYWORD_BLANK(\"Oops! You did not enter a keyword!\"),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    // nothing to return"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    NO_MATCHING_TASKS(\"There are no tasks matching your query :(\"),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    TASK_LIST_EMPTY(\"The task list is empty.\"),;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private final String message;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    ExceptionType(String message) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return this.message;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 27
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        assertEquals(2,2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 10
    }
  }
]
