[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jityong"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jityong"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jityong"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jityong"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jityong"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jityong"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jityong"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jityong"
        },
        "content": "run{"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jityong"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jityong"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jityong"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jityong"
        },
        "content": "test {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jityong"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jityong"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jityong": 27,
      "-": 15
    }
  },
  {
    "path": "list.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "     1. [D][✓] c (by: c)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": "     2. [T][✗] 1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "     3. [T][✗] 2"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": "     "
      }
    ],
    "authorContributionMap": {
      "jityong": 4
    }
  },
  {
    "path": "output.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "       [T][✗] what"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "jityong": 5
    }
  },
  {
    "path": "src/main/java/Actions.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "public enum Actions {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": "    BYE,DONE,TODO,DEADLINE,EVENT,DELETE,NONE,LIST,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jityong": 3
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "public class AddCommand extends Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public Actions action;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public AddCommand(String input, Actions action){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "        this.action \u003d action;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": "        int num;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": "        String desc;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": "        switch(action) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jityong"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jityong"
        },
        "content": "                //trim so that cannot pass with just spaces"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jityong"
        },
        "content": "                desc \u003d ui.getTodoDesc();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jityong"
        },
        "content": "                if (desc.equals(\"\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jityong"
        },
        "content": "                    Duke.print(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jityong"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jityong"
        },
        "content": "                    task \u003d new Todo(desc);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jityong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jityong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jityong"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jityong"
        },
        "content": "                num \u003d ui.getInput().indexOf(\"/by\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jityong"
        },
        "content": "                //length \u003d\u003d 1 means only has \u0027deadline\u0027, and temp[1] equal /by means no desc as well"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jityong"
        },
        "content": "                if (ui.getInputArr().length \u003d\u003d 1 || ui.getInputArr()[1].equals(\"/by\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jityong"
        },
        "content": "                    Duke.print(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jityong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jityong"
        },
        "content": "                //-1 means /by is not found"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jityong"
        },
        "content": "                else if (num \u003d\u003d -1) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jityong"
        },
        "content": "                    Duke.print(\"☹ OOPS!!! Please type /by before inputting the deadline.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jityong"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jityong"
        },
        "content": "                    desc \u003d ui.getInput().substring(9, num);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jityong"
        },
        "content": "                    //trim so that cannot pass with just spaces"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jityong"
        },
        "content": "                    String by \u003d ui.getInput().substring(num + 3).trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jityong"
        },
        "content": "                    //no input time after /by"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jityong"
        },
        "content": "                    if (by.equals(\"\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jityong"
        },
        "content": "                        Duke.print(\"☹ OOPS!!! Please input a deadline after /by\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jityong"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jityong"
        },
        "content": "                        task \u003d new Deadline(desc, by);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jityong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jityong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jityong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jityong"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jityong"
        },
        "content": "                num \u003d ui.getInput().indexOf(\"/at\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jityong"
        },
        "content": "                //length \u003d\u003d 1 means only has \u0027event\u0027, and temp[1] equal /at means no desc as well"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jityong"
        },
        "content": "                if (ui.getInputArr().length \u003d\u003d 1 || ui.getInputArr()[1].equals(\"/at\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jityong"
        },
        "content": "                    Duke.print(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jityong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jityong"
        },
        "content": "                //-1 means /at is not found"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jityong"
        },
        "content": "                else if (num \u003d\u003d -1) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jityong"
        },
        "content": "                    Duke.print(\"☹ OOPS!!! Please type /at before inputting the time.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jityong"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jityong"
        },
        "content": "                    desc \u003d ui.getInput().substring(6, num);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jityong"
        },
        "content": "                    //trim so that cannot pass with just spaces"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jityong"
        },
        "content": "                    String at \u003d ui.getInput().substring(num + 3).trim();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jityong"
        },
        "content": "                    //no input time after /at"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jityong"
        },
        "content": "                    if (at.equals(\"\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jityong"
        },
        "content": "                        Duke.print(\"☹ OOPS!!! Please input a time after /at\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jityong"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jityong"
        },
        "content": "                        task \u003d new Event(desc, at);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jityong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jityong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jityong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jityong"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jityong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jityong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jityong"
        },
        "content": "        if (task \u003d\u003d null) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jityong"
        },
        "content": "            // if task is still null do nothing"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jityong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jityong"
        },
        "content": "            tasks.addTask(task);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jityong"
        },
        "content": "           Duke.print(\"Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jityong"
        },
        "content": "                    \"       \" + task + \"\\n\" +"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jityong"
        },
        "content": "                    \"     Now you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jityong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jityong": 79
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": "    String input;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "    boolean isExit \u003d false;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public Command(String input) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": "    abstract void execute(TaskList tasks, Ui ui, Storage storage) throws Exception;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jityong"
        },
        "content": "        return this.isExit;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jityong": 14
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public String time;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public Deadline(String task, String time) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "        this.time \u003d Duke.toDateString(time);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + this.time + \")\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jityong": 12
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public DeleteCommand(String input){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": "            //no input number"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": "            if (ui.getInputArr().length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": "                throw new NumberFormatException();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jityong"
        },
        "content": "            int num \u003d Integer.parseInt(ui.getInputArr()[1]);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jityong"
        },
        "content": "            //invalid num, will index out of bounds"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jityong"
        },
        "content": "            if (num \u003e tasks.getSize()) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jityong"
        },
        "content": "                throw new NumberFormatException();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jityong"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jityong"
        },
        "content": "                Duke.print(\"Noted. I\u0027ve removed this task:\\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jityong"
        },
        "content": "                        \"     \" + tasks.getTask(num - 1) + \"\\n\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jityong"
        },
        "content": "                        \"     Now you have \" + (tasks.getSize() - 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jityong"
        },
        "content": "                tasks.deleteTask(num - 1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jityong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jityong"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jityong"
        },
        "content": "            Duke.print(\"☹ OOPS!!! Please input a valid number.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jityong"
        },
        "content": "        }    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jityong": 28
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": "import java.text.DateFormatSymbols;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": "//import javafx.application.Application;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": "//import javafx.scene.Scene;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": "//import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": "//import javafx.stage.Stage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public static String toDateString(String datetime) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jityong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jityong"
        },
        "content": "            String result \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jityong"
        },
        "content": "            String[] s \u003d datetime.split(\" \");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jityong"
        },
        "content": "            String[] date \u003d s[0].split(\"/\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jityong"
        },
        "content": "            int intDay \u003d Integer.parseInt(date[0]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jityong"
        },
        "content": "            int intMonth \u003d Integer.parseInt(date[1]);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jityong"
        },
        "content": "            int year \u003d Integer.parseInt(date[2]);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jityong"
        },
        "content": "            String day \u003d \"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jityong"
        },
        "content": "            int intTime \u003d Integer.parseInt(s[1]);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jityong"
        },
        "content": "            String time \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jityong"
        },
        "content": "            if (intDay \u003e 3) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jityong"
        },
        "content": "                day \u003d intDay + \"th\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jityong"
        },
        "content": "            } else if (intDay \u003d\u003d 1) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jityong"
        },
        "content": "                day \u003d intDay + \"st\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jityong"
        },
        "content": "            } else if (intDay \u003d\u003d 2) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jityong"
        },
        "content": "                day \u003d intDay + \"nd\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jityong"
        },
        "content": "            } else if (intDay \u003d\u003d 3) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jityong"
        },
        "content": "                day \u003d intDay + \"rd\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jityong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jityong"
        },
        "content": "            int intMinutes \u003d intTime % 100;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jityong"
        },
        "content": "            String minutes \u003d \"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jityong"
        },
        "content": "            if (intMinutes / 10 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jityong"
        },
        "content": "                minutes \u003d \"0\" + intMinutes;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jityong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jityong"
        },
        "content": "            if (intTime \u003e 1259) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jityong"
        },
        "content": "                intTime -\u003d 1200;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jityong"
        },
        "content": "                time \u003d intTime / 100 + \".\" + minutes + \"pm\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jityong"
        },
        "content": "            } else if (intTime \u003e 1159) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jityong"
        },
        "content": "                time \u003d intTime / 100 + \".\" + minutes + \"pm\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jityong"
        },
        "content": "            } else if (intTime \u003c 1159) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jityong"
        },
        "content": "                time \u003d intTime / 100 + \".\" + minutes + \"am\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jityong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jityong"
        },
        "content": "            String month \u003d new DateFormatSymbols().getMonths()[intMonth - 1];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jityong"
        },
        "content": "            result \u003d day + \" of \" + month + \" \" + year + \", \" + time;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jityong"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jityong"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jityong"
        },
        "content": "            return datetime;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jityong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public static void print(String message) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jityong"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jityong"
        },
        "content": "                \"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jityong"
        },
        "content": "                        \"     \" + message + \"\\n\" +"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jityong"
        },
        "content": "                        \"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jityong"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jityong"
        },
        "content": "    private TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jityong"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jityong"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jityong"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jityong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jityong"
        },
        "content": "            storage.load(tasks);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jityong"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jityong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jityong"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jityong"
        },
        "content": "        print(\"Hello! I am Duke\\n\" +"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jityong"
        },
        "content": "                \"     What can I do for you?\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jityong"
        },
        "content": "        this.tasks.listTasks();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jityong"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jityong"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jityong"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jityong"
        },
        "content": "                ui.setInput();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jityong"
        },
        "content": "                String input \u003d ui.getInput();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jityong"
        },
        "content": "                Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jityong"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jityong"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jityong"
        },
        "content": "                storage.save(tasks);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jityong"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jityong"
        },
        "content": "//                System.out.println(e);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jityong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jityong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public static void main(String[] args) throws Exception {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jityong"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jityong": 99,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public String time;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public Event(String task, String time){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "        this.time \u003d Duke.toDateString(time);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + this.time + \")\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jityong": 12
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public ExitCommand(String input){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": "        Duke.print(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": "        this.isExit \u003d true;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jityong": 11
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public static Command parse(String input){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "        String[] inputArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": "        Actions type;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "        Command command \u003d new WrongCommand(input);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": "        if (input.equals(\"bye\")){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": "            type \u003d Actions.BYE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": "            command \u003d new ExitCommand(input);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": "        } else if (inputArr[0].equals(\"done\")){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": "            type \u003d Actions.DONE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": "            command \u003d new UpdateCommand(input,type);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jityong"
        },
        "content": "        } else if (input.equals(\"list\")){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jityong"
        },
        "content": "            type \u003d Actions.LIST;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jityong"
        },
        "content": "            command \u003d new UpdateCommand(input,type);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jityong"
        },
        "content": "        } else if (inputArr[0].equals(\"todo\")){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jityong"
        },
        "content": "            type \u003d Actions.TODO;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jityong"
        },
        "content": "            command \u003d new AddCommand(input,type);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jityong"
        },
        "content": "        } else if (inputArr[0].equals(\"deadline\")){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jityong"
        },
        "content": "            type \u003d Actions.DEADLINE;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jityong"
        },
        "content": "            command \u003d new AddCommand(input,type);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jityong"
        },
        "content": "        } else if (inputArr[0].equals(\"event\")){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jityong"
        },
        "content": "            type \u003d Actions.EVENT;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jityong"
        },
        "content": "            command \u003d new AddCommand(input,type);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jityong"
        },
        "content": "        }else if (inputArr[0].equals(\"delete\")){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jityong"
        },
        "content": "            type \u003d Actions.DELETE;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jityong"
        },
        "content": "            command \u003d new DeleteCommand(input);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jityong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jityong"
        },
        "content": "            type \u003d Actions.NONE;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jityong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jityong"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jityong"
        },
        "content": "//method takes input, returns type of output --\u003e compare to java enums"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jityong": 36
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": "//    public String filePath;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public TaskList tasks \u003d null;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": "//    public Storage (String filePath) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": "//        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public void save(TaskList tasks) throws Exception{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": "        int size \u003d tasks.getSize();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": "        //may have to catch error if no items in list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jityong"
        },
        "content": "        StringBuilder listOfTask \u003d new StringBuilder();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jityong"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jityong"
        },
        "content": "            listOfTask.append(i+1+\". \" +tasks.getTask(i)+\"\\n\" + \"     \");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jityong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jityong"
        },
        "content": "        PrintWriter writer \u003d new PrintWriter(new FileOutputStream(\"list.txt\", false));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jityong"
        },
        "content": "        writer.print(\"     \" + listOfTask);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jityong"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jityong"
        },
        "content": "        FileOutputStream fos \u003d new FileOutputStream(\"t.tmp\", false);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jityong"
        },
        "content": "        ObjectOutputStream oos \u003d new ObjectOutputStream(fos);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jityong"
        },
        "content": "        oos.writeObject(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jityong"
        },
        "content": "        oos.close();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public void load(TaskList tasks) throws Exception{"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jityong"
        },
        "content": "        FileInputStream fis \u003d new FileInputStream(\"t.tmp\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jityong"
        },
        "content": "        ObjectInputStream ois \u003d new ObjectInputStream(fis);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jityong"
        },
        "content": "        TaskList temp \u003d new TaskList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jityong"
        },
        "content": "        temp \u003d (TaskList) ois.readObject();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jityong"
        },
        "content": "        for (Task task : temp.getTasks()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jityong"
        },
        "content": "            tasks.addTask(task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jityong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jityong"
        },
        "content": "        ois.close();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jityong": 35
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": "import java.text.DateFormatSymbols;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "    private String task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": "    private boolean status \u003d false;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public Task(String task){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": "        this.status \u003d true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jityong"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jityong"
        },
        "content": "                \"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jityong"
        },
        "content": "                \"     Nice! I\u0027ve marked this task as done:\\n\" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jityong"
        },
        "content": "                \"     \" + this + \"\\n\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jityong"
        },
        "content": "                \"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jityong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jityong"
        },
        "content": "        String logo;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jityong"
        },
        "content": "        if (this.status \u003d\u003d false) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jityong"
        },
        "content": "            logo \u003d \"✗\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jityong"
        },
        "content": "        }else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jityong"
        },
        "content": "            logo \u003d \"✓\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jityong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jityong"
        },
        "content": "        return \"[\" + logo + \"] \" + this.task;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jityong": 29
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "import javax.print.ServiceUI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "public class TaskList implements Serializable {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public void listTasks(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": "        int size \u003d this.tasks.size();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": "        StringBuilder listOfTask \u003d new StringBuilder();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jityong"
        },
        "content": "            listOfTask.append(i + 1 + \". \" + this.tasks.get(i) + \"\\n\" + \"     \");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jityong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jityong"
        },
        "content": "        Duke.print(listOfTask.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jityong"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jityong"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jityong"
        },
        "content": "        this.tasks.remove(index);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jityong"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jityong"
        },
        "content": "        return this.tasks.get(index);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jityong": 37
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "    String task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public Todo(String input) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jityong": 11
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public String input \u003d \"\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public String[] inputArr;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "    Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public void setInput(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": "        String newInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": "        this.input \u003d newInput;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": "        this.inputArr \u003d newInput.split(\" \");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public String getInput(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jityong"
        },
        "content": "        return this.input;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public String[] getInputArr(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jityong"
        },
        "content": "        return this.inputArr;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public String getTodoDesc(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jityong"
        },
        "content": "        return this.input.substring(4).trim();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jityong": 21
    }
  },
  {
    "path": "src/main/java/UpdateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "public class UpdateCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public Actions action;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public UpdateCommand(String input, Actions action) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": "        this.action \u003d action;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": "        int num;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": "        switch (action) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jityong"
        },
        "content": "            case DONE:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jityong"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jityong"
        },
        "content": "                //no input number"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jityong"
        },
        "content": "                if (ui.getInputArr().length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jityong"
        },
        "content": "                    throw new NumberFormatException();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jityong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jityong"
        },
        "content": "                num \u003d Integer.parseInt(ui.getInputArr()[1]);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jityong"
        },
        "content": "                //invalid num, will index out of bounds"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jityong"
        },
        "content": "                if (num \u003e tasks.getSize()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jityong"
        },
        "content": "                    throw new NumberFormatException();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jityong"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jityong"
        },
        "content": "                    tasks.getTask(num - 1).markAsDone();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jityong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jityong"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jityong"
        },
        "content": "                Duke.print(\"☹ OOPS!!! Please input a valid number.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jityong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jityong"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jityong"
        },
        "content": "            case LIST:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jityong"
        },
        "content": "                tasks.listTasks();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jityong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jityong"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jityong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jityong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jityong": 41
    }
  },
  {
    "path": "src/main/java/WrongCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "public class WrongCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public WrongCommand(String input) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": "        Duke.print(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jityong": 14
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": "     Hello! I am Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": "       [T][✗] borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "jityong": 9
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "todo borrow book"
      }
    ],
    "authorContributionMap": {
      "jityong": 1
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jityong"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jityong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jityong"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jityong"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jityong"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jityong"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jityong"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jityong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jityong"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jityong"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jityong"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jityong"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jityong"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jityong"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jityong"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jityong"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jityong"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jityong"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jityong"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jityong"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "jityong": 34
    }
  }
]
