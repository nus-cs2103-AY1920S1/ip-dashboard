[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MichaelaTSH": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    static ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    static String line \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        intro();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            String full \u003d sc.nextLine();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            String[] arr \u003d full.split(\" \", 2);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            String s \u003d arr[0];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                validateInput(full);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            } catch (DukeException d) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                System.out.println(format(\"â˜¹ OOPS!!! \" + d.response));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            //handles done commands using markAsDone method"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            if (s.equals(\"done\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                markAsDone(Integer.valueOf(arr[1]) - 1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            else if (s.equals(\"delete\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                delete(Integer.valueOf(arr[1]) - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            //handles tasks using the process method"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            else if (s.equals(\"todo\") || s.equals(\"deadline\") || s.equals(\"event\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                process(s, arr[1].trim());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            //prints out list"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            else if (s.toLowerCase().equals(\"list\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                System.out.println(line + \"\\n Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                    System.out.println(\" \" + i + \". \" + list.get(i - 1).toString());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                System.out.println(line);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                if (s.equals(\"bye\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                    System.out.println(format(\"Bye. Hope to see you again soon!\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public static void intro() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        list \u003d new ArrayList();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        System.out.println(format(logo + \"\\n Hello! I\u0027m Duke\\n What can I do for you?\"));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public static String format(String s) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        return line + \"\\n \" + s + \"\\n\" + line;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public static void process(String s, String des) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Task task \u003d new Task(\"null\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        if (s.equals(\"todo\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            task \u003d new ToDo(des);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        } else if (s.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            String[] arr \u003d des.split(\"/by\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            task \u003d new Deadline(arr[0].trim(), arr[1].trim());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        } else if (s.equals(\"event\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            String[] arr \u003d des.split(\"/at\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            task \u003d new Event(arr[0].trim(), arr[1].trim());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        printTask(task);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public static void printTask(Task t) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        System.out.println(format(\"Got it. I\u0027ve added this task: \\n   \" +"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                t.toString() + \"\\n Now you have \" + list.size() + \" tasks in the list.\"));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public static void markAsDone(int i) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Task t \u003d list.get(i);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        t.done();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        System.out.println(format(\"Nice! I\u0027ve marked this task as done: \\n   \" + t.toString()));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public static void delete(int i) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Task t \u003d list.get(i);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        list.remove(i);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        System.out.println(format(\"Noted. I\u0027ve removed this task: \\n   \" + t.toString() + \"\\n Now you have \" +"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                list.size() + \" tasks in the list.\"));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public static void validateInput(String input) throws DukeException {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        String[] array \u003d input.trim().split(\" \");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        String first \u003d array[0];"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        Boolean task \u003d false;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        if (first.equals(\"todo\") || first.equals(\"deadline\") || first.equals(\"event\")) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            task \u003d true;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        if (array.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            //if to do, event or deadline are missing a description"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            if (task) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                throw new DukeException(\"Empty Description\", \"The description of a \" + first + \" cannot be empty.\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            //if done or delete are not followed by a number"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            else if (first.equals(\"done\") || first.equals(\"delete\")) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                throw new DukeException(\"Missing Task\", \"Please specify a task.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            //if it is not a single-worded valid input"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            else if (!first.equals(\"bye\") \u0026\u0026 !first.equals(\"list\")) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                throw new DukeException(\"Invalid Input\", \"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            //if it is an invalid input containing multiple words"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            if (!task \u0026\u0026 !first.equals(\"done\") \u0026\u0026 !first.equals(\"delete\")) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                throw new DukeException(\"Invalid Input\", \"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            //if event or deadline do not have details"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            else if ((first.equals(\"event\") \u0026\u0026 !input.contains(\"/at\")) ||"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                    (first.equals(\"deadline\") \u0026\u0026 !input.contains(\"/by\"))) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "                throw new DukeException(\"Missing Details\", \"The details of a \" + first + \" cannot be missing.\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MichaelaTSH": 130,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    protected String response;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public DukeException(String message, String respond) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        this.response \u003d respond;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MichaelaTSH": 8
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MichaelaTSH": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public void done() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MichaelaTSH": 22
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MichaelaTSH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MichaelaTSH": 11
    }
  }
]
