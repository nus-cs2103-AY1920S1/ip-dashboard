[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    mainClassName \u003d \"duke.main.Duke\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "test {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 19,
      "-": 18
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "T | 0 | borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "D | 0 | return book | 29/08/2019 1000"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 2
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public abstract class AddCommand extends duke.command.Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 4
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.main.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.main.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public abstract void execute(TaskList tasks, UI ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 13
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.main.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class DeadlineCommand extends AddCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    Date by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public DeadlineCommand(String description, Date by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        Task deadline \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        tasks.addTask(deadline);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        ui.showAddTask(deadline, tasks.getSize());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 27
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.main.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.main.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    int taskNumber;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public DeleteCommand(int taskNumber) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        ui.showDeleteTask(tasks.deleteTask(taskNumber), tasks.getSize());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 20
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.error.NoSuchTaskError;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.main.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.main.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    int taskNumber;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public DoneCommand(int taskNumber) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) throws NoSuchTaskError {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        ui.showDoneTask(tasks.doTask(taskNumber));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 18
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.main.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class EventCommand extends AddCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    Date at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public EventCommand(String description, Date at) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        Task event \u003d new Event(description, at);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        tasks.addTask(event);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        ui.showAddTask(event, tasks.getSize());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 27
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.main.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 15
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.main.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            ui.showNoTasks();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        ui.showTaskList(tasks);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 16
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.main.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class TodoCommand extends AddCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public TodoCommand(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        Task todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        tasks.addTask(todo);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        ui.showAddTask(todo, tasks.getSize());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 23
    }
  },
  {
    "path": "src/main/java/duke/error/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package duke.error;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        super(\"\\u2639 Sorry. \" + s);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 7
    }
  },
  {
    "path": "src/main/java/duke/error/FileLoadError.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package duke.error;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class FileLoadError extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public FileLoadError() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        super(\"There was a problem loading the saved list of tasks.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 7
    }
  },
  {
    "path": "src/main/java/duke/error/IncorrectDateTimeError.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package duke.error;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class IncorrectDateTimeError extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public IncorrectDateTimeError() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        super(\"I need the date and time in dd/mm/yyyy hh:mm. For example, 26/01/2019 2103\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 7
    }
  },
  {
    "path": "src/main/java/duke/error/InsufficientArgumentError.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package duke.error;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class InsufficientArgumentError extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public InsufficientArgumentError() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        super(\"The description cannot be empty.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 7
    }
  },
  {
    "path": "src/main/java/duke/error/MissingKeywordError.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package duke.error;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class MissingKeywordError extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public enum Keyword {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        NUMBER, BY, AT;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public MissingKeywordError(Keyword keyword) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        super(\"I need the \" + getKeywordString(keyword) + \" to work.\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private static String getKeywordString(Keyword keyword) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        switch (keyword) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            case NUMBER:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                return \"number of a task\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            case BY:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                return \"keyword /by\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            case AT:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                return \"keyword /at\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                return \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 22
    }
  },
  {
    "path": "src/main/java/duke/error/NoSuchTaskError.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package duke.error;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class NoSuchTaskError extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public NoSuchTaskError() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        super(\"There is no such task.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 7
    }
  },
  {
    "path": "src/main/java/duke/error/UnknownCommandError.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package duke.error;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class UnknownCommandError extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public UnknownCommandError() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        super(\"I don\u0027t know what that means.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 7
    }
  },
  {
    "path": "src/main/java/duke/main/DateTimeParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.error.IncorrectDateTimeError;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class DateTimeParser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public DateTimeParser() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public static Date parse(String s) throws IncorrectDateTimeError {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            Date date \u003d formatter.parse(s);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            return date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            throw new IncorrectDateTimeError();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public static String format(Date d) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return formatter.format(d);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 27
    }
  },
  {
    "path": "src/main/java/duke/main/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.error.FileLoadError;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.error.IncorrectDateTimeError;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        ui \u003d new UI();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        } catch (FileLoadError | IncorrectDateTimeError e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            ui.showError(e);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                ui.showError(e);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        ui.showBye();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 43
    }
  },
  {
    "path": "src/main/java/duke/main/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.error.InsufficientArgumentError;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.error.MissingKeywordError;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.error.UnknownCommandError;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        String[] currentInputArray \u003d input.split(\"\\\\s\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        switch (currentInputArray[0]) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            if (currentInputArray.length \u003c 2) throw new MissingKeywordError(MissingKeywordError.Keyword.NUMBER);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            if (!currentInputArray[1].matches(\"-?\\\\d+\"))"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                throw new MissingKeywordError(MissingKeywordError.Keyword.NUMBER);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            int doneTaskNumber \u003d Integer.parseInt(currentInputArray[1]) - 1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            return new DoneCommand(doneTaskNumber);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            if (currentInputArray.length \u003c 2) throw new MissingKeywordError(MissingKeywordError.Keyword.NUMBER);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            if (!currentInputArray[1].matches(\"-?\\\\d+\"))"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                throw new MissingKeywordError(MissingKeywordError.Keyword.NUMBER);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            int deleteTaskNumber \u003d Integer.parseInt(currentInputArray[1]) - 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            return new DeleteCommand(deleteTaskNumber);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            if (currentInputArray.length \u003c 2) throw new InsufficientArgumentError();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            return new TodoCommand(input.substring(5));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            if (currentInputArray.length \u003c 2) throw new InsufficientArgumentError();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            if (!input.contains(\" /by \")) throw new MissingKeywordError(MissingKeywordError.Keyword.BY);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            String[] deadlineArr \u003d input.split(\" /by \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            if (deadlineArr.length \u003c 2 || deadlineArr[0].length() \u003c 10) throw new InsufficientArgumentError();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            Date deadlineDate \u003d DateTimeParser.parse(deadlineArr[1]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            return new DeadlineCommand(deadlineArr[0].substring(9), deadlineDate);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            if (currentInputArray.length \u003c 2) throw new InsufficientArgumentError();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            if (!input.contains(\" /at \")) throw new MissingKeywordError(MissingKeywordError.Keyword.AT);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            String[] eventArr \u003d input.split(\" /at \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            if (eventArr.length \u003c 2 || eventArr[0].length() \u003c 7) throw new InsufficientArgumentError();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            Date eventDate \u003d DateTimeParser.parse(eventArr[1]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            return new EventCommand(eventArr[0].substring(6), eventDate);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            throw new UnknownCommandError();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 52
    }
  },
  {
    "path": "src/main/java/duke/main/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.error.FileLoadError;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.error.IncorrectDateTimeError;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.nio.charset.Charset;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileLoadError, IncorrectDateTimeError {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            String data;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            String[] input;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            while ((data \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                input \u003d data.split(\" \\\\| \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                switch (input[0]) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                    Todo todo \u003d new Todo(input[2], input[1].equals(\"1\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                    tasks.add(todo);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                    Deadline deadline \u003d new Deadline(input[2], input[1].equals(\"1\"), DateTimeParser.parse(input[3]));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                    tasks.add(deadline);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                    Event event \u003d new Event(input[2], input[1].equals(\"1\"), DateTimeParser.parse(input[3]));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                    tasks.add(event);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                    throw new FileLoadError();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            throw new FileLoadError();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public void save(TaskList tasks) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        Path out \u003d Paths.get(filePath);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        if (Files.notExists(out)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                if(!Files.exists(out.getParent()))"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                    Files.createDirectories(out.getParent());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                Files.createFile(out);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            Files.write(out, tasks.toSaveStringList(), Charset.defaultCharset());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 73
    }
  },
  {
    "path": "src/main/java/duke/main/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.error.NoSuchTaskError;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return tasks.isEmpty();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public ArrayList\u003cString\u003e toUIStringList() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        ArrayList\u003cString\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            sb.append(i++);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            sb.append(\".\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            sb.append(t);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            result.add(sb.toString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public ArrayList\u003cString\u003e toSaveStringList() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        ArrayList\u003cString\u003e strings \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            strings.add(t.toSave());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return strings;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public Task doTask(int taskNumber) throws NoSuchTaskError {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        if (taskNumber \u003c 0 || taskNumber \u003e\u003d tasks.size()) throw new NoSuchTaskError();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        Task doneTask \u003d tasks.get(taskNumber);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        doneTask.setDone();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return doneTask;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public Task deleteTask(int taskNumber) throws NoSuchTaskError {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        if (taskNumber \u003c 0 || taskNumber \u003e\u003d tasks.size()) throw new NoSuchTaskError();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        Task deleted \u003d tasks.get(taskNumber);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        tasks.remove(taskNumber);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return deleted;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public Task addTask(Task task) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 66
    }
  },
  {
    "path": "src/main/java/duke/main/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    Scanner input;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public UI() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private void print(String s) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        System.out.print(\"    \" + s + \"\\n\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public void showError(DukeException d) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        print(d.getMessage());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        print(\"Hello! I\u0027m Duke!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        print(\"What can I do for you?\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public void showBye() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        print(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return input.nextLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public void showNoTasks() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        print(\"You have no tasks in your list.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public void showTaskList(TaskList tasks) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        print(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        for (String s : tasks.toUIStringList()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            print(s);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public void showDoneTask(Task task) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        print(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        print(task.toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public void showDeleteTask(Task task, int size) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        print(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        print(task.toString());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        print(\"Now you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public void showAddTask(Task task, int size) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        print(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        print(task.toString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        print(\"Now you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 63
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.main.DateTimeParser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    protected Date by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public Deadline(String description, Date by) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public Deadline(String description, boolean isDone, Date by) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + DateTimeParser.format(by) + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return \"D | \" + (super.isDone ? 1 : 0) + \" | \" + super.description + \" | \" + DateTimeParser.format(by);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 29
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.main.DateTimeParser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    protected Date at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public Event(String description, Date at) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public Event(String description, boolean isDone, Date at) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + DateTimeParser.format(at) + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return \"E | \" + (super.isDone ? 1 : 0) + \" | \" + super.description + \" | \" + DateTimeParser.format(at);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 28
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    abstract public String toSave();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 35
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return \"T | \" + (super.isDone ? 1 : 0) + \" | \" + super.description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 21
    }
  },
  {
    "path": "src/test/java/duke/main/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.error.InsufficientArgumentError;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.error.MissingKeywordError;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.error.UnknownCommandError;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    void parse_correctCommand_success() throws Exception {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        assertTrue(Parser.parse(\"list\") instanceof ListCommand);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        assertTrue(Parser.parse(\"done 2\") instanceof DoneCommand);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        assertTrue(Parser.parse(\"delete 2\") instanceof DeleteCommand);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        assertTrue(Parser.parse(\"todo borrow book\") instanceof TodoCommand);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        assertTrue(Parser.parse(\"deadline return book /by 01/02/2019 0123\") instanceof DeadlineCommand);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        assertTrue(Parser.parse(\"event book party /at 3/9/2019 2103\") instanceof EventCommand);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        assertTrue(Parser.parse(\"bye\") instanceof ExitCommand);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    void parse_incorrectCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            Parser.parse(\"todoo\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            assertTrue(e instanceof UnknownCommandError);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            Parser.parse(\"@@@@@@@@@@@\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            assertTrue(e instanceof UnknownCommandError);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            Parser.parse(\"todo\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            assertTrue(e instanceof InsufficientArgumentError);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            Parser.parse(\"deadline /by today or tomorrow\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            assertTrue(e instanceof InsufficientArgumentError);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            Parser.parse(\"event all the time //at today\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            assertTrue(e instanceof MissingKeywordError);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 58
    }
  },
  {
    "path": "src/test/java/duke/main/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.error.NoSuchTaskError;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    void isEmpty() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        assertTrue(new TaskList().isEmpty());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        tasks.addTask(new Todo(\"test\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        assertFalse(tasks.isEmpty());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    void getSize() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        assertEquals(0, new TaskList().getSize());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        tasks.addTask(new Todo(\"test\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        tasks.addTask(new Todo(\"test2\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        assertEquals(2, tasks.getSize());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    void doTask_taskExists_success() throws Exception {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        Task foo \u003d new Todo(\"test\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        Task bar \u003d new Todo(\"test2\", true);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        assertFalse(tasks.addTask(foo).isDone());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        assertTrue(tasks.doTask(0).isDone());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        tasks.addTask(bar);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        assertTrue(tasks.doTask(1).isDone());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    void doTask_taskDoesNotExist_exceptionThrown() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        Task foo \u003d new Todo(\"test\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        Task bar \u003d new Todo(\"test2\", true);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        tasks.addTask(foo);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            assertEquals(foo, tasks.doTask(1));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            assertTrue(e instanceof NoSuchTaskError);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        tasks.addTask(bar);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            assertTrue(tasks.doTask(1).isDone());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            assertEquals(foo, tasks.doTask(2));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            assertTrue(e instanceof NoSuchTaskError);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    void deleteTask_taskExists_success() throws Exception {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        Task foo \u003d new Todo(\"test\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        Task bar \u003d new Todo(\"test2\", true);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        tasks.addTask(foo);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        assertEquals(foo, tasks.deleteTask(0));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        tasks.addTask(bar);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        assertEquals(bar, tasks.deleteTask(0));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        assertTrue(tasks.isEmpty());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    void deleteTask_taskDoesNotExist_exceptionThrown() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        Task foo \u003d new Todo(\"test\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        Task bar \u003d new Todo(\"test2\", true);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        tasks.addTask(foo);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            assertEquals(foo, tasks.deleteTask(1));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            assertTrue(e instanceof NoSuchTaskError);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        tasks.addTask(bar);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            assertEquals(foo, tasks.doTask(2));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            assertTrue(e instanceof NoSuchTaskError);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    void addTask() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        Task foo \u003d new Todo(\"test\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        Task bar \u003d new Todo(\"test2\", true);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        assertSame(foo, tasks.addTask(foo));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        assertSame(bar, tasks.addTask(bar));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 103
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "mistake"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "event oops"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "fas"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 12
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 21
    }
  }
]
