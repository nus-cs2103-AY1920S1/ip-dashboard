[
  {
    "path": ".github/ISSUE_TEMPLATE/bug_report.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "---"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": "name: Bug report"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "about: Create a report to help us improve"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "title: \u0027\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "labels: \u0027\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "assignees: \u0027\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "---"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "**Describe the bug**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "A clear and concise description of what the bug is."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "**To Reproduce**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "Steps to reproduce the behavior:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "1. Go to \u0027...\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "2. Click on \u0027....\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "3. Scroll down to \u0027....\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "4. See error"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "**Expected behavior**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "A clear and concise description of what you expected to happen."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "**Screenshots**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "If applicable, add screenshots to help explain your problem."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "**Desktop (please complete the following information):**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": " - OS: [e.g. iOS]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": " - Browser [e.g. chrome, safari]"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": " - Version [e.g. 22]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": "**Smartphone (please complete the following information):**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": " - Device: [e.g. iPhone6]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": " - OS: [e.g. iOS8.1]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": " - Browser [e.g. stock browser, safari]"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwekke"
        },
        "content": " - Version [e.g. 22]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwekke"
        },
        "content": "**Additional context**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwekke"
        },
        "content": "Add any other context about the problem here."
      }
    ],
    "authorContributionMap": {
      "kwekke": 38
    }
  },
  {
    "path": ".github/ISSUE_TEMPLATE/feature_request.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "---"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": "name: Feature request"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "about: Suggest an idea for this project"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "title: \u0027\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "labels: \u0027\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "assignees: \u0027\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "---"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "**Is your feature request related to a problem? Please describe.**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "A clear and concise description of what the problem is. Ex. I\u0027m always frustrated when [...]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "**Describe the solution you\u0027d like**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "A clear and concise description of what you want to happen."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "**Describe alternatives you\u0027ve considered**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "A clear and concise description of any alternative solutions or features you\u0027ve considered."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "**Additional context**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "Add any other context or screenshots about the feature request here."
      }
    ],
    "authorContributionMap": {
      "kwekke": 20
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "\tid \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": "test {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kwekke"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 15,
      "kwekke": 28
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "T||1||todo1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": "D||0||deadline1||01/01/1990 2359"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "E||0||event1||02/02/2020 1800"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "T||0||averyveryveryveryveryveryveryveryveryveryveryverylongtodo"
      }
    ],
    "authorContributionMap": {
      "kwekke": 4
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "-": 83,
      "kwekke": 17
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.MainWindow;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().dukeWelcome();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 32
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": " * Represents a Command that Parser returns to the main logic in Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public abstract String execute(TaskList tasks, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 16
    }
  },
  {
    "path": "src/main/java/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import task.DeadlineTask;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": " * Represents a Command which adds a DeadlineTask to the TaskList."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Creates a DeleteCommand with a given description and time."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param time Task deadline date and time in the format of \"dd/mm/yyyy hhmm\"."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public DeadlineCommand(String description, String time) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Adds a DeadlineTask to the TaskList."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param tasks TaskList which stores the list of tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param storage Storage which saves the task into the text file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @throws DukeException DukeException that may arise from invalid inputs."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        Task task \u003d new DeadlineTask(description, time);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return (\"Got it. I\u0027ve added this task:\\n \" + task + \"\\n\" + \"Now you have \" + tasks.getSize() + \" task\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                + (tasks.getSize() \u003d\u003d 1 ? \" \" : \"s \") + \"in the list.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 43
    }
  },
  {
    "path": "src/main/java/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeInvalidTaskIndexException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": " * Represents a Command which deletes a task from the TaskList."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Creates a DeleteCommand with a given index to delete from the TaskList."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param index Task index to be deleted."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        this.index \u003d index - 1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Deletes a task from the TaskList."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param tasks TaskList which stores the list of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param storage Storage which saves the task into the text file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @throws DukeException DukeException that may arise from invalid inputs."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        if (tasks.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            throw new DukeException(\"You have no tasks to delete.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        } else if (index \u003c 0 || index \u003e\u003d tasks.getSize()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            throw new DukeInvalidTaskIndexException(\"delete\", tasks.getSize());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            Task t \u003d tasks.getTask(index);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            tasks.deleteTask(index);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            return (\"Noted. I\u0027ve removed this task:\\n\" + t + \"\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                    + \"Now you have \" + tasks.getSize() + \" task\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                    + ((tasks.getSize() - 1) \u003d\u003d 1 ? \" \" : \"s \") + \"in the list.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 47
    }
  },
  {
    "path": "src/main/java/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeInvalidTaskIndexException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": " * Represents a Command which marks a task from the TaskList as done."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Creates a DoneCommand with a given index to mark a task from the TaskList as done."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param index Task index to be marked as done."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        this.index \u003d index - 1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Marks a task from the TaskList as done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param tasks TaskList which stores the list of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param storage Storage which saves the task into the text file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @throws DukeException DukeException that may arise from invalid inputs."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        if (tasks.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            throw new DukeException(\"You have no tasks to do.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        } else if (index \u003c 0 || index \u003e\u003d tasks.getSize()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            throw new DukeInvalidTaskIndexException(\"do\", tasks.getSize());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            tasks.doneTask(index);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            return (\"Nice! I\u0027ve marked this task as done:\\n  \" + tasks.getTask(index));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 43
    }
  },
  {
    "path": "src/main/java/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import task.EventTask;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": " * Represents a Command which adds an EventTask to the TaskList."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Creates a EventCommand with a given description and time."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param time Task event date and time in the format of \"dd/mm/yyyy hhmm\"."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public EventCommand(String description, String time) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Adds a EventTask to the TaskList."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param tasks TaskList which stores the list of tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param storage Storage which saves the task into the text file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @throws DukeException DukeException that may arise from invalid inputs."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        Task task \u003d new EventTask(description, time);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return (\"Got it. I\u0027ve added this task:\\n \" + task + \"\\n\" + \"Now you have \" + tasks.getSize() + \" task\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                + (tasks.getSize() \u003d\u003d 1 ? \" \" : \"s \") + \"in the list\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 44
    }
  },
  {
    "path": "src/main/java/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": " * Represents a Command which signals the end of the program."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Prompts Ui to print a concluding message."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param tasks TaskList which stores the list of tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param storage Storage which saves the task into the text file."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "kwekke": 24
    }
  },
  {
    "path": "src/main/java/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": " * Represents a Command which prompts a printing of a list of tasks with a given keyword."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Creates a FindCommand which prompts the printing of a list of tasks with a given keyword."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param keyword a string representing the keyword to be searched within the list of tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Prompts Ui to print a list of tasks which contain a keyword."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param tasks TaskList which stores the list of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param storage Storage which saves the task into the text file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        boolean isFound \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        for (Task task : tasks.getList()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            if (task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                temp.add(task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                isFound \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        if (isFound) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            return new TaskList(temp).toString();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            return \"No task found with the \\\"\" + keyword + \"\\\" keyword.\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 47
    }
  },
  {
    "path": "src/main/java/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": " * Represents a Command which prompts a printing of the TaskList."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Prompts Ui to print the list of tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param tasks TaskList which stores the list of tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param storage Storage which saves the task into the text file."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return tasks.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 23
    }
  },
  {
    "path": "src/main/java/command/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import task.ToDoTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": " * Represents a Command which adds an ToDoTask to the TaskList."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class ToDoCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Creates a ToDoCommand with a given description."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public ToDoCommand(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Adds a ToDoTask to the TaskList."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param tasks TaskList which stores the list of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param storage Storage which saves the task into the text file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @throws DukeException DukeException that may arise from invalid inputs."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        Task task \u003d new ToDoTask(description);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n \" + task + \"\\n\" + \"Now you have \" + tasks.getSize() + \" task\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                + (tasks.getSize() \u003d\u003d 1 ? \" \" : \"s \") + \"in the list.\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 41
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import static javafx.application.Platform.exit;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        this(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Creates an instance of Duke, a task manager."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param filePath a string storing the location of the text file which stores the tasks\u0027 data."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private Duke(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Returns Duke\u0027s response after a user\u0027s input is parsed."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param input user\u0027s input"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @return Duke\u0027s output"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            String res \u003d c.execute(tasks, storage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            if (c.isExit()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                exit();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            return res;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Returns Duke\u0027s welcome message."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @return Duke\u0027s welcome message in a string"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public String getWelcomeMessage() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        String msg \u003d \"Hello from Duke \\n\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        msg +\u003d \"You have \" + tasks.getSize() + \" task\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                + (tasks.getSize() \u003d\u003d 1 ? \" \" : \"s \") + \"in the list.\\n\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            msg +\u003d (i + 1) + \".\" + tasks.getTask(i) + \"\\n\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        msg +\u003d \"\\nWhat can i do for you?\\n\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 61
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import command.DeadlineCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import command.EventCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import command.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import command.ToDoCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeInvalidTaskDescriptionException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeInvalidTaskTimeException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Returns a Command that is converted from user\u0027s input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param input a string that contains the user input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @return a Command for the main logic in Duke to execute."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @throws DukeException DukeException that may arise from invalid inputs."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        String[] token \u003d input.split(\" \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        String[] temp;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        String taskDesc;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        switch (token[0]) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            if (token.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                throw new DukeException(\"Give me a goddamn numbered task to do.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                int index \u003d Integer.parseInt(token[1]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                return new DoneCommand(index);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                throw new DukeException(\"Give me a goddamn numbered task to do.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        case \"delete\" :"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            if (token.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                throw new DukeException(\"Give me a goddamn numbered task to delete.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                int index \u003d Integer.parseInt(token[1]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                return new DeleteCommand(index);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                throw new DukeException(\"Give me a goddamn numbered task to delete.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            if (token.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                throw new DukeInvalidTaskDescriptionException(\"ToDo\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            return new ToDoCommand(token[1]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            temp \u003d input.split(\"/by\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            taskDesc \u003d temp[0].substring(8).trim();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            if (taskDesc.equals(\"\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                throw new DukeInvalidTaskDescriptionException(\"Deadline\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            } else if (temp.length \u003c 2) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                throw new DukeInvalidTaskTimeException(\"deadline\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            return new DeadlineCommand(taskDesc, temp[1].trim());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            temp \u003d input.split(\"/at\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            taskDesc \u003d temp[0].substring(5).trim();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            if (taskDesc.equals(\"\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                throw new DukeInvalidTaskDescriptionException(\"Event\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            } else if (temp.length \u003c 2) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                throw new DukeInvalidTaskTimeException(\"event\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            return new EventCommand(taskDesc, temp[1].trim());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            if (token.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                throw new DukeException(\"Give me a goddamn keyword to find.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            return new FindCommand(input.substring(4).trim());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 86
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import task.DeadlineTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import task.EventTask;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import task.ToDoTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Initialises a storage object which handles with loading tasks from the file"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * and saving tasks in the file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param filePath a string storing the location of the text file which stores the tasks\u0027 data."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @throws DukeException informing where an IOException has occurred."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public Storage(String filePath) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            if (file.exists()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            throw new DukeException(\"IOException from invalid filePath\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Loads a list of tasks in the text file."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @return an ArrayList of tasks."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @throws DukeException DukeException that may arise from invalid inputs."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            String tokenString \u003d sc.nextLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            String[] token \u003d tokenString.split(\"\\\\|\\\\|\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            String time;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            switch (token[0].trim()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                task \u003d new ToDoTask(token[2].trim());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                time \u003d token[3];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                task \u003d new DeadlineTask(token[2].trim(), time);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                time \u003d token[3];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                task \u003d new EventTask(token[2].trim(), time);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                System.out.println(tokenString);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                throw new DukeException(\"Corrupted file\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            if (token[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Saves tasks in the text file given a TaskList."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param tasks TaskList to be saved into the text file."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void save(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            FileWriter fw1 \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            fw1.write(\"\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            fw1.close();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            FileWriter fw2 \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            for (Task task : tasks.getList()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                String s \u003d task.toFileString() + \"\\n\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                fw2.write(s);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            fw2.close();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            throw new DukeException(\"IOException from Storage save method\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 95
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": " * Represents a list of Tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Creates a TaskList which stores Tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param tasks an ArrayList of Task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void doneTask(int index) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        tasks.get(index).markAsDone();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Returns a string for printing a list of all tasks to the user."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @return a string of all tasks in the list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        String res;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            return \"You have no tasks in the list.\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            res \u003d \"I can find \" + tasks.size() + \" task\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                    + (tasks.size() \u003d\u003d 1 ? \" \" : \"s \") + \"in the list.\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            res +\u003d (\"\\n\" + (i + 1) + \".\" + tasks.get(i));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 63
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return this.getMessage();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 12
    }
  },
  {
    "path": "src/main/java/exception/DukeInvalidTaskDateFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class DukeInvalidTaskDateFormatException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public DukeInvalidTaskDateFormatException(String msg) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        super(msg + \" is not a valid date.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 9
    }
  },
  {
    "path": "src/main/java/exception/DukeInvalidTaskDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class DukeInvalidTaskDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public DukeInvalidTaskDescriptionException(String msg) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        super(\"☹ OOPS!!! The description of a \" + msg + \" task cannot be empty.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 9
    }
  },
  {
    "path": "src/main/java/exception/DukeInvalidTaskIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class DukeInvalidTaskIndexException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public DukeInvalidTaskIndexException(String msg, int n) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        super(\"Invalid numbered task to \" + msg + \". Insert a number from 1 to \" + n + \".\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 9
    }
  },
  {
    "path": "src/main/java/exception/DukeInvalidTaskTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class DukeInvalidTaskTimeException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public DukeInvalidTaskTimeException(String msg) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        super(\"Did you remember to use\" + (msg.equals(\"deadline\") ? \" \\\"/by\\\"?\" : \" \\\"/at\\\"?\"));"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 8
    }
  },
  {
    "path": "src/main/java/javafx/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package javafx;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.scene.effect.DropShadow;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.scene.paint.ImagePattern;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "class DialogBox extends HBox {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private Circle myCircle;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        myCircle.setStroke(Color.SEAGREEN);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        myCircle.setFill(new ImagePattern(img));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        myCircle.setEffect(new DropShadow(+25d, 0d, +2d, Color.DARKSEAGREEN));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Returns Duke\u0027s DialogBox which appears reverse to User\u0027s DialogBox."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param text the text in the dialog"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param img Duke\u0027s profile picture"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @return Duke\u0027s dialog box"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 74
    }
  },
  {
    "path": "src/main/java/javafx/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package javafx;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/shockedPikachu.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/dukePepe.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void dukeWelcome() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(duke.getWelcomeMessage(), dukeImage));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        );"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 58
    }
  },
  {
    "path": "src/main/java/task/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeInvalidTaskDateFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": " * Represents a Task which has a deadline."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private SimpleDateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private Date time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Creates a DeadlineTask with a given description and time."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param time Task deadline date and time in the format of \"dd/mm/yyyy hhmm\"."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public DeadlineTask(String description, String time) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            this.time \u003d format.parse(time);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            throw new DukeInvalidTaskDateFormatException(time);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return \"D||\" + (this.isDone ? \"1||\" : \"0||\")  + this.description + \"||\" + format.format(this.time);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + time + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 39
    }
  },
  {
    "path": "src/main/java/task/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeInvalidTaskDateFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": " * Represents a task which has an event time."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private SimpleDateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    private Date time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Creates a EventTime with a given description and time."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param time Task event date and time in the format of \"dd/mm/yyyy hhmm\"."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public EventTask(String description, String time) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            this.time \u003d format.parse(time);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            throw new DukeInvalidTaskDateFormatException(time);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return \"E||\" + (this.isDone ? \"1||\" : \"0||\")  + this.description + \"||\" + format.format(this.time);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" +  time  + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 38
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": " * Represents a task that the user can add into the TaskList."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Task Constructor used by classes extending Task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public abstract String toFileString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 36
    }
  },
  {
    "path": "src/main/java/task/ToDoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": " * Represents a Task to do."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class ToDoTask extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * Creates a ToDoTask with a given description."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public ToDoTask(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return \"T||\" + (this.isDone ? \"1||\" : \"0||\")  + this.description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 24
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "\u003c?import javafx.scene.shape.Circle?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #fadbd8;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "         \u003c/padding\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "      \u003cCircle fx:id\u003d\"myCircle\" fill\u003d\"GREY\" radius\u003d\"50.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "kwekke": 19
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"javafx.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" style\u003d\"-fx-background: #fdebd0;\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"387.0\" spacing\u003d\"10.0\" style\u003d\"-fx-background-color: #fdebd0;\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "kwekke": 19
    }
  },
  {
    "path": "src/test/java/DeadlineTaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import task.DeadlineTask;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class DeadlineTaskTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void testToFileString() throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        assertEquals(\"D||0||deadlineTest||01/01/2000 2359\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "                new DeadlineTask(\"deadlineTest\", \"01/01/2000 2359\").toFileString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void testInvalidTaskDateExceptionThrown() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            new DeadlineTask(\"deadlineTest\", \"01/01\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": "            assertEquals(\"01/01 is not a valid date.\", e.getMessage());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 25
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwekke": 11
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": " ____        _"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "|  _ \\ _   _| | _____"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "What can i do for you?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "  [T][?] borrow book"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "Now you have 1 task in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "1.[T][?] borrow book"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": "  [D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": "  [E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwekke"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwekke"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwekke"
        },
        "content": "____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "kwekke": 37
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "kwekke": 5
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "   @ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": "   "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "   REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "   if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "   "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "   REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "   del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": "   "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "   REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "   javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "   IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "       echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "       exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": "   )"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "   REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "   "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "   REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "   java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "   "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "   REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": "   FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "kwekke": 21
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwekke"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwekke"
        },
        "content": "   "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwekke"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwekke"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwekke"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwekke"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwekke"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwekke"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwekke"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwekke"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwekke"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwekke"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwekke"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwekke"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwekke"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwekke"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwekke"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwekke"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwekke"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwekke"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwekke"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwekke"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwekke"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwekke"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "kwekke": 34
    }
  }
]
