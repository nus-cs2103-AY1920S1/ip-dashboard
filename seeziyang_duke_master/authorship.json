[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "apply plugin: \u0027java\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "tasks.withType(JavaCompile) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    options.encoding \u003d \u0027UTF-8\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "run {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "test {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seeziyang": 30,
      "-": 15
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "seeziyang": 17,
      "-": 83
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seeziyang": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.util.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " * Duke is a Personal Assistant Chatbot that helps a person to keep track of various tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /** User Interface of Duke that handles input and output to and from the command line. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /** Storage where the Tasks are retrieved from and stored to. */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /** List of Tasks Duke is currently tracking. */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Constructor for Duke that instantiates the Ui and Storage classes."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        storage \u003d new Storage(\"data/duke.txt\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        loadTasksFromStorage();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        new Duke().runCli();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Returns the response from Duke based on user\u0027s input."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param input Input from user."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @return Output string from Duke."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            return c.executeGui(tasks, ui, storage);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            return ui.getErrorMsg(e);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Runs and starts the Duke chatbot program."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public void runCli() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        ui.printGreetingMsg();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                String input \u003d ui.readInput();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                c.executeCli(tasks, ui, storage);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                ui.printErrorMsg(e);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        ui.printExitMsg();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Loads tasks from storage and assign it to TaskList."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * If the file is not found or the file cannot be read correctly,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * a empty TaskList is assigned to task."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    private void loadTasksFromStorage() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            tasks \u003d storage.getTasks();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            ui.printErrorMsg(e);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Returns the Ui instance associated with Duke."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @return Ui instance associated with Duke."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public Ui getUi() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        return ui;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seeziyang": 91,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seeziyang": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().showGreeting();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seeziyang": 30
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public void showGreeting() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                DialogBox.getDukeDialog(duke.getUi().getGreetingMsg(), dukeImage)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        );"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        );"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seeziyang": 57
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " * Represents a \"todo\", \"event\", or \"deadline\" command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Constructor for task adding command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param task Task to be added to the TaskList."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Adds new task from input to current list of Task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Ui then prints the Task that was added to the TaskList and the number of tasks in the TaskList."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param tasks List of Tasks Duke is currently tracking."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param ui User Interface of Duke that handles input and output to and from the command line."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param storage Storage where the Tasks are retrieved from and stored to."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public void executeCli(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        ui.printAddTaskMsg(task, tasks.size());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public String executeGui(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        return ui.getAddTaskMsg(task, tasks.size());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seeziyang": 42
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " * Represents a valid command for Duke."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /** Inputted arguments behind the command keyword. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    protected String args;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /** Task associated with the command\u0027s execution. */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    protected Task task;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Constructor for commands with no arguments in the input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Constructor for commands with arguments in the input."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param args Inputted arguments behind the command keyword."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public Command(String args) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        this.args \u003d args;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Constructor for commands with a Task associated associated to its execution."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param task Task associated with the command\u0027s execution."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public Command(Task task) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Execute the actions associated with command."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * This includes the managing of Tasks in the TaskList, the input, output and storage."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param tasks List of Tasks Duke is currently tracking."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param ui User Interface of Duke that handles input and output to and from the command line."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param storage Storage where the Tasks are retrieved from and stored to."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @throws DukeException If inputted arguments are invalid."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public abstract void executeCli(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public abstract String executeGui(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Returns true if the command is \"bye\", else returns false."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @return True if command is \"bye\", false otherwise."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seeziyang": 64
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " * Represents a \"delete\" command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Constructor for task deleting command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param taskId ID of Task to be deleted."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public DeleteCommand(String taskId) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        super(taskId);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Removes Task associated with the taskId from the current list of Tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Ui then prints the Task that was deleted."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param tasks List of Tasks Duke is currently tracking."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param ui User Interface of Duke that handles input and output to and from the command line."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param storage Storage where the Tasks are retrieved from and stored to."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @throws DukeException If taskId does not represent a valid number."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public void executeCli(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        Task task \u003d tasks.remove(args);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        ui.printDeleteTaskMsg(task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public String executeGui(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        Task task \u003d tasks.remove(args);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        return ui.getDeleteTaskMsg(task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seeziyang": 43
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " * Represents a \"done\" command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Constructor for command to mark a Task as done."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param taskId ID of task to be marked as done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public DoneCommand(String taskId) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        super(taskId);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Marks Task associated with the taskId as done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Ui then prints the Task that was marked as done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param tasks List of Tasks Duke is currently tracking."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param ui User Interface of Duke that handles input and output to and from the command line."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param storage Storage where the Tasks are retrieved from and stored to."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @throws DukeException If taskId does not represent a valid number."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public void executeCli(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        Task task \u003d tasks.get(args);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        ui.printMarkTaskAsDoneMsg(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public String executeGui(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        Task task \u003d tasks.get(args);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        return ui.getMarkTaskAsDoneMsg(task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seeziyang": 45
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " * Represents a \"bye\" command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Saves all current Tasks into the file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param tasks List of Tasks Duke is currently tracking."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param ui User Interface of Duke that handles input and output to and from the command line."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param storage Storage where the Tasks are retrieved from and stored to."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @throws DukeException If the tasks cannot be written and saved into file properly."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public void executeCli(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        storage.saveTasks(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public String executeGui(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        storage.saveTasks(tasks);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        return ui.getExitMsg(); // TODO: figure out how to exit GUI"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Returns true as it is an Exit command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seeziyang": 40
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " * Represents a \"find\" command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Constructor for command to search for a task with description containing the searchString."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param searchString Keyword user is searching for."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public FindCommand(String searchString) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        super(searchString);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Search for task with description containing the searchString."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Ui then prints out the tasks containing the search keyword."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param tasks List of Tasks Duke is currently tracking."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param ui User Interface of Duke that handles input and output to and from the command line."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param storage Storage where the Tasks are retrieved from and stored to."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public void executeCli(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        TaskList tasksWithKeyword \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            if (task.getDescription().contains(args)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                tasksWithKeyword.add(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        ui.printFoundTasksMsg(tasksWithKeyword);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public String executeGui(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        TaskList tasksWithKeyword \u003d new TaskList();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            if (task.getDescription().contains(args)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                tasksWithKeyword.add(task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        return ui.getFoundTasksMsg(tasksWithKeyword);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seeziyang": 54
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " * Represents a \"list\" command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Prints out all the tasks in the task list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param tasks List of Tasks Duke is currently tracking."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param ui User Interface of Duke that handles input and output to and from the command line."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param storage Storage where the Tasks are retrieved from and stored to."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public void executeCli(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        ui.printTasksListing(tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public String executeGui(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        return ui.getTasksListing(tasks);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seeziyang": 28
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.util.DateManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " * Represents a task that need to be done before a specific date/time."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /** Date whereby the task need to be done by. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    protected Date deadlineDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Constructor for deadline task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param description Description of deadline task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param deadlineDateString String specifying the deadline of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @throws DukeException If deadlineDateString is not in correct format."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public Deadline(String description, String deadlineDateString) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        this.deadlineDate \u003d DateManager.stringToDate(deadlineDateString);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Returns the print format of the deadline task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @return String representation of the deadline task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + DateManager.dateToString(deadlineDate) + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Returns the save format of the deadline task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @return Formatted string to be saved in storage file."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public String getSaveString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        return \"D | \" + (isDone ? 1 : 0) + \" | \" + description + \" | \""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                + DateManager.dateToString(deadlineDate);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seeziyang": 47
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.util.DateManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " * Represents a task that start at a specific time and ends at a specific time."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /** Date whereby the event starts. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    protected Date eventDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Constructor for event task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param description Description of event."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param eventDateString String specifying the date whereby the event starts."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @throws DukeException If eventDateString is not in the correct format."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public Event(String description, String eventDateString) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        this.eventDate \u003d DateManager.stringToDate(eventDateString);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Returns the print format of the event."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @return String representation of the event."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + DateManager.dateToString(eventDate) + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Returns the save format of the event."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @return Formatted string to be saved in storage file."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public String getSaveString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        return \"E | \" + (isDone ? 1 : 0) + \" | \" + description + \" | \""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                + DateManager.dateToString(eventDate);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seeziyang": 47
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " * Represents a task to be tracked by Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /** Description of task. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /** Whether the task is done or not. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Constructor for task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Returns the status icon regarding whether the task is done or not."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @return Tick symbol if task is done, otherwise return cross symbol."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        return isDone ? \"O\" : \"X\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Returns the print format of the task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @return String representation of the task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Mark the task as done."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Returns the save format of the task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @return Formatted string to be saved in storage file."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public abstract String getSaveString();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Returns the description of the task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @return Description of task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seeziyang": 63
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " * Represents a task without any date/time attached to it."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Constructor for todo task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param description Description of todo."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Returns the print format of the todo task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @return String representation of the todo task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Returns the save format of the todo task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @return Formatted string to be saved in storage file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public String getSaveString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        return \"T | \" + (isDone ? 1 : 0) + \" | \" + description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seeziyang": 35
    }
  },
  {
    "path": "src/main/java/duke/util/DateManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " * Helper class containing static methods to convert Date object to and from the string representation."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "public class DateManager {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /** Formatter for formatting and parsing date according to the \"dd/MM/yyyy HHmm\" pattern. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    private static SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Returns a Date object with representing the date given in the dateString."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param dateString String representing a date in the \"dd/MM/yyyy HHmm\" format"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @return Date object the string is representing."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @throws DukeException If dateString is not in the correct format."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public static Date stringToDate(String dateString) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            return formatter.parse(dateString);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            throw new DukeException(\"Please specify the date in the correct format:\\n     DD/MM/YYYY HHMM\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Returns a String representing the Date object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param date Date object to be converted to String."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @return String representing the Date in the \"dd/MM/yyyy HHmm\"."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public static String dateToString(Date date) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        return formatter.format(date);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seeziyang": 39
    }
  },
  {
    "path": "src/main/java/duke/util/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " * Represents exceptions specific to Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Constructor for DukeException."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param message String specifying the error message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seeziyang": 15
    }
  },
  {
    "path": "src/main/java/duke/util/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " * Deals with making sense of the user\u0027s input and command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Parse and interprets the input from the user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @return Command representing what user\u0027s input."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @throws DukeException If input is invalid or not in the proper format."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        String[] inputArr \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        String command \u003d inputArr[0];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                return new DoneCommand(inputArr[1]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                throw new DukeException(\"Please specify the task number you wish to\\n     mark as done!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                return new DeleteCommand(inputArr[1]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                throw new DukeException(\"Please specify the task number you wish to\\n     delete!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                return new AddCommand(new Todo(inputArr[1]));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                String[] detailsArr \u003d inputArr[1].split(\" /by \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                return new AddCommand(new Deadline(detailsArr[0], detailsArr[1]));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                throw new DukeException("
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                        \"Please follow the format:\\n     deadline \u003cdescription\u003e /by \u003cDD/MM/YYYY HHMM\u003e\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                String[] detailsArr \u003d inputArr[1].split(\" /at \");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                return new AddCommand(new Event(detailsArr[0], detailsArr[1]));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                throw new DukeException("
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                        \"Please follow the format:\\n     event \u003cdescription\u003e /at \u003cDD/MM/YYYY HHMM\u003e\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                return new FindCommand(inputArr[1]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                throw new DukeException(\"Please specify what you are searching for!\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means!\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seeziyang": 79
    }
  },
  {
    "path": "src/main/java/duke/util/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /** File where tasks are loaded and saved from. */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Constructor for Storage."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param filePath Path where the .txt file is at."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        file \u003d new File(filePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Retrieve and return the tasks stored in the file."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @return List of tasks stored in the file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @throws FileNotFoundException If file is not found."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @throws DukeException If string representing Task in the file is not formatted correctly."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public TaskList getTasks() throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            String saveString \u003d sc.nextLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            String[] stringComponents \u003d  saveString.split(Pattern.quote(\" | \"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            String taskType \u003d stringComponents[0];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                Todo todo \u003d new Todo(stringComponents[2]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                if (stringComponents[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                    todo.markAsDone();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                tasks.add(todo);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                Deadline deadline \u003d new Deadline(stringComponents[2], stringComponents[3]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                if (stringComponents[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                    deadline.markAsDone();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                tasks.add(deadline);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                Event event \u003d new Event(stringComponents[2], stringComponents[3]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                if (stringComponents[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                    event.markAsDone();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                tasks.add(event);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Save the tasks currently tracked by Duke into the file."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param tasks List of tasks currently tracked by Duke."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @throws DukeException If the tasks cannot be written and saved into file properly."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public void saveTasks(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            StringBuilder fileStringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                fileStringBuilder.append(task.getSaveString());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                fileStringBuilder.append(System.lineSeparator());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            fw.write(fileStringBuilder.toString());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seeziyang": 100
    }
  },
  {
    "path": "src/main/java/duke/util/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " * Represents the list of tasks currently tracked by Duke."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "public class TaskList implements Iterable\u003cTask\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /** List of tasks. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Constructor for TaskList."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Returns the ArrayList of task\u0027s iterator."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @return ArrayList of task\u0027s iterator."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public Iterator\u003cTask\u003e iterator() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        return tasks.iterator();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Returns the number of tasks currently tracked in the TaskList."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @return number of tasks in the TaskList."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Adds the Task to be tracked into TaskList."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param task Task to be added into TaskList."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Returns the Task in the TaskList associated with the ID."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * The ID of the task is the index of the task in the ArrayList plus 1."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param taskId ID of task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @return Task associated with the ID."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @throws DukeException If the ID does not belong to any task or if the ID is not a number."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public Task get(String taskId) throws DukeException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            return tasks.get(Integer.parseInt(taskId) - 1);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            throw new DukeException(\"Invalid task ID input!\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            throw new DukeException(\"Task not found!\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Removes the Task in the TaskList associated with the ID."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * The ID of the task is the index of the task in the ArrayList plus 1."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param taskId ID of task to be removed."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @return Returns the removed task with the associated the ID."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @throws DukeException If the ID does not belong to any task or if the ID is not a number."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public Task remove(String taskId) throws DukeException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            return tasks.remove(Integer.parseInt(taskId) - 1);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            throw new DukeException(\"Invalid task ID input!\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            throw new DukeException(\"Task not found!\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seeziyang": 85
    }
  },
  {
    "path": "src/main/java/duke/util/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " * Deals with the interactions with the user, including the input and output to and from the command line."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seeziyang"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /** Scanner to read in input from the command line. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /** Horizontal line to be printed before and after each output message. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    private static final String horizontalLine \u003d"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Constructor for Ui that instantiates the Scanner."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Takes in the next line of input from the user in the command line."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @return The line of input entered by the user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public String readInput() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Prints out the DukeException\u0027s formatted error message."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param e The DukeException to be displayed to the user."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public void printErrorMsg(DukeException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        System.out.println(\"     :( OOPS!!! \" + e.getMessage());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public String getErrorMsg(DukeException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        return \":( OOPS!!! \" + e.getMessage();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Prints out the greeting to the user at the start of the Duke program."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public void printGreetingMsg() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        // Greet"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        System.out.println(\"     Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        System.out.println(\"     What can I do for you?\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public String getGreetingMsg() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        return \"Hello I\u0027m Duke!\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Prints out the goodbye message when the user leaves the Duke program."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public void printExitMsg() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        // Exit"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public String getExitMsg() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        return \"Your tasks have been saved.\\nBye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Prints out each Task in the TaskList."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Each Task is prepended with their ID, which is its index + 1."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param tasks List of tasks being tracked by Duke."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public void printTasksListing(TaskList tasks) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        int id \u003d 1;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            System.out.println(\"     \" + id + \". \" + task);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            id++;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public String getTasksListing(TaskList tasks) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        int id \u003d 1;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            sb.append(id + \". \" + task + \"\\n\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            id++;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Prints out that the task was marked as done."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param task Task which was marked as done."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public void printMarkTaskAsDoneMsg(Task task) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        System.out.println(\"     Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        System.out.println(\"       \" + task);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public String getMarkTaskAsDoneMsg(Task task) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\\n  \" + task;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Prints out that the task was deleted."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param task Task which was deleted."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public void printDeleteTaskMsg(Task task) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        System.out.println(\"     Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        System.out.println(\"       \" + task);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public String getDeleteTaskMsg(Task task) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        return \"Noted. I\u0027ve removed this task:\\n  \" + task;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Prints out that the task was added."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param task Task which was added."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param numOfTasks Number of tasks in the TaskList after task was added."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public void printAddTaskMsg(Task task, int numOfTasks) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        System.out.println(\"       \" + task);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        System.out.println(\"     Now you have \" + numOfTasks + \" tasks in the list.\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public String getAddTaskMsg(Task task, int numOfTasks) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n  \" + task"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                + \"\\nNow you have \" + numOfTasks + \" tasks in the list.\";"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * Prints out searched tasks."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     * @param tasksWithKeyword List of tasks with description containing the user search keyword."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public void printFoundTasksMsg(TaskList tasksWithKeyword) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        if (tasksWithKeyword.size() \u003e 0) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            System.out.println(\"     Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            int id \u003d 1;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            for (Task task : tasksWithKeyword) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                System.out.println(\"     \" + id + \". \" + task);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                id++;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            System.out.println(\"     Sorry, there are no matching tasks in your list!\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public String getFoundTasksMsg(TaskList tasksWithKeyword) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        if (tasksWithKeyword.size() \u003e 0) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            StringBuilder sb \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            int id \u003d 1;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            for (Task task : tasksWithKeyword) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                sb.append(id + \".\" + task + \"\\n\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                id++;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            return sb.toString();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            return \"Sorry, there are no matching tasks in your list!\";"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seeziyang": 203
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"false\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "seeziyang": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "seeziyang": 19
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public void testStringConversion() throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        assertEquals(\"[E][X] lecture (at: 28/08/2019 1600)\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                new Event(\"lecture\", \"28/08/2019 1600\").toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public void testSaveStringConversion() throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        assertEquals(\"E | 0 | lecture | 28/08/2019 1600\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                new Event(\"lecture\", \"28/08/2019 1600\").getSaveString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seeziyang": 20
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import duke.util.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public void inputParsing_validInputs_success() throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        assertTrue(Parser.parse(\"list\") instanceof ListCommand);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        assertTrue(Parser.parse(\"bye\") instanceof ExitCommand);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        assertTrue(Parser.parse(\"event lecture /at 28/08/2019 1600\") instanceof AddCommand);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    public void inputParsing_invalidInputs_exceptionThrown() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            assertTrue(Parser.parse(\"event lecture 28/08/2019 1600\") instanceof AddCommand);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "            assertEquals(\"Please follow the format:\\n     event \u003cdescription\u003e /at \u003cDD/MM/YYYY HHMM\u003e\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "                    e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seeziyang": 32
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "       [T][?] borrow book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     1. [T][?] borrow book"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "       [D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "       [E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     1. [T][?] borrow book"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     2. [D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     3. [E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "       [D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     1. [T][?] borrow book"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     2. [D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     3. [E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "       [T][?] borrow book"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     1. [T][?] borrow book"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     2. [D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     3. [E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "       [D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     1. [T][?] borrow book"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     2. [E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "seeziyang": 73
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "deadline buy books"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "event"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "delete 52"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "seeziyang": 15
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seeziyang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seeziyang"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "seeziyang": 21
    }
  }
]
