[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public String formattedString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return String.format(\"D | %d | %s | %s\", super.isDone ? 1 : 0, super.description, by);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 17
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        String greeting \u003d String.format(\"\\n%s\\n%s\\n\", \"Hello! I\u0027m Duke\", \"What can I do for you?\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        System.out.println(logo + greeting);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        File diskList \u003d new File(\"data/duke.txt\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            Scanner s \u003d new Scanner(diskList);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            while(s.hasNext()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                String[] savedTask \u003d s.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                switch (savedTask[0]) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    Todo t \u003d new Todo(savedTask[2]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    if (savedTask[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                        t.markAsDone();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    taskList.add(t);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    Deadline d \u003d new Deadline(savedTask[2], savedTask[3]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    if (savedTask[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                        d.markAsDone();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    taskList.add(d);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    Event e \u003d new Event(savedTask[2], savedTask[3]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    if (savedTask[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                        e.markAsDone();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    taskList.add(e);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        int numTask \u003d taskList.size();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        while(!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            if (input.matches(\"done\\\\s+\\\\d+\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                Task doneTask \u003d taskList.get(Integer.valueOf(input.replaceAll(\"done\\\\s+\", \"\")) - 1);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                doneTask.markAsDone();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                System.out.println(doneTask + \"\\n\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            } else if (input.matches(\"delete\\\\s+\\\\d+\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                int listRank \u003d Integer.valueOf(input.replaceAll(\"delete\\\\s+\", \"\")) - 1;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                Task deletedTask \u003d taskList.get(listRank);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                System.out.println(deletedTask);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                taskList.remove(listRank);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                numTask--;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                System.out.println(String.format(\"Now you have %d tasks in the list.\\n\", numTask));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            } else if (!input.equals(\"list\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                if (input.matches(\"todo\\\\s+.+\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    taskList.add(new Todo(input.replaceAll(\"todo\\\\s+\", \"\")));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                } else if (input.matches(\"deadline\\\\s+.+\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    String taskDetails \u003d input.replaceAll(\"deadline\\\\s+\", \"\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    String[] details \u003d taskDetails.split(\"\\\\s+/by\\\\s+\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    taskList.add(new Deadline(details[0], dateConversion(details[1])));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                } else if (input.matches(\"event\\\\s+.+\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    String taskDetails \u003d input.replaceAll(\"event\\\\s+\", \"\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    String[] details \u003d taskDetails.split(\"\\\\s+/at\\\\s+\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    taskList.add(new Event(details[0], dateConversion(details[1])));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                        if (input.equals(\"todo\") || input.equals(\"deadline\") || input.equals(\"event\")"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                                || input.equals(\"done\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                            String message \u003d String.format(\"The description of a %s cannot be empty.\", input);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                            throw new InsufficientArgumentException(message);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                            throw new InvalidArgumentException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    } catch (DukeException exception) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                if (taskList.size() \u003d\u003d numTask + 1) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    System.out.println(taskList.get(numTask));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    numTask++;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    System.out.println(String.format(\"Now you have %d tasks in the list.\\n\", numTask));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                for (int i \u003d 0; i \u003c numTask; i++) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    System.out.println(String.format(\"%d.%s\", i + 1, taskList.get(i)));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            if (sc.hasNext()) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        overWrite(taskList, diskList);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public static void overWrite(ArrayList\u003cTask\u003e taskList, File diskList) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        boolean first \u003d true;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        for (Task t : taskList) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            String s \u003d t.formattedString();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            if (first) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                sb.append(s);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                first \u003d false;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                sb.append(String.format(\"\\n%s\", s));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            FileWriter fw \u003d new FileWriter(diskList);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            fw.write(sb.toString());"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public static String dateConversion(String s) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        SimpleDateFormat numDateTime \u003d new SimpleDateFormat(\"d/M/y HHmm\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        SimpleDateFormat textDateTime \u003d new SimpleDateFormat(\"d MMMM y, h.mm a\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            if (s.matches(\"\\\\d+/\\\\d+/\\\\d+\\\\s+\\\\d+\")) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                Date d \u003d numDateTime.parse(s);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                s \u003d textDateTime.format(d);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 154,
      "-": 9
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        System.out.println(String.format(\"\\u2639 OOPS!!! %s\\n\", message));"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public String formattedString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return String.format(\"D | %d | %s | %s\", super.isDone ? 1 : 0, super.description, at);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 18
    }
  },
  {
    "path": "src/main/java/InsufficientArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class InsufficientArgumentException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public InsufficientArgumentException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 5
    }
  },
  {
    "path": "src/main/java/InvalidArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class InvalidArgumentException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public InvalidArgumentException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 5
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public abstract String formattedString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 24
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public String formattedString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return String.format(\"T | %d | %s\", super.isDone ? 1 : 0, super.description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 14
    }
  }
]
