[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * Represents a Deadline Task which extends the Task Class"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * a Deadline Task object is represented by a String description and"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * a LocalDateTime which tells when the deadline task is due."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    protected DateTimeFormatter format1 \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public Deadline(String description, String by) throws ParseException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        this.by \u003d LocalDateTime.parse(by, format1);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(format1) + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 23
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * Represents a Duke class which is used to run a taskList computer program"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * that allows users to store their various task (Deadline, Event, Things to do)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * and store them in a text file. The program also allows them to delete and update"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * their list once they have completed it."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * Constructor for Duke class"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * Takes in a filePath and instantiate a UI, Storage and TaskList object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param filePath an String file location"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * Runs the entire program. Kick starts the entire computer duke Program"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public void run() throws IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        ui.initiate();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            String inputInstruction \u003d sc.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            String inputCommand \u003d Parser.getInputCommand(inputInstruction);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            if (inputCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(\"___________________________________\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(\"___________________________________\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                ui.executeInstructions(inputInstruction, inputCommand, storage, tasks);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        new Duke(\"D:\\\\NUS Computer Science\\\\CS2103T\\\\duke\\\\src\\\\main\\\\java\\\\duke.txt\").run();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "shihaoyap": 50
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * Represents a DukeException class which handles all the possible"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * custom exceptions that might be needed in the program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    protected String exceptionType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public DukeException(String exceptionType) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        this.exceptionType \u003d exceptionType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        if (exceptionType.equals(\"done\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return \":( OOPS!!! The index of a done cannot be empty.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } else if (exceptionType.equals(\"delete\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return \":( OOPS!!! The index of a delete cannot be empty.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } else if (exceptionType.equals(\"todo\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return \":( OOPS!!! The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } else if (exceptionType.equals(\"index\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return \":( OOPS!!! No such task in the list.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } else if (exceptionType.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return \":( OPPS!!! Invalid input format for deadline.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } else if (exceptionType.equals(\"event\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return \":( OPPS!!! Invalid input format for event\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } else if (exceptionType.equals(\"find\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return \":( OOPS!!! No such keyword in the list!\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return \":( OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 34
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * Represents an Event Task which extends the Task Class"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * an Event Task object is represented by a String description and"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * a LocalDateTime which tells when the Event task is at."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    protected DateTimeFormatter format1 \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public Event(String description, String at){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        this.at \u003d LocalDateTime.parse(at, format1);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at.format(format1) + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 24
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * Represents a Parser Class which is used to process the user"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * inputs to allow the rest of the program to use the processed"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * information."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public static String getInputCommand(String inputInstruction) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        String inputCommand \u003d inputInstruction.split(\" \")[0];"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return inputCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public static int getTaskNum(String inputInstruction) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        String[] taskNumString \u003d inputInstruction.split(\" \");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        int taskNum \u003d Integer.parseInt(taskNumString[1]);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return taskNum;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 21
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * Represents a Storage Class which is used to handle all"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * file handling task - writing, deleting, updating."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    private File taskFile;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        this.taskFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public void writeToFile(String inputString) throws IOException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        FileWriter fw \u003d new FileWriter(\"D:\\\\NUS Computer Science\\\\CS2103T\\\\duke\\\\src\\\\main\\\\java\\\\duke.txt\", true);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        fw.write(inputString);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public void updateTaskToFile(ArrayList\u003cTask\u003e inputTaskList) throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(\"D:\\\\NUS Computer Science\\\\CS2103T\\\\duke\\\\src\\\\main\\\\java\\\\duke.txt\", false);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        for (int i \u003d 0; i \u003c inputTaskList.size(); i++) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            fileWriter.write(inputTaskList.get(i) + System.getProperty(\"line.separator\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 34
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * Represents a Task class which basically represents a task"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * a Task object is represented with a description, a isDone"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * boolean which shows whether the task is completed."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public static int total \u003d 0;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        total++;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        if(isDone) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return \"\\u2713\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return \"\\u2718\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 35
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.util.AbstractCollection;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * Represents a TaskList Class which represented the entire"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * list of task that the user have entered into the program."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * The TaskList class handles all the manipulating of the List."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    private ArrayList\u003cTask\u003e listOfTask;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        listOfTask \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public void listTask() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        if (listOfTask.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            System.out.println(\"List is Empty\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            for (int i \u003d 0; i \u003c listOfTask.size(); i++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(i + 1 + \".\" + listOfTask.get(i));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return listOfTask.get(index);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public ArrayList\u003cTask\u003e getEntireList() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return listOfTask;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public void addTask(Task newTask) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        listOfTask.add(newTask);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public int getNoOfTask() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return listOfTask.size();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public void removeTask(int index) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        listOfTask.remove(index);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public void findTask(String taskKeyWord) throws DukeException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        if (listOfTask.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            System.out.println(\"List is Empty\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            ArrayList\u003cTask\u003e tempTaskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            for (int i \u003d 0; i \u003c listOfTask.size(); i++) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                Task currentTask \u003d listOfTask.get(i);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                if (currentTask.toString().contains(taskKeyWord)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                    tempTaskList.add(currentTask);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            if (tempTaskList.isEmpty()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                throw new DukeException(\"find\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                for (int i \u003d 0; i \u003c tempTaskList.size(); i++) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                    System.out.println(i + 1 + \".\" + tempTaskList.get(i));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 68
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * Represents a TodoTask which extends the Task Class"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * a TodoTask object is represented by a String description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 17
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * Represents an Ui class which handles all the display and I/O"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * that the user will enter. Ui class interacts with the user"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * and helps to call the other necessary classes to achieve the"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * user\u0027s input instructions."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public void initiate() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        System.out.println(\"___________________________________\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can i do for you?\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        System.out.println(\"___________________________________\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * Runs the Instructions that have been entered by the user"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * It will process the String inputInstructions, inputCommand that the user"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * have entered and do the specific instructions using the storage and currentTaskList"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * object that have been created/passed down."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param inputInstruction a String that describes the task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param inputCommand a String command (Deadline, Event, List etc) that helps the program process the instruction"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param storage a storage object that will be used during the program"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param currentTaskList a taskList object that will be used to store the different task objects"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public void executeInstructions(String inputInstruction, String inputCommand, Storage storage, TaskList currentTaskList) throws IOException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        if (inputCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            System.out.println(\"__________________________________\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            currentTaskList.listTask();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            System.out.println(\"___________________________________\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } else if (inputCommand.equals(\"done\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            int taskNum \u003d Parser.getTaskNum(inputInstruction);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            Task currentTask \u003d currentTaskList.getTask(taskNum - 1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            currentTask.markAsDone();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            System.out.println(\"___________________________________\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            System.out.println(currentTask);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            System.out.println(\"___________________________________\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            storage.updateTaskToFile(currentTaskList.getEntireList());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } else if (inputCommand.equals(\"todo\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                if (inputInstruction.length() \u003d\u003d 4 || inputInstruction.length() \u003d\u003d 5) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                    throw new DukeException(\"todo\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                String subInput \u003d inputInstruction.substring(5);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                Task newTask \u003d new Todo(subInput);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                currentTaskList.addTask(newTask);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(\"___________________________________\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task:\\n\" + newTask);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(\"Now you have \" + Task.total + \" tasks in the list.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(\"___________________________________\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                storage.writeToFile(newTask + \"\\n\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(\"___________________________________\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(\"___________________________________\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } else if (inputCommand.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                if (!inputInstruction.contains(\"/by\") || inputInstruction.length() \u003d\u003d 8 || inputInstruction.length() \u003d\u003d 9) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                    throw new DukeException(\"deadline\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                String subInput1 \u003d inputInstruction.substring(9, inputInstruction.lastIndexOf(\"/by\") - 1);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                String subInput2 \u003d inputInstruction.substring(inputInstruction.lastIndexOf(\"/by\") + 4);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                Task newTask \u003d new Deadline(subInput1, subInput2);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                currentTaskList.addTask(newTask);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(\"___________________________________\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task:\\n\" + newTask);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(\"Now you have \" + Task.total + \" tasks in the list.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(\"___________________________________\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                storage.writeToFile(newTask + \"\\n\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(\"___________________________________\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(\"___________________________________\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } else if (inputCommand.equals(\"event\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                if (!inputInstruction.contains(\"/at\") || inputInstruction.length() \u003d\u003d 5 || inputInstruction.length() \u003d\u003d 6) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                    throw new DukeException(\"event\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                String subInput1 \u003d inputInstruction.substring(6, inputInstruction.lastIndexOf(\"/at\"));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                String subInput2 \u003d inputInstruction.substring(inputInstruction.lastIndexOf(\"/at\") + 4);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                Task newTask \u003d new Event(subInput1, subInput2);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                currentTaskList.addTask(newTask);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(\"___________________________________\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task:\\n\" + newTask);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(\"Now you have \" + Task.total + \" tasks in the list.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(\"___________________________________\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                storage.writeToFile(newTask + \"\\n\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(\"___________________________________\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(\"___________________________________\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } else if (inputCommand.equals(\"delete\")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                if (inputInstruction.length() \u003d\u003d 6 || inputInstruction.length() \u003d\u003d 7) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                    throw new DukeException(\"delete\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                int taskNum \u003d Parser.getTaskNum(inputInstruction);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                if (taskNum \u003e currentTaskList.getNoOfTask()) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                    throw new DukeException(\"index\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                Task currentTask \u003d currentTaskList.getTask(taskNum - 1);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                currentTaskList.removeTask(taskNum - 1);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(\"___________________________________\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(currentTask);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                Task.total--;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(\"Now you have \" + Task.total + \" tasks in the list.\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(\"___________________________________\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                storage.updateTaskToFile(currentTaskList.getEntireList());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(\"___________________________________\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(\"___________________________________\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } else if (inputCommand.equals(\"find\")) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                String subInput \u003d inputInstruction.substring(5);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(\"__________________________________\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                currentTaskList.findTask(subInput);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(\"___________________________________\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(\"___________________________________\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(\"___________________________________\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                throw new DukeException(\"invalid\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(\"___________________________________\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(\"___________________________________\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 146
    }
  },
  {
    "path": "src/main/java/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "[T][✓] homework"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "[T][✓] read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "[D][✓] return book (by: 02/03/2019 2000)"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 3
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    void dummyTest() throws ParseException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        assertEquals(\"[D][✘] submit project (by: 02/12/2019 1700)\", new Deadline(\"submit project\", \"02/12/2019 1700\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 12
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 10
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        assertEquals(\"[E][✘] Basketball Competition (at: 03/11/2018 1700)\", new Event(\"Basketball Competition\", \"03/11/2018 1700\").toString());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 10
    }
  }
]
