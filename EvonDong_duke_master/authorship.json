[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "T | 0 | readd"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "D | 0 | cool | 21/03/1321 0132"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "D | 0 | weee | 22/05/3213 2142"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "E | 1 | quest 3 | 03/02/2931 2331"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "T | 0 | sleep"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "D | 0 | proj | 05/02/1231 0313"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 6
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    protected SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    protected DateFormat printFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HH.mm aa\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    protected Date dateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public Deadline(String description, Date dateTime) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + printFormat.format(dateTime) + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return (\"D \" + super.writeToFile() + \" | \" + dateFormat.format(dateTime));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "EvonDong": 26
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private static int totalTasks \u003d 0;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static void main(String[] args) throws IOException, ParseException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        File f \u003d new File(\"data/duke.txt\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        f.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        f.createNewFile();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        readFile(new FileReader(f));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                listTasks(taskList);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            } else if (input.contains(\"done\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                String[] splitInputs \u003d input.split(\" \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                int index \u003d Integer.parseInt(splitInputs[1]) - 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                taskList.get(index).markAsDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            } else if (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                    handleTask(input);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                exit();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        FileWriter fw \u003d new FileWriter(\"data/duke.txt\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        for(int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            if(i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                fw.write(taskList.get(i).writeToFile());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                fw.write(System.lineSeparator() + taskList.get(i).writeToFile());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static void greet() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        String message \u003d \"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                \"What can I do for you?\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static void echo(String s) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        System.out.println(\"added: \" + s);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static void exit() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        String byeMessage \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        System.out.println(byeMessage);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static void listTasks(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        for (int j \u003d 0; (j \u003c list.size()) \u0026\u0026 list.get(j) !\u003d null; j++) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            System.out.println(j + 1 + \".\" + list.get(j));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static void handleTask(String task) throws EmptyDescriptionException, InvalidInputException, ParseException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Task t \u003d null;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        String[] detailsArray \u003d task.split(\" \");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        if (detailsArray.length \u003d\u003d 1 \u0026\u0026 (detailsArray[0].equals(\"todo\") || detailsArray[0].equals(\"deadline\") ||"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                detailsArray[0].equals(\"event\"))) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            throw new EmptyDescriptionException(\"☹ OOPS!!! The description of a \" + detailsArray[0] + \" cannot be empty.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        } else if (detailsArray[0].equals(\"todo\") || detailsArray[0].equals(\"deadline\") ||"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                detailsArray[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            if (detailsArray[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                String description \u003d String.join(\" \", Arrays.copyOfRange(detailsArray, 1, detailsArray.length));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                t \u003d new Todo(description);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                taskList.add(t);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                totalTasks++;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            } else if (detailsArray[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                Date dateTime \u003d null;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                String description \u003d \"\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                for (int i \u003d 0; i \u003c detailsArray.length; i++) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                    if (detailsArray[i].equals(\"/by\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                        dateTime \u003d dateFormat.parse(String.join(\" \","
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                                Arrays.copyOfRange(detailsArray, i + 1, detailsArray.length)));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                        description \u003d String.join(\" \", Arrays.copyOfRange(detailsArray, 1, i));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                t \u003d new Deadline(description, dateTime);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                taskList.add(t);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                totalTasks++;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            } else if (detailsArray[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                Date dateTime \u003d null;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                String description \u003d \"\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                for (int i \u003d 0; i \u003c detailsArray.length; i++) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                    if (detailsArray[i].equals(\"/at\")) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                        dateTime \u003d dateFormat.parse(String.join(\" \","
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                                Arrays.copyOfRange(detailsArray, i + 1, detailsArray.length)));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                        description \u003d String.join(\" \", Arrays.copyOfRange(detailsArray, 1, i));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                t \u003d new Event(description, dateTime);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                taskList.add(t);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                totalTasks++;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            System.out.println(\"  \" + t);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        } else if(detailsArray[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            Task toDelete \u003d taskList.get(Integer.parseInt(detailsArray[1]) - 1);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            System.out.println(\"  \" + toDelete);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            taskList.remove(toDelete);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            totalTasks--;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            throw new InvalidInputException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private static void readFile(FileReader fr) throws IOException, ParseException {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        //SimpleDateFormat timeFormat \u003d new SimpleDateFormat(\"HHmm\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        String line \u003d null;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        while((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            Task t \u003d null;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            String[] splitArr \u003d line.split(\" [|] \");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            if(splitArr[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                t \u003d new Todo(splitArr[2]);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            } else if(splitArr[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                Date dateTime \u003d dateFormat.parse(splitArr[3]);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                t \u003d new Event(splitArr[2], dateTime);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            } else if(splitArr[0].equals(\"D\")){"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                Date dateTime \u003d dateFormat.parse(splitArr[3]);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                t \u003d new Deadline(splitArr[2], dateTime);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            if(splitArr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                t.updateDone();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            taskList.add(t);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "EvonDong": 154,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 5
    }
  },
  {
    "path": "src/main/java/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public EmptyDescriptionException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    protected SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    protected DateFormat printFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HH.mm aa\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    protected Date dateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public Event(String description, Date dateTime) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + printFormat.format(dateTime) + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return (\"E \" + super.writeToFile() + \" | \" + dateFormat.format(dateTime));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 25
    }
  },
  {
    "path": "src/main/java/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class InvalidInputException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public InvalidInputException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 5
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    int doneIcon;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        doneIcon \u003d 0;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return (isDone ? \"[✓]\" : \"[✗]\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.doneIcon \u003d 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                this);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void updateDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.doneIcon \u003d 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return (this.getStatusIcon() + \" \" + this.description);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return (\"| \" + doneIcon + \" | \" + this.description);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 40
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return (\"T \" + super.writeToFile());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 15
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "  [T][✗] borrow book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "  [D][✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "  [E][✗] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "[T][✓] borrow book"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "1.[T][✓] borrow book"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "2.[D][✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "3.[E][✗] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "☹ OOPS!!! The description of a todo cannot be empty."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "  [T][✓] borrow book"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 23
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "blah"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "todo"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 9
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "if ! javac -cp ../src/main/java/*.java -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 34
    }
  }
]
