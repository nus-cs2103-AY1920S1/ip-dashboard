[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uggi121"
        },
        "content": "1. T | 1 | b"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uggi121"
        },
        "content": "2. E | 1 | xd | 11/05/2019 1600-1800"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uggi121"
        },
        "content": "3. T | 0 | a"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uggi121"
        },
        "content": "4. T | 0 | ba"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uggi121"
        },
        "content": "5. T | 0 | c"
      }
    ],
    "authorContributionMap": {
      "uggi121": 5
    }
  },
  {
    "path": "src/main/java/Date.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uggi121"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uggi121"
        },
        "content": " * Validates date-time formats."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uggi121"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uggi121"
        },
        "content": "public class Date {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Verifies date-time format of a Deadline Task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @param dateTime The date-time component of a Deadline Task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @return True if the format is valid."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public static boolean verifyDateTimeDeadline(String dateTime) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        if (dateTime.length() !\u003d 15) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String date \u003d dateTime.substring(0, 10);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String time \u003d dateTime.substring(11, 15);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            int dd \u003d Integer.parseInt(date.substring(0, 2));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            int mm \u003d Integer.parseInt(date.substring(3, 5));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            int yyyy \u003d Integer.parseInt(date.substring(6, 10));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            boolean dateCorrect \u003d ((01 \u003c\u003d dd) \u0026\u0026 (dd \u003c\u003d 31)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                    \u0026\u0026 (01 \u003c\u003d mm) \u0026\u0026 (mm \u003c\u003d 12));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            int hh \u003d Integer.parseInt(time.substring(0, 2));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            int minutes \u003d Integer.parseInt(time.substring(2));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            boolean timeCorrect \u003d ((00 \u003c\u003d hh) \u0026\u0026 (hh \u003c\u003d 23)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                    \u0026\u0026 (00 \u003c\u003d minutes) \u0026\u0026 (minutes \u003c\u003d 59));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            return dateCorrect \u0026\u0026 timeCorrect;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            System.out.println(\"Invalid date-time format.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Verifies the date-time format of an Event."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @param dateTime The Date-time component of an Event."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @return True if the date-time format is valid."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public static boolean verifyDateTimeEvent(String dateTime) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        if (dateTime.length() !\u003d 20) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String date \u003d dateTime.substring(0, 10);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String time \u003d dateTime.substring(11, 20);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            int dd \u003d Integer.parseInt(date.substring(0, 2));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            int mm \u003d Integer.parseInt(date.substring(3, 5));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            int yyyy \u003d Integer.parseInt(date.substring(6, 10));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            boolean dateCorrect \u003d ((01 \u003c\u003d dd) \u0026\u0026 (dd \u003c\u003d 31)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                    \u0026\u0026 (01 \u003c\u003d mm) \u0026\u0026 (mm \u003c\u003d 12));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            int hh1 \u003d Integer.parseInt(time.substring(0, 2));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            int minutes1 \u003d Integer.parseInt(time.substring(2, 4));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            int hh2 \u003d Integer.parseInt(time.substring(5, 7));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            int minutes2 \u003d Integer.parseInt(time.substring(7, 9));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            boolean timeCorrect \u003d ((00 \u003c\u003d hh1) \u0026\u0026 (hh1 \u003c\u003d 23)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                    \u0026\u0026 (00 \u003c\u003d minutes1) \u0026\u0026 (minutes1 \u003c\u003d 59))"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                    \u0026\u0026 ((00 \u003c\u003d hh2) \u0026\u0026 (hh2 \u003c\u003d 23)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                    \u0026\u0026 (00 \u003c\u003d minutes2) \u0026\u0026 (minutes2 \u003c\u003d 59));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            return dateCorrect \u0026\u0026 timeCorrect;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            System.out.println(\"Invalid date-time format.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "uggi121"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uggi121": 67
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import java.util.IllegalFormatException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uggi121"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uggi121"
        },
        "content": " * The main class. The entire chat-bot runs from here."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uggi121"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Constructor for the Duke class."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @param filePath Filepath of the list of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        ui \u003d new Ui(this);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        tasks \u003d new TaskList(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        parser \u003d new Parser(this, tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            setStorage(new Storage(filePath));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            tasks.setTaskList(storage.loadTasks());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            System.out.println(\"Invalid file path!\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Sets the storage object to an instance at the correct filepath."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @param storage The storage object to be used."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void setStorage(Storage storage) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Executes the run method with the correct file-path input."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @param args Command line inputs."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        new Duke(\"C:/CS2103/iP/data/duke.txt\").run();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Executes and orchestrates the running of the chat-bot."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "uggi121"
        },
        "content": "         */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        ui.dukeOutput(\"Hello, this is Duke.\\n\" + \"How may I help you?\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        ui.readInputs();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Evaluates the input string from the UI."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @param input Input string from the UI"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @throws DukeException If input is invalid."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void evaluate(String input) throws DukeException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            parser.evaluateInput(input);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            storage.writeTasks(getTasksAscii());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            print(\"OOPS!!! Invalid file path.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Returns a string of tasks containing only ASCII characters."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * The string returned is suitable to be written to a plain .txt file."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @return List of tasks."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public String getTasksAscii() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            output.append((i + 1) + \". \" + tasks.get(i).getAscii());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            if (i !\u003d tasks.size() - 1) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                output.append(\"\\n\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Outputs a message through the UI."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @param message Message to be printed."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void print(String message) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        ui.dukeOutput(message);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Returns the number of tasks in the task list."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     *"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @return Number of tasks."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public String getNumberOfTasks() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        return \"Now you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Notifies the user about the most recently added task."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void printTaskAdded() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String output \u003d \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                + \"  \" + tasks.get(tasks.size() - 1).toString()"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                + \"\\n\" + getNumberOfTasks();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        ui.dukeOutput(output);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Outputs the list of tasks and their statuses."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void printTasks() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            output.append((i + 1) + \". \" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            if (i !\u003d tasks.size() - 1) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                output.append(\"\\n\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        if (output.toString().isBlank()) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            ui.dukeOutput(\"You have no tasks to do o_O!\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            ui.dukeOutput(output.toString());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uggi121": 141,
      "-": 10
    }
  },
  {
    "path": "src/main/java/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    Hello, this is Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    How may I help you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    OOPS!!! I don\u0027t know what this is :("
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    OOPS!!! I don\u0027t know what this is :("
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uggi121"
        },
        "content": "      [T][?] borrow book"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uggi121"
        },
        "content": "      [T][?] read book"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    OOPS!!! The deadline description must contain a time following \"/by\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    1. [T][?] borrow book"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    2. [T][?] read book"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uggi121"
        },
        "content": "      [D][?] return book (by: Aug 31st)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    OOPS!!! The Done command must be followed by a valid task ID."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "uggi121"
        },
        "content": "      [T][?] borrow book"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    1. [T][?] borrow book"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    2. [T][?] read book"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    3. [D][?] return book (by: Aug 31st)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    Noted. I\u0027ve deleted this task:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "uggi121"
        },
        "content": "      [T][?] borrow book"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "uggi121"
        },
        "content": "      [E][?] lecture (at: 4 PM)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "uggi121"
        },
        "content": "      [T][?] read book"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "uggi121"
        },
        "content": "      [D][?] return book (by: Aug 31st)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "uggi121"
        },
        "content": "      [E][?] lecture (at: 4 PM)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    Task doesn\u0027t exist."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    1. [T][?] read book"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    2. [D][?] return book (by: Aug 31st)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    3. [E][?] lecture (at: 4 PM)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    Bye. Have a nice day!"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      }
    ],
    "authorContributionMap": {
      "uggi121": 77
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uggi121"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uggi121"
        },
        "content": " * Represents the class responsible for parsing and evaluating user input."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uggi121"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uggi121"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    private Duke parent;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public Parser(Duke parent, TaskList taskList) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        this.parent \u003d parent;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Evaluates the input entered by the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @param input The user input"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @throws DukeException If the input is invalid."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void evaluateInput(String input) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        if (input.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            parent.print(\"Bye. Have a nice day!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        } else if (input.equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            parent.printTasks();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        } else if (input.toLowerCase().startsWith(\"done\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            evaluateDone(input);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        } else if (input.toLowerCase().startsWith(\"todo\")"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                || input.toLowerCase().startsWith(\"deadline\")"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                || input.toLowerCase().startsWith(\"event\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            taskList.addTask(input);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        } else if (input.toLowerCase().startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            taskList.deleteTask(input);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        } else if (input.toLowerCase().startsWith(\"find\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            evaluateFind(input);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            throw new DukeException(\"OOPS!!! I don\u0027t know what this is :(\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Evaluates the \"Done\" command."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @param input The input with a \"Done\" command."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @throws DukeException If \"Done\" command is invalid."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void evaluateDone(String input) throws DukeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String number \u003d input.substring(4, input.length()).strip();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        if (number.isEmpty()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            parent.print(\"Invalid input! Mention a valid task number.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                int taskNumber \u003d Integer.parseInt(number);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                if (taskNumber \u003e taskList.size()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                    parent.print(\"Task doesn\u0027t exist.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                    taskList.get(taskNumber - 1).markAsDone();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                    String output \u003d \"Nice! I\u0027ve marked this task as done:\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                            + \"\\n  \""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                            + taskList.get(taskNumber - 1).toString();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                    parent.print(output);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            } catch (IndexOutOfBoundsException | NumberFormatException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                throw new DukeException(\"OOPS!!! The Done command must be followed by a valid task ID.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void evaluateFind(String input) throws DukeException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String[] tokens \u003d input.split(\"\\\\s\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        if (tokens.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            throw new DukeException(\"Invalid find command\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            ArrayList\u003cTask\u003e foundTasks \u003d taskList.find(input.substring(4).strip());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            for (int i \u003d 0; i \u003c foundTasks.size(); i++) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                output.append((i + 1) + \". \" + foundTasks.get(i).toString());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                if (i !\u003d foundTasks.size() - 1) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                    output.append(\"\\n\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            parent.print(output.toString());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "uggi121"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uggi121": 90
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uggi121"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uggi121"
        },
        "content": " * Deals with reading and writing tasks to an external file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uggi121"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uggi121"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Constructs a storage object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @param filePath Filepath of the external list of tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        setFilePath(filePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Sets the filepath to the input path."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @param filePath The path to be used."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void setFilePath(String filePath) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Writes the input string to the external file."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @param content The list of tasks to be written."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @throws IOException If the file doesn\u0027t exist."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void writeTasks(String content) throws IOException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        fw.write(content);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Loads the list of tasks from the external file."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @return An ArrayList of tasks."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @throws FileNotFoundException If the filepath is incorrect."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public ArrayList\u003cTask\u003e loadTasks() throws FileNotFoundException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        if (!f.exists()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            throw new FileNotFoundException(\"Please check your file path!\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        Scanner scanner \u003d new Scanner(f);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                String line \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                tasks.add(parseStoredTask(line));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                // What to do?"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Parses the task description from the external file and creates a corresponding task to represent it."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @param task The task description in the external file."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @return Corresponding task."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @throws DukeException If the task description is incorrect."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public Task parseStoredTask(String task) throws DukeException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String[] tokens \u003d task.substring(3).split(\"\\\\s\\\\|\\\\s\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        if (tokens[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            Deadline d \u003d new Deadline(tokens[2], tokens[3]);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            if (tokens[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                d.setDone(true);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            return d;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        } else if (tokens[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            Event e \u003d new Event(tokens[2], tokens[3]);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            if (tokens[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                e.setDone(true);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            return e;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        } else if (tokens[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            Todo t \u003d new Todo(tokens[2]);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            if (tokens[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                t.setDone(true);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            return t;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            throw new DukeException(\"OOPS!!! Invalid task.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "uggi121"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uggi121": 108
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uggi121"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uggi121"
        },
        "content": " * Deals with the storage and manipulation of tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uggi121"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uggi121"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    private Duke parent;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public TaskList(Duke parent) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        this.parent \u003d parent;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Sets the task list to the input list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @param taskList The task list to be used by Duke."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void setTaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Retrieves the task at the specified index."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @param index ID of the task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @return The corresponding task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * The number of tasks in the list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @return The number of tasks."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Adds a Task to the list of tasks."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @param task The task to be added."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Removes the task from the specified index."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @param index The index from which a task should be removed."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void remove(int index) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Deletes the task specified by ID."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @param input The Delete command"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @throws DukeException If the Delete command is invalid."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void deleteTask(String input) throws DukeException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String[] tokens \u003d input.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        if (tokens.length !\u003d 2) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            throw new DukeException(\"OOPS!!! Invalid delete command.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                int taskNumber \u003d Integer.parseInt(tokens[1]);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                Task removedTask \u003d taskList.get(taskNumber - 1);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                taskList.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                String message \u003d \"Noted. I\u0027ve deleted this task:\\n\""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                        + \"  \" + removedTask.toString()"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                        + \"\\n\" + parent.getNumberOfTasks();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                parent.print(message);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                throw new DukeException(\"OOPS!!! Please enter a valid number after delete.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Adds the specified task to the list of tasks."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void addTask(String description) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String[] tokens \u003d description.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String taskType \u003d tokens[0];"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        //System.out.println(taskType);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            if (taskType.equalsIgnoreCase(\"Event\")) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                addEvent(description);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            } else if (taskType.equalsIgnoreCase(\"Todo\")) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                addTodo(description);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            } else if (taskType.equalsIgnoreCase(\"Deadline\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                addDeadline(description);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                parent.print(\"Invalid task!\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            parent.print(e.getMessage());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Adds an Event to the list of tasks."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     *"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @param description Description of the event."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @throws DukeException If the description is invalid."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void addEvent(String description) throws DukeException {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        int indexOfAt \u003d description.indexOf(\"/at\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        if (indexOfAt \u003d\u003d -1) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            throw new DukeException(\"OOPS!!! The event description must contain a time following \\\"/at\\\"\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String desc \u003d description.substring(5, indexOfAt).strip();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String at \u003d description.substring(indexOfAt + 3).strip();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        if (!Date.verifyDateTimeEvent(at)) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            parent.print(\"Invalid format! Please stick to DD/MM/YYYY HHMM-HHMM\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            taskList.add(new Event(desc, at));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            parent.printTaskAdded();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Adds a \"To do\" to the task list."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     *"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @param description Description of the To do task."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @throws DukeException If the description is invalid."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void addTodo(String description) throws DukeException {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String[] tokens \u003d description.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        StringBuilder desc \u003d new StringBuilder();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        for (int i \u003d 1; i \u003c tokens.length; i++) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            desc.append(tokens[i] + \" \");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String newDescription \u003d desc.toString().strip();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        taskList.add(new Todo(newDescription));"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        parent.printTaskAdded();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Adds a deadline to the task list."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     *"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @param description Description of the deadline."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @throws DukeException If description is invalid."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void addDeadline(String description) throws DukeException {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        int indexOfBy \u003d description.indexOf(\"/by\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        if (indexOfBy \u003d\u003d -1) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            throw new DukeException(\"OOPS!!! The deadline description must contain a time following \\\"/by\\\"\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String desc \u003d description.substring(8, indexOfBy).strip();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String by \u003d description.substring(indexOfBy + 3).strip();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        if (!Date.verifyDateTimeDeadline(by)) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            parent.print(\"Invalid time format! Please stick to DD/MM/YYYY HHMM\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            taskList.add(new Deadline(desc, by));"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            parent.printTaskAdded();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public ArrayList\u003cTask\u003e find(String desc) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        ArrayList\u003cTask\u003e subList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        for (Task t : taskList) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            if (t.getDescription().contains(desc)) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                subList.add(t);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        return subList;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "uggi121"
        },
        "content": "}"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "uggi121": 187
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uggi121"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uggi121"
        },
        "content": " * Represents the User-Interface commands."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uggi121"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uggi121"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    private Duke parent;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public Ui(Duke parent) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        this.parent \u003d parent;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Reads the inputs entered by the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void readInputs() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String input \u003d \"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        while (!input.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                parent.evaluate(input);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                dukeOutput(e.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Outputs the entered string, formatted with bounding lines."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @param out The string to be outputted."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void dukeOutput(String out) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String bound \u003d \"_______________________________________\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String newOutput \u003d out.replace(\"\\n\", \"\\n    \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        System.out.println(\"    \" + bound + \"\\n    \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                + newOutput + \"\\n    \" + bound);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "uggi121"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uggi121": 45
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uggi121"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uggi121"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uggi121"
        },
        "content": " * Represents exceptions unique to Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uggi121"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uggi121"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uggi121"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uggi121": 11
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uggi121"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uggi121"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uggi121"
        },
        "content": " * Represents a task due by a particular time."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uggi121"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uggi121"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        if (description.isBlank()) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Returns an ASCII description of the task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @return ASCII representation of the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public String getAscii() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        return \"D | \" + super.getAscii() + \" | \" + by;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Returns a Unicode description of the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @return Unicode representation of the task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "uggi121"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uggi121": 39
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uggi121"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uggi121"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uggi121"
        },
        "content": " * Represents a Task at a particular time eg. 2-4 PM."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uggi121"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uggi121"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public Event(String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        if (description.isBlank()) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Returns an ASCII description of the task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @return ASCII representation of the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public String getAscii() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        return \"E | \" + super.getAscii() + \" | \" + at;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Returns a unicode description of the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @return Unicode representation of the task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "uggi121"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uggi121": 39
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uggi121"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uggi121"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uggi121"
        },
        "content": " * Represents a Task that has to be done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uggi121"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uggi121"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Returns a tick or cross to represent the completion status of a task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @return A tick if done, cross otherwise."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Returns the description of the task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @return The description."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Returns a boolean value representing the task\u0027s completion status"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @return True if done, false if not."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Sets the completion status of the task to the input boolean."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @param done The boolean value to set the completion status to."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Marks the task as completed."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        setDone(true);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Returns an ASCII description of the task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @return ASCII representation of the task."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public String getAscii() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String doneOrNot \u003d isDone() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        return doneOrNot + \" | \" + getDescription();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Returns a Unicode description of the task."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @return Unicode representation of the task."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String value \u003d \"[\" + getStatusIcon() + \"]\" + \" \" + getDescription();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "uggi121"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uggi121": 77
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uggi121"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uggi121"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uggi121"
        },
        "content": " * Represents a simple task to be done."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uggi121"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uggi121"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public Todo(String description) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        if (description.isBlank()) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a Todo cannot be empty.\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Returns an ASCII description of the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @return ASCII representation of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public String getAscii() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        return \"T | \" + super.getAscii();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * Returns a Unicode description of the task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     * @return Unicode representation of the task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uggi121"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "uggi121"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uggi121": 36
    }
  },
  {
    "path": "src/test/java/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uggi121"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void parseStoredTask_invalidInput_Exception() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            assertEquals(\"\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                    new Storage(\"c:/cs2103/ip/data/duke.txt\").parseStoredTask(\"F | Respect\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        } catch (IOException | DukeException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            assertEquals(\"OOPS!!! Invalid task.\", e.getMessage());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uggi121"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uggi121": 20
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uggi121"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void getAscii_normalDescription_success() throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        assertEquals(\"T | 0 | abc\", (new Todo(\"abc\")).getAscii());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        assertEquals(\"T | 0 | return book\", (new Todo(\"return book\")).getAscii());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        assertEquals(\"T | 0 | buy book\", (new Todo(\"buy book\")).getAscii());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void constructor_blankDescription_exception() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            assertEquals(\"\", new Todo(\" \"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            assertEquals(\"OOPS!!! The description of a Todo cannot be empty.\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                    e.getMessage());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uggi121"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uggi121": 27
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uggi121"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uggi121"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uggi121"
        },
        "content": "if not exist C:\\CS2103\\iP\\bin mkdir C:\\CS2103\\iP\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uggi121"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uggi121"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uggi121"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uggi121"
        },
        "content": "javac  -cp C:\\CS2103\\iP\\src\\ -Xlint:none -d C:\\CS2103\\iP\\bin C:\\cs2103\\iP\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uggi121"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uggi121"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uggi121"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uggi121"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uggi121"
        },
        "content": "java -classpath C:\\CS2103\\iP\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uggi121"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uggi121"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "uggi121": 21
    }
  }
]
