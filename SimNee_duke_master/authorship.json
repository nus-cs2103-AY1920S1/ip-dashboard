[
  {
    "path": "TaskList.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SimNee"
        },
        "content": "todo`âœ˜`aa`"
      }
    ],
    "authorContributionMap": {
      "SimNee": 1
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SimNee"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SimNee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "SimNee": 7
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SimNee"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public String execute(TaskList taskList, UI ui,Storage storage, String input) throws DukeException, IOException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        storage.LoadFile();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        ui.printGreeting();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        String TaskLine \u003d input;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        String reply \u003d \"\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        outLoop:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        while (TaskLine !\u003d null) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            String[] words \u003d TaskLine.split(\" \");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            switch (parser.parse(TaskLine)) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            case BYE:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                reply \u003d ui.printBye();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                break outLoop;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            case LIST :"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                reply \u003d ui.printList(taskList);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                break outLoop;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            case DONE :"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    int taskNo \u003d Integer.parseInt(TaskLine.substring(5));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    taskList.get(taskNo - 1).markAsDone(taskList.get(taskNo - 1));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    reply \u003d ui.printDone(taskList.get(taskNo - 1));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    reply \u003d ui.throwInputError(\"done\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                break outLoop;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            case TODO :"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                        if (taskList.get(i).getDescription().equals(TaskLine.substring(5))) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                            reply \u003d  ui.throwInputError(\"duplicate\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                            break outLoop;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    Task todoTask \u003d new Todo(TaskLine.substring(5));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    taskList.add(todoTask);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    reply \u003d  ui.printAddTask(todoTask,taskList.size());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                } catch (Exception e){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    reply \u003d ui.throwInputError(\"todo\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                break outLoop;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            case DEADLINE :"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    int indexOfSlash \u003d TaskLine.indexOf(\"/\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                        if (taskList.get(i).getDescription().equals(TaskLine.substring(8, indexOfSlash - 1)) \u0026\u0026"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                            taskList.get(i).getDate().equals(TaskLine.substring(indexOfSlash + 4))) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                            reply \u003d ui.throwInputError(\"duplicate\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                            break outLoop;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    Task deadlineTask \u003d new Deadline(TaskLine.substring(8, indexOfSlash - 1), TaskLine.substring(indexOfSlash + 4));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    taskList.add(deadlineTask);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    reply \u003d ui.printAddTask(deadlineTask, taskList.size());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                } catch (Exception e){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    reply \u003d ui.throwInputError(\"deadline\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                break outLoop;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            case EVENT :"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    int indexOfSlash \u003d TaskLine.indexOf(\"/\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                        if (taskList.get(i).getDescription().equals(TaskLine.substring(6, indexOfSlash - 1)) \u0026\u0026"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                                taskList.get(i).getDate().equals(TaskLine.substring(indexOfSlash + 4))) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                            reply \u003d ui.throwInputError(\"duplicate\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                            break outLoop;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    Task eventTask \u003d new Event(TaskLine.substring(6, indexOfSlash - 1), TaskLine.substring(indexOfSlash + 4));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    taskList.add(eventTask);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    reply \u003d ui.printAddTask(eventTask, taskList.size());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    reply \u003d  ui.throwInputError(\"event\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                break outLoop;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            case DELETE :"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    int taskNoDelete \u003d Integer.parseInt(TaskLine.substring(7));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    Task deletedTask \u003d taskList.get(taskNoDelete - 1);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    reply \u003d  ui.printDelete(deletedTask, taskList.size());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    taskList.remove(taskNoDelete - 1);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    reply \u003d ui.throwInputError(\"delete\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                break outLoop;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            case FIND :"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    String keyword \u003d TaskLine.substring(5);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    TaskList findList \u003d new TaskList();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                        if (taskList.get(i).getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                            findList.add(taskList.get(i));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    reply \u003d  ui.printFind(findList);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    reply \u003d ui.throwInputError(\"find\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                break outLoop;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            default :"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                reply \u003d  ui.printIDK();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                break outLoop;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        storage.UpdateFile();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "SimNee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SimNee": 123
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SimNee"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    protected LocalDate myDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    protected LocalTime myTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    protected DateTimeFormatter myFormatDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public Deadline(String description, String date) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        this.type \u003d \"deadline\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        String[] dateAndTime \u003d date.split(\" \");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        String dateString \u003d dateAndTime[0];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        String year \u003d dateString.split(\"/\")[2];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        String month \u003d dateString.split(\"/\")[1];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        if (month.length() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            month \u003d \"0\" + month;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        String day \u003d dateString.split(\"/\")[0];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        if (day.length() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            day \u003d \"0\" + day;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        String timeString \u003d dateAndTime[1];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        String hour \u003d timeString.substring(0,2);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        String minute \u003d timeString.substring(2,4);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        myFormatDate \u003d DateTimeFormatter.ofPattern(\"dd-MMM-yyyy\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        myDate \u003d LocalDate.parse(String.format(\"%s-%s-%s\", year, month, day));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        myTime \u003d LocalTime.parse(hour + \":\" + minute);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        return \"[D][\" + getStatusIcon() + \"]\" + description + \" (by: \" + myDate.format(myFormatDate) + \" \" + myTime + \")\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SimNee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SimNee": 44
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SimNee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SimNee"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SimNee"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SimNee"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SimNee"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SimNee"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SimNee"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SimNee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SimNee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SimNee": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SimNee"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    private Command c;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        });"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        });"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SimNee"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SimNee"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SimNee"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SimNee"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SimNee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SimNee"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SimNee"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SimNee"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SimNee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                DialogBox.getUserDialog(userText.getText(), new ImageView(user).getImage()),"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                DialogBox.getDukeDialog(dukeText.getText(), new ImageView(duke).getImage())"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        );"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        assert userInput.getText().isEmpty() : \"user input should be reset\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "SimNee"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "SimNee"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "SimNee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    protected String getResponse(String input) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        if (input !\u003d null) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            String output \u003d \"\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                UI ui \u003d new UI();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                Storage storage \u003d new Storage(taskList);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                Command c \u003d new Command();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                output \u003d c.execute(taskList, ui, storage, input);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            return \"TaiPing say: \" + output;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            return \"error\";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "SimNee": 146
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SimNee"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SimNee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SimNee": 6
    }
  },
  {
    "path": "src/main/java/Echo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SimNee"
        },
        "content": "public class Echo {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public static void RecurrEcho() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        String bye \u003d \"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                \"     Bye. Hope to see you again soon!\\n\" +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        String echo \u003d sc.nextLine();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        if (echo.equals(\"bye\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            System.out.println(bye);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    echo +\"\\n\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            RecurrEcho();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        String greet \u003d \"___________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                \"     Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                \"     What can I do for you?\\n\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                \"____________________________________________________________\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        System.out.println(greet);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        RecurrEcho();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SimNee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SimNee": 30
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SimNee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SimNee"
        },
        "content": " * Event is a form of task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SimNee"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SimNee"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    protected LocalDate myDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    protected LocalTime myTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    protected DateTimeFormatter myFormatDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SimNee"
        },
        "content": "     * A task which has a starting date (at when)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SimNee"
        },
        "content": "     * @param description the information of the given task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SimNee"
        },
        "content": "     * @param date the starting date of the task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SimNee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public Event(String description, String date) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        this.type \u003d \"event\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        String[] dateAndTime \u003d date.split(\" \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        String dateString \u003d dateAndTime[0];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        String year \u003d dateString.split(\"/\")[2];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        String month \u003d dateString.split(\"/\")[1];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        if (month.length() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            month \u003d \"0\" + month;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        String day \u003d dateString.split(\"/\")[0];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        if (day.length() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            day \u003d \"0\" + day;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        String timeString \u003d dateAndTime[1];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        String hour \u003d timeString.substring(0,2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        String minute \u003d timeString.substring(2,4);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        myFormatDate \u003d DateTimeFormatter.ofPattern(\"dd-MMM-yyyy\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        myDate \u003d LocalDate.parse(String.format(\"%s-%s-%s\", year, month, day));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        myTime \u003d LocalTime.parse(hour + \":\" + minute);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        return \"[E][\" + getStatusIcon() + \"]\" + description + \" (at: \" + myDate.format(myFormatDate) + \" \" + myTime + \")\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SimNee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SimNee": 51
    }
  },
  {
    "path": "src/main/java/InputType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SimNee"
        },
        "content": "public enum InputType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    BYE,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    FIND,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    ERROR;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        return name().toLowerCase();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SimNee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SimNee": 16
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SimNee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SimNee"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SimNee"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SimNee"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SimNee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SimNee": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SimNee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SimNee"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SimNee"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SimNee"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SimNee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SimNee": 29
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SimNee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SimNee"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SimNee"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SimNee"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SimNee"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SimNee"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SimNee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        );"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SimNee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SimNee": 49
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SimNee"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public Parser(){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public InputType parse(String fullCommand) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        String[] words \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        switch (words[0]) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        case (\"bye\") :"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            return InputType.BYE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        case (\"list\") :"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            return InputType.LIST;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        case (\"todo\") :"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            return InputType.TODO;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        case (\"event\") :"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            return InputType.EVENT;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        case (\"deadline\") :"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            return InputType.DEADLINE;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        case (\"done\") :"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            return InputType.DONE;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        case (\"delete\") :"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            return InputType.DELETE;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        case (\"find\") :"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            return InputType.FIND;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        default :"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            return InputType.ERROR;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SimNee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SimNee": 37
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SimNee"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    protected TaskList taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    protected File taskListText;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public Storage(TaskList taskList){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public void LoadFile() throws IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            CheckFile();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            taskListText \u003d new File(\"TaskList.txt\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            BufferedReader TasksFile \u003d new BufferedReader(new FileReader(taskListText));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            String LineFile \u003d \"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            while ((LineFile \u003d TasksFile.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                String[] WordsFile \u003d LineFile.split(\"`\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                switch (WordsFile[0]) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                case (\"todo\"):"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    Task todoFile \u003d new Todo(WordsFile[2]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    taskList.add(todoFile);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    if (WordsFile[1].equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                        todoFile.markAsDone(todoFile);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                case (\"event\"):"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    Task eventFile \u003d new Event(WordsFile[2], WordsFile[3]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    taskList.add(eventFile);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    if (WordsFile[1].equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                        eventFile.markAsDone(eventFile);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                case (\"deadline\"):"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    Task deadlineFile \u003d new Deadline(WordsFile[2], WordsFile[3]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    taskList.add(deadlineFile);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    if (WordsFile[1].equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                        deadlineFile.markAsDone(deadlineFile);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    System.out.println(\"error\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public void UpdateFile() throws IOException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        try (PrintStream out \u003d new PrintStream(new FileOutputStream(taskListText))) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                Task t \u003d taskList.get(i);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                if (t.getType().equals(\"todo\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    out.print(t.getType() + \"`\" + t.getStatusIcon() + \"`\" + t.getDescription() + \"`\" + \"\\n\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    out.print(t.getType() + \"`\" + t.getStatusIcon() + \"`\" + t.getDescription() + \"`\" + t.getDate() + \"\\n\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public void CheckFile() throws IOException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        File tmpDir \u003d new File(\"TaskList.txt\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        if (!tmpDir.exists()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            tmpDir.createNewFile();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SimNee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SimNee": 79
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SimNee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SimNee"
        },
        "content": " * Handles the tasks"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SimNee"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SimNee"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        return (description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public void markAsDone(Task t) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        t.isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        //Date date \u003d new Date(2019,12,9,12,05);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SimNee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SimNee": 36
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SimNee"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    protected ArrayList\u003cTask\u003e listOfTask;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        this.listOfTask \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        listOfTask.add(task);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        return listOfTask.size();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        return listOfTask.get(index);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public void remove(int index) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        listOfTask.remove(index);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SimNee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SimNee": 26
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SimNee"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        this.type \u003d \"todo\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        return \"[T][\" + getStatusIcon() + \"]\" + description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SimNee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SimNee": 12
    }
  },
  {
    "path": "src/main/java/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SimNee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SimNee"
        },
        "content": " * Printing of the dialogues"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SimNee"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SimNee"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public UI() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    String line \u003d (\"____________________________________________________\\n\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    String lineOnly \u003d (\"____________________________________________________\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public String printGreeting() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        String logo \u003d \"   _     _      _     _      _     _       _     _      _     _      _     _      _     _   \\n\" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                \"  (c).-.(c)    (c).-.(c)    (c).-.(c)     (c).-.(c)    (c).-.(c)    (c).-.(c)    (c).-.(c)  \\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                \"   / ._. \\\\      / ._. \\\\      / ._. \\\\       / ._. \\\\      / ._. \\\\      / ._. \\\\      / ._. \\\\   \\n\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                \" __\\\\( Y )/__  __\\\\( Y )/__  __\\\\( Y )/__   __\\\\( Y )/__  __\\\\( Y )/__  __\\\\( Y )/__  __\\\\( Y )/__ \\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                \"(_.-/\u0027-\u0027\\\\-._)(_.-/\u0027-\u0027\\\\-._)(_.-/\u0027-\u0027\\\\-._) (_.-/\u0027-\u0027\\\\-._)(_.-/\u0027-\u0027\\\\-._)(_.-/\u0027-\u0027\\\\-._)(_.-/\u0027-\u0027\\\\-._)\\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                \"   || T ||      || A ||      || I ||       || P ||      || I ||      || N ||      || G ||   \\n\" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                \" _.\u0027 `-\u0027 \u0027._  _.\u0027 `-\u0027 \u0027._  _.\u0027 `-\u0027 \u0027._   _.\u0027 `-\u0027 \u0027._  _.\u0027 `-\u0027 \u0027._  _.\u0027 `-\u0027 \u0027._  _.\u0027 `-\u0027 \u0027._ \\n\" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                \"(.-./`-\u0027\\\\.-.)(.-./`-\u0027\\\\.-.)(.-./`-\u0027\\\\.-.) (.-./`-\u0027\\\\.-.)(.-./`-\u0027\\\\.-.)(.-./`-\u0027\\\\.-.)(.-./`-\u0027\\\\.-.)\\n\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                \" `-\u0027     `-\u0027  `-\u0027     `-\u0027  `-\u0027     `-\u0027   `-\u0027     `-\u0027  `-\u0027     `-\u0027  `-\u0027     `-\u0027  `-\u0027     `-\u0027 \";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        String greet \u003d line +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                \"     Hello! I\u0027m Tai Ping, your tasks manager!\\n\" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                \"     What can I do for you?\\n\" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                lineOnly;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        return \"Hello from\\n\" + logo + greet;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public String printBye() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        String bye \u003d line +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                \"Bye. Hope to see you again soon! (áµ”á´¥áµ”) \\n\" +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                line;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        return bye;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public String printIDK() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        return line +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means (áµ”á´¥áµ”) \\n\" +"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                lineOnly;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public String printList(TaskList taskList) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        String tasks \u003d \"\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            Task t \u003d taskList.get(i);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            tasks \u003d tasks + count + \".\" + t.toString() + \"\\n\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        return (line +"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                \"Here are the task(s) in your list:\\n\" +"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                tasks +"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                line);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public String printDone(Task task) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        return (line +"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                \"Congratulations! I\u0027ve marked this task as done: \\n\" +"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        \"[\" + task.getStatusIcon() + \"] \" + task.getDescription() + \"\\n\" +"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        line);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public String printAddTask(Task task, int taskListSize) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        return line +"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                \"Got it. I\u0027ve added this task: \\n\" +"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        task.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        \"Now you have \" +  taskListSize + \" task(s) in the list.\\n\" +"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        line;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public String printDelete(Task deletedTask, int taskListSize) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        return line +"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                \"Noted. I\u0027ve removed this task: \\n\" +"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                deletedTask.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                \"Now you have \" + (taskListSize - 1) + \" task(s) in the list.\\n\" +"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                lineOnly;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public String printFind(TaskList findList) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        String tasks \u003d \"\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        for (int i \u003d 0; i \u003c findList.size(); i++) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            Task t \u003d findList.get(i);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            tasks \u003d tasks + count + \".\" + t.toString() +\"\\n\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        return line +"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                \"Here are the matching tasks in your list:\\n\" +"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                tasks + \"\\n\" +"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                line;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    public String throwInputError(String taskType) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        case \"todo\" :"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            return (line +"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    \"Hey! Description of a todo cannot be empty (áµ”á´¥áµ”) \\n\" +"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    lineOnly);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        case \"event\" :"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            return (line +"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    \"Hey! Description of a event cannot be empty (áµ”á´¥áµ”) \\n\" +"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    lineOnly);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        case \"deadline\" :"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            return (line +"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    \"Hey! Description of a deadline cannot be empty (áµ”á´¥áµ”) \\n\" +"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    lineOnly);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        case \"done\" :"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            return (line +"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    \"Hey! Description of a done cannot be empty (áµ”á´¥áµ”)\\n\" +"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    lineOnly);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        case \"delete\" :"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            return (line +"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    \"Hey! Description of a delete cannot be empty (áµ”á´¥áµ”) \\n\" +"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    lineOnly);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        case \"duplicate\" :"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            return (line +"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    \"Hey! You are repeating your tasks (áµ”á´¥áµ”) \\n\" +"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    lineOnly);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        default :"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            return (line +"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means (áµ”á´¥áµ”) \\n\" +"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                    lineOnly);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "SimNee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SimNee": 130
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SimNee"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SimNee"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SimNee"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SimNee"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SimNee"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SimNee"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SimNee"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "SimNee": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SimNee"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SimNee"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SimNee"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SimNee"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SimNee"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SimNee"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SimNee"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SimNee"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Type your input here\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SimNee"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            \u003cFont name\u003d\"Futura Medium\" size\u003d\"18.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SimNee"
        },
        "content": "         \u003c/font\u003e\u003c/TextField\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SimNee"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            \u003cFont name\u003d\"Futura Medium\" size\u003d\"13.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SimNee"
        },
        "content": "         \u003c/font\u003e\u003c/Button\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SimNee"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "SimNee": 26
    }
  },
  {
    "path": "src/test/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SimNee"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    void parse() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        Parser parseTest \u003d new Parser();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        InputType bye \u003d  parseTest.parse(\"bye\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        InputType list \u003d  parseTest.parse(\"list\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        InputType todo \u003d  parseTest.parse(\"todo abc\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        InputType event \u003d  parseTest.parse(\"event abc /at 9/12/2019 0000\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        InputType deadline \u003d  parseTest.parse(\"deadline abc /at 9/12/2019 0000\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        InputType done \u003d  parseTest.parse(\"done 1\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        InputType delete \u003d  parseTest.parse(\"delete 1\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        if (!(bye.equals(InputType.BYE)) ||"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            !(list.equals(InputType.LIST)) ||"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            !(todo.equals(InputType.TODO)) ||"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            !(event.equals(InputType.EVENT)) ||"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            !(deadline.equals(InputType.DEADLINE)) ||"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            !(done.equals(InputType.DONE)) ||"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            !(delete.equals(InputType.DELETE))) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SimNee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SimNee": 28
    }
  },
  {
    "path": "src/test/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SimNee"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SimNee"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    TaskList taskListTest \u003d new TaskList();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    void add() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            taskListTest.add(new Todo(\"todo abc\"));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            taskListTest.add(new Deadline(\"deadline abc\", \"9/12/2019 0000\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            taskListTest.add(new Event(\"event abc\", \"9/12/2019 0000\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            fail(e.getMessage());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    void size() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            taskListTest.add(new Todo(\"todo abc\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            taskListTest.add(new Deadline(\"deadline abc\", \"9/12/2019 0000\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            taskListTest.add(new Event(\"event abc\", \"9/12/2019 0000\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            if (taskListTest.size() !\u003d 3) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SimNee"
        },
        "content": "                fail();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            fail(e.getMessage());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SimNee"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SimNee"
        },
        "content": "//    void get() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SimNee"
        },
        "content": "//        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SimNee"
        },
        "content": "//            taskListTest.add(new Todo(\"todo abc\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SimNee"
        },
        "content": "//            taskListTest.add(new Deadline(\"deadline abc\", \"9/12/2019 0000\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SimNee"
        },
        "content": "//            taskListTest.add(new Event(\"event abc\", \"9/12/2019 0000\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SimNee"
        },
        "content": "//        } catch (Exception e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SimNee"
        },
        "content": "//            fail(e.getMessage());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SimNee"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SimNee"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    void remove() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            taskListTest.add(new Todo(\"todo abc\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            taskListTest.add(new Deadline(\"deadline abc\", \"9/12/2019 0000\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            taskListTest.add(new Event(\"event abc\", \"9/12/2019 0000\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            taskListTest.remove(0);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            taskListTest.remove(0);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            taskListTest.remove(0);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SimNee"
        },
        "content": "            fail(e.getMessage());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SimNee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SimNee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SimNee": 56
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SimNee"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SimNee"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SimNee"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SimNee"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SimNee"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SimNee"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SimNee"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SimNee"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SimNee"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SimNee"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SimNee"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SimNee"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SimNee"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SimNee"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SimNee"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SimNee"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SimNee"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SimNee"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SimNee"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SimNee"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SimNee"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SimNee"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SimNee"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "SimNee": 34
    }
  }
]
