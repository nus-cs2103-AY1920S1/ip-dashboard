[
  {
    "path": "src/main/java/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "public class Deadlines extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    private String datetime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    Deadlines(String name, String datetime) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "        this.datetime \u003d datetime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "        return \"[D]\" +  super.toString() + \" (by: \" + datetime + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Andy Lam": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "        String welcomeMessage \u003d \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "        System.out.println(welcomeMessage);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "        Scanner reader \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "            String currentLine \u003d reader.nextLine();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "            if (currentLine.equals(\"bye\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "            } else if (currentLine.equals(\"list\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                int count \u003d 1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                for (Task task: list) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                    System.out.println(\"\" + count + \".\" + task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                    count++;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                String[] strArr \u003d currentLine.split(\" \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                String command \u003d strArr[0];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                Task t;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                int index;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                    switch (command) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                        case \"todo\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                            String todo \u003d toDoString(strArr);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                            t \u003d new ToDo(todo);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                            list.add(t);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                            System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                            System.out.println(\"  \" + t);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                            System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                        case \"deadline\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                            String[] deadline \u003d deadlineEventString(strArr, true);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                            t \u003d new Deadlines(deadline[0], deadline[1]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                            list.add(t);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                            System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                            System.out.println(\"  \" + t);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                            System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                        case \"event\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                            String[] event \u003d deadlineEventString(strArr, false);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                            t \u003d new Event(event[0], event[1]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                            list.add(t);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                            System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                            System.out.println(\"  \" + t);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                            System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                        case \"done\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                            index \u003d Integer.parseInt(strArr[1]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                            list.get(index - 1).setDone();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                        case \"delete\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                            index \u003d Integer.parseInt(strArr[1]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                            Task deleted \u003d list.remove(index - 1);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                            System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                            System.out.println(\"  \" + deleted);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                            System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                        default:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                    System.out.println(e);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    private static String[] deadlineEventString(String[] arr, boolean deadline) throws DukeException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "        String[] res \u003d new String[2];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "        int divide \u003d 0;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "        for (int i \u003d 1; i \u003c arr.length; i++) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "            if (deadline \u0026\u0026 arr[i].equals(\"/by\") || !deadline \u0026\u0026 arr[i].equals(\"/at\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                divide \u003d i;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "            sb.append(arr[i]);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "            sb.append(\" \");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "        res[0] \u003d sb.toString().trim();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "        if (res[0].isEmpty())"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a \" + (deadline ? \"deadline\" : \"event\") + \" cannot be empty.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "        sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "        for (int i \u003d divide + 1; i \u003c arr.length; i++) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "            sb.append(arr[i]);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "            sb.append(\" \");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "        res[1] \u003d sb.toString().trim();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    private static String toDoString(String[] arr) throws DukeException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "        for (int i \u003d 1; i \u003c arr.length; i++) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "            sb.append(arr[i]);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "            sb.append(\" \");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "        String res \u003d sb.toString().trim();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "        if (res.isEmpty())"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Andy Lam": 105,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    private String e;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    DukeException(String e) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "        super(e);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "        this.e \u003d e;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "        return this.e;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Andy Lam": 13
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    private String datetime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    Event(String name, String datetime) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "        this.datetime \u003d datetime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "        return \"[E]\" +  super.toString() + \" (at: \" + datetime + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Andy Lam": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    private boolean done \u003d false;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    Task(String name) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    void setDone() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "        System.out.println(\"  \" + this.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "        return (\"[\" + (this.done ? \"✓\" : \"✗\") + \"]\" + \" \" + this.name);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Andy Lam": 19
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    ToDo(String name) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "        return \"[T]\" +  super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Andy Lam": 10
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Andy Lam"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Andy Lam": 34
    }
  }
]
