[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "run {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "test {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 31,
      "-": 15
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "[1. Introduction](#Introduction)  "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "[2. Quick Start](#Quick Start)  "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "[3. Features](#Features)    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "[4. FAQ](#FAQ)   "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "[5. Command Summary](##Command Summary) "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "## 1. Introduction \u003ca name\u003d\"Introduction\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "The DukeBot is for those who prefer to use a desktop app for managing tasks. "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "More importantly, DukeBot is optimized for those who prefer to work with a Command "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).  "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "Have fun!"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "## 2. Quick Start \u003ca name\u003d\"Quick Start\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "1. Ensure you have Java 11 or above installed in your Computer.  "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "1. Download the latest dukebot.jar at [here](https://github.com/calvincxz/duke/releases)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "## 3. Features "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "### 3.1 Viewing help"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "Input \"help\" to view a simple guide to command formats.  "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "Format: help"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "### 3.2. Adding a task: t, d, e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "* Adds a task to the DukeBot."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    * todo TASK NAME "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    * event TASK NAME  /at dd/mm/yyyy hhmm hhmm  "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    * deadline TASK NAME  /by dd/mm/yyyy *hhmm"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "* e.g. `event party /at 01/01/2011 0800 1900`"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "* e.g. `t read book`"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "### 3.3. Listing all tasks : list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "Shows a list of all tasks in the list.  "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "Format: list"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "### 3.4. Finding a task by keyword: find"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "Finds tasks whose description on the list matches exactly that of the given keywords.  "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "Format: find KEYWORD "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "* `find [D]  `  "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "`Returns all Deadline tasks`"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "### 3.5. Deleting a task: delete"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "Deletes the specified task from the list.  "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "Format: delete INDEX"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "* Deletes the tasks at the specified INDEX."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "* The index refers to the index number shown in the displayed person list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "* The index must be a positive integer 1, 2, 3, …​"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "### 3.6. Marking a task as done: done  "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "Marks the specified task in the list as done.  "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "Format: done INDEX"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "* Marks the tasks at the specified INDEX."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "* The index refers to the index number shown in the displayed person list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "* The index must be a positive integer 1, 2, 3, …​"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "### 3.7. Postponing a task: postpone  "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "*Todos cannot be postponed."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "* postpone the specified task in the list.  "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "* Format: postpone INDEX DAYS HOURS MINUTES  "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "### 3.8. Writing notes for a task: note  "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "Appends the notes for a task at the end of the description with a #.  "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "Format: note NOTES"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "### 3.9. Exiting the program: bye  "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "Exits the program.  "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "Format: bye"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "## 4. FAQ"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "* None"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "## 5. Command Summary \u003ca name\u003d\"Command Summary\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "* Add : `CODE NAME DATE [TIME]`  "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "e.g. `event party /at 01/01/2011 0800 1900`   "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "e.g. `t read book`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "* Delete : `delete INDEX`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "e.g. `delete 3`"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "* Done : `done INDEX`"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "e.g. `done 3`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "* Postpone : `postpone INDEX DAY HOUR MINUTES`  "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "e.g. `postpone 3 0 4 0`"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "* Note: `note NOTES`  "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "e.g. `note blahblahblah`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "* Find : `find KEYWORD`   "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "e.g. `find [D]`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "* List : list"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "* Help : help"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "* Exit : bye"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 78,
      "-": 17
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 17,
      "-": 83
    }
  },
  {
    "path": "src/main/java/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    Task taskToAdd;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public AddCommand(Task taskToAdd) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.taskToAdd \u003d taskToAdd;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to add a task to the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param tasks the tasklist object to be used in this command"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param ui the tasklist object to be used in this command"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param storage the storage object to be used in this command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return dukes response after finding"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        tasks.addTask(taskToAdd);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assert taskToAdd !\u003d null;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assert tasks.getList() !\u003d null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        storage.updateList(tasks.getList());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return ui.print(\"Got it. I\u0027ve added this task: \\n\" + taskToAdd + \"\\nNow you have \""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                + tasks.getList().size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 30
    }
  },
  {
    "path": "src/main/java/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 14
    }
  },
  {
    "path": "src/main/java/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    int taskNumToDelete;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public DeleteCommand(int taskNumToDelete) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.taskNumToDelete \u003d taskNumToDelete;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to delete one item from the task list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * after user request."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param tasks   the tasklist object to be used in this command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param ui      the ui object to be used in this command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param storage the storage object to be used in this command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return duke response after deletion"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            t \u003d tasks.deleteTask(taskNumToDelete);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            assert tasks.getList() !\u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            storage.updateList(tasks.getList());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return \"Invalid task number :(\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return \"Invalid input\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return (\"Noted. I\u0027ve removed this task: \\n\" + t + \"\\nNow you have \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                + tasks.getList().size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 40
    }
  },
  {
    "path": "src/main/java/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    int taskNumToMark;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public DoneCommand(int taskNumToMark) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.taskNumToMark \u003d taskNumToMark;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to mark a task in the list as completed."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param tasks   the tasklist object to be used in this command"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param ui      the ui object to be used in this command"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param storage the storage object to be used in this command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return duke\u0027s response after marking the task as done"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assert Math.abs(taskNumToMark) \u003e\u003d 0;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            if (!tasks.getTask(taskNumToMark).isDone()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                tasks.doneTask(taskNumToMark);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                assert tasks.getList() !\u003d null;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                storage.updateList(tasks.getList());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                return ui.print(\"Nice! I\u0027ve marked this task as done: \""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                        + \"\\n\" + tasks.getList().get(taskNumToMark - 1));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return ui.print(\"Error, task already completed!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return \"Invalid task number :(\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return \"Invalid input\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 41
    }
  },
  {
    "path": "src/main/java/commands/ErrorCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class ErrorCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private String msg;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public ErrorCommand(String msg) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assert msg !\u003d null;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.msg \u003d msg;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to generate error message."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param tasks   the tasklist object to be used in this command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param ui      the ui object to be used in this command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param storage the storage object to be used in this command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return duke\u0027s response after error"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assert msg !\u003d null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 28
    }
  },
  {
    "path": "src/main/java/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to exit from application."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param tasks   the tasklist object to be used in this command"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param ui      the ui object to be used in this command"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param storage the storage object to be used in this command"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return duke response after exit"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assert tasks.getList() !\u003d null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        storage.updateList(tasks.getList());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return ui.print(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 27
    }
  },
  {
    "path": "src/main/java/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    String keyword;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    boolean hasFound \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to find all related tasks given"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * a keyword from user input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param tasks   the TaskList object to be used in this command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param ui      the Ui object to be used in this command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param storage the Storage object to be used in this command"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return duke response after finding"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assert keyword !\u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        String output \u003d ui.print(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assert tasks.getList() !\u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        for (Task t : tasks.getList()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            if (t.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                output +\u003d (\"\\n\" + ui.print(t.toString()));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                hasFound \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        if (!hasFound) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return \"Sorry, keyword not found!\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 41
    }
  },
  {
    "path": "src/main/java/commands/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public HelpCommand() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to generate the help page for new users."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param tasks   the TaskList object to be used in this command"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param ui      the Ui object to be used in this command"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param storage the Storage object to be used in this command"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return duke opens the help file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return new Storage(\"C:\\\\duke\\\\src\\\\main\\\\java\\\\data\\\\help.txt\").accessHelp();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 24
    }
  },
  {
    "path": "src/main/java/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to call for listing of task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * in the current list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param tasks   the TaskList object to be used in this command"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param ui      the Ui object to be used in this command"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param storage the Storage object to be used in this command"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return duke lists the tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assert tasks.getList() !\u003d null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        storage.updateList(tasks.getList());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return ui.printList(tasks.getList());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 24
    }
  },
  {
    "path": "src/main/java/commands/NoteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class NoteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private int taskNum;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private String notes;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public NoteCommand(int taskNum, String notes) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.notes \u003d notes;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to delete one item from the task list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * after user request."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return duke response after adding notes"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            Task t \u003d tasks.getTask(taskNum);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            t.addNotes(notes);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            assert tasks.getList() !\u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            storage.updateList(tasks.getList());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return (\"Noted. I\u0027ve added notes for this task: \" + t);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return \"Invalid task number :(\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return \"Invalid input\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 38
    }
  },
  {
    "path": "src/main/java/commands/PostponeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class PostponeCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    Integer taskNumToPostpone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    Integer daysToPostpone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    Integer hoursToPostpone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    Integer minutesToPostpone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * Constructor for a postpone command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param taskNumToPostpone the task number"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param daysToPostpone days"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param hoursToPostpone hours to postpone"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param minutesToPostpone minutes to postpone"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public PostponeCommand(String taskNumToPostpone, String daysToPostpone,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                           String hoursToPostpone, String minutesToPostpone) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.taskNumToPostpone \u003d Integer.parseInt(taskNumToPostpone);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.daysToPostpone \u003d Integer.parseInt(daysToPostpone);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.hoursToPostpone \u003d Integer.parseInt(hoursToPostpone);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.minutesToPostpone \u003d Integer.parseInt(minutesToPostpone);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to mark a task in the list as completed."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return duke\u0027s response after postponing a task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            assert tasks.getList() !\u003d null;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            Task t \u003d tasks.getTask(taskNumToPostpone);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            if (t.getSymbol().equals(\"E\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                Event event \u003d (Event) t;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                event.postpone(daysToPostpone, hoursToPostpone, minutesToPostpone);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                storage.updateList(tasks.getList());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                return \"Changes were made: \\n \" + event.toString();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            } else if (t.getSymbol().equals(\"D\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                Deadline deadline \u003d (Deadline) t;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                deadline.postpone(daysToPostpone, hoursToPostpone, minutesToPostpone);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                storage.updateList(tasks.getList());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                return \"Changes were made: \\n \" + deadline;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                assert t.getSymbol().equals(\"T\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                return ui.print(\"Todo task cannot be postponed!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return \"Invalid task number :(\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return e.toString() + \"\\nInput format should be: postpone taskNumber days hrs mins :) \\n \""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                    + \"Example: postpone 1 0 4 0 will postpone task 1 by 4 hours.\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 63
    }
  },
  {
    "path": "src/main/java/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "D // 0 // duke IP // 14/09/2019"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "D // 1 // upload duke jar // 20/09/2019"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "D // 0 // duke TP // 09/10/2019"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "T // 1 // read book #harry potter #chapter2"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "T // 0 // revise UML diagrams"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 5
    }
  },
  {
    "path": "src/main/java/data/help.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "Duke arranges the tasks in chronological order, with Todo at the end."
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "List of commands with format:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "1. add"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    todo TASK NAME"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    event TASK NAME  /at dd/mm/yyyy hhmm hhmm"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    deadline TASK NAME  /by dd/mm/yyyy *hhmm"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    e.g. event party /at 01/01/2011 0800 1900"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    e.g. deadline homework /by 01/01/2019"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    e.g. t read book"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "2. delete [task number]   | E.g. delete 2"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "3. done [task number]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "4. find [keyword]       | E.g. find D or find [D] for deadlines"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "5. list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "6. postpone [task number] [hour] [minutes] [seconds]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "7. note [task number] [notes to add] *notes cannot be deleted!"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "8. bye | Exits the app."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "calvincxz": 18
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.scene.control.ProgressBar;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private Label progressNum;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private ProgressBar progressBar;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * Constructor for DialogBox."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param img the image for dialog box"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param text text for dialog box"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        db.setStyle(\"-fx-background-color:AQUA\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public static DialogBox getWelcomeDukeDialog(String text, Image img, int num1, int num2) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        String fraction \u003d num1 + \"/\" + num2 + \" tasks\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        ProgressBar progressBar \u003d new ProgressBar(); //customises progress bar"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        db.getChildren().add(progressBar);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        progressBar.setPrefSize(200,  30);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        progressBar.setPadding(new Insets(0,0,0,50));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        progressBar.setProgress(((double) num1/ (double) num2));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        Text progressNum \u003d new Text(\"    \" + fraction + \"\\n    completed!\"); //customises label beside progress bar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        db.getChildren().add(progressNum);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        progressNum.setFont(Font.font (\"Verdana\", 18));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        progressNum.setFill(Color.RED);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * Creates a new dialog box for duke."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param text text response by duke"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param img image for duke"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return DialogBox for duke"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 100
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": " * The Duke program implements an application that"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": " * acts like a task scheduler for the user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": " * @author Calvin"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": " * @since 2019-08-20"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    protected TaskList tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This constructor takes in the filePath and initiates the necessary"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * classes required."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param filePath the local directory of the file"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * Parses user input and executes the respective commands."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return duke\u0027s response after parsing user command"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            //Duke duke \u003d new Duke(\"C:\\\\duke\\\\src\\\\main\\\\java\\\\data\\\\duke.txt\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return Parser.parse(input).execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "calvincxz": 56
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    String msg;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.msg \u003d msg;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return \"OOPS!!! \" + msg;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 13
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private Duke duke \u003d new Duke(\"C:\\\\duke\\\\src\\\\main\\\\java\\\\data\\\\duke.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            stage.setTitle(\"DukeBot\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 33
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "//Some design for MainWindow adapted from https://github.com/ang-zeyu/duke/blob/master/src/main/java/duke/ui/MainWindow.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/pikachu.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * Sets duke and displays welcome message to user."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        displayWelcomeMessage();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void displayWelcomeMessage() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                DialogBox.getWelcomeDukeDialog(\"HELLO FROM DUKE!! \\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                                + duke.ui.printList(duke.tasks.getList()) + \"\\n\\nInput \u0027help\u0027 for user guide.\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                        , dukeImage, duke.tasks.getDoneTaskCount(), duke.tasks.getTotalTaskCount()));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        );"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 67
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import commands.DoneCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import commands.ExitCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import commands.ListCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import commands.NoteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import commands.ErrorCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import commands.PostponeCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import commands.HelpCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import commands.DeleteCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import commands.FindCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import commands.AddCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import tasks.Todo;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to parse the user command the task list from disk"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * and return a Command object for execution."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param fullCommand command which is read as a string by the UI."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return a command which can be executed by application."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public static Command parse(String fullCommand) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        String[] input \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            switch (input[0]) {  //checks the first string of user input"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            case \"done\": {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                int num \u003d Integer.parseInt(input[1]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                return new DoneCommand(num);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            case \"delete\": {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                int num \u003d Integer.parseInt(input[1]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                return new DeleteCommand(num);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                return new FindCommand(input[1].trim());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            case \"help\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                return new HelpCommand();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            case \"postpone\": {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                String[] arr \u003d input[1].trim().split(\" \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                return new PostponeCommand(arr[0], arr[1], arr[2], arr[3]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            case \"note\": {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                String[] arr \u003d input[1].trim().split(\" \", 2);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                return new NoteCommand(Integer.parseInt(arr[0]), arr[1]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                Task t;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                switch (input[0]) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                case \"t\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                    t \u003d new Todo(input[1].trim());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                case \"d\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                case \"deadline\": {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                    String[] str \u003d input[1].trim().split(\"/\", 2);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                    t \u003d new Deadline(str[0], str[1].substring(3).trim());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                case \"e\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                case \"event\": {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                    String[] str \u003d input[1].trim().split(\"/\", 2);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                    t \u003d new Event(str[0], str[1].substring(3).trim());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                    throw new DukeException(\"Unknown command: \" + input[0]);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                assert !t.isDone();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                assert t.getDescription() !\u003d null;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                return new AddCommand(t);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return new ErrorCommand(e.getMessage());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return new ErrorCommand(\"Wrong input format!\\n Input [help] for more support.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return new ErrorCommand(\"Wrong date/time format!\\n Format should be dd/mm/yyyy hhmm\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return new ErrorCommand(\"Me no understand!\\n Input [help] for more support.\" + e.toString());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 96
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import tasks.Todo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    File file;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to read the content of a help file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return the help file\u0027s content as a String"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String accessHelp() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        Scanner sc \u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assert sc !\u003d null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            output +\u003d (sc.nextLine() + \"\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * Creates the task object from String array and adds it to the ArrayList list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void loadTask(ArrayList\u003cTask\u003e list, String[] oldList) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        switch (oldList[0].trim()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            t \u003d new Todo(oldList[2].trim());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            t \u003d new Deadline(oldList[2].trim(), oldList[3].trim());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            t \u003d new Event(oldList[2].trim(), oldList[3].trim());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        if (oldList[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            t.markAsDone();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        list.add(t);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * Loads the task list from disk."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return list of tasks"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            String[] oldList \u003d scanner.nextLine().split(\" // \");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            loadTask(list, oldList);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to update current items in the list."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param list the current task list"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void updateList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        Collections.sort(list);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        try (PrintWriter out \u003d new PrintWriter(file)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                Task t \u003d list.get(i - 1);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                if (t.getSymbol().equals(\"T\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                    out.println(t.getSymbol() + \" // \" + (t.isDone() ? 1 : 0) + \" // \" + t.getDescription()"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                            + t.getNotes());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                    assert (t.getSymbol().equals(\"D\") || t.getSymbol().equals(\"E\"));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                    out.println(t.getSymbol() + \" // \" + (t.isDone() ? 1 : 0) + \" // \" + t.getDescription()"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                            + \" // \" + t.getExtraInfo() + t.getNotes());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 103
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    int test \u003d 2;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This is a constructor for duke.TaskList."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to return the task list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return the task list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void sort() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        Collections.sort(list);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to add a task to the list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param taskToAdd the task to add"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void addTask(Task taskToAdd) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assert taskToAdd !\u003d null;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        list.add(taskToAdd);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to delete a task to the list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param taskNumToDelete the task number to delete"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public Task deleteTask(int taskNumToDelete) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return list.remove(taskNumToDelete - 1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to mark a task as done."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param taskNumToMark the task number to mark"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void doneTask(int taskNumToMark) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        Task t \u003d list.get(taskNumToMark - 1);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        t.markAsDone();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public Task getTask(int taskNumToGet) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        Task t \u003d list.get(taskNumToGet - 1);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public int getDoneTaskCount() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            if (task.isDone()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return count;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public int getTotalTaskCount() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 84
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String print(String msg) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to print current items in the list to user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param list the current TaskList object"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return lists of tasks in list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String printList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assert list !\u003d null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        if (list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return \"Empty task list!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            String output \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                Task t \u003d list.get(i - 1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                output +\u003d (\"\\n\" + i + \".\" + t);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 31
    }
  },
  {
    "path": "src/main/java/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.time.Duration;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    String by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    LocalDateTime date1;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This is a constructor for Deadline."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param description description of task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param by          due date of deadline"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assert by !\u003d null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        super.symbol \u003d \"D\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        getDate();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * Parses the date string in task and creates a LocalDateTime object"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void getDate() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        if (!by.contains(\" \")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            LocalDate d1 \u003d LocalDate.parse(by, formatter);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            date1 \u003d d1.atTime(23, 59);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            String[] dateArray \u003d by.split(\" \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            LocalDate d1 \u003d LocalDate.parse(dateArray[0], formatter);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            date1 \u003d d1.atTime(Integer.parseInt(dateArray[1]) / 100, Integer.parseInt(dateArray[1]) % 100);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return date1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String getExtraInfo() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void postpone(int daysToPostpone, int hoursToPostpone, int minutesToPostpone) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        date1 \u003d date1.plus(Duration.ofDays(daysToPostpone))"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                .plus(Duration.ofHours(hoursToPostpone)).plus(Duration.ofMinutes(minutesToPostpone));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" +  date1 + \")\" + super.getNotes();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 63
    }
  },
  {
    "path": "src/main/java/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.time.Duration;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    LocalDateTime date1;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    LocalDateTime date2;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This is a constructor for tasks.Event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param description description of task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param at          start and end time of event"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assert at !\u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        super.symbol \u003d \"E\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        getDate();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to generate the date of start and end"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * of the event as a LocalDateTime object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void getDate() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        String[] dateArray \u003d at.split(\" \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        LocalDate d1 \u003d LocalDate.parse(dateArray[0], formatter);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        LocalDate d2 \u003d LocalDate.parse(dateArray[0], formatter);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        date1 \u003d d1.atTime(Integer.parseInt(dateArray[1]) / 100, Integer.parseInt(dateArray[1]) % 100);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        date2 \u003d d2.atTime(Integer.parseInt(dateArray[2]) / 100, Integer.parseInt(dateArray[2]) % 100);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return date1;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String getExtraInfo() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void postpone(int daysToPostpone,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                         int hoursToPostpone, int minutesToPostpone) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        date1 \u003d date1.plus(Duration.ofDays(daysToPostpone))"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                .plus(Duration.ofHours(hoursToPostpone)).plus(Duration.ofMinutes(minutesToPostpone));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        date2 \u003d date2.plus(Duration.ofDays(daysToPostpone))"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                .plus(Duration.ofHours(hoursToPostpone)).plus(Duration.ofMinutes(minutesToPostpone));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assert date1 !\u003d null;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assert date2 !\u003d null;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return \"[E]\" + super.toString() + \" (from: \" + date1 + \" to \" + date2 + \")\" + super.getNotes();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 69
    }
  },
  {
    "path": "src/main/java/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public abstract class Task implements Comparable\u003cTask\u003e {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    String symbol;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private boolean hasNotes \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    ArrayList\u003cString\u003e noteList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This is a constructor for Task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param description description of task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        noteList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assert description !\u003d null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String getSymbol() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return symbol;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used return status icon of a task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return String status icon"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public abstract LocalDateTime getDateTime();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used return description of a task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return String description"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to return extra information such as"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * the time of a task (if any)."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return String extra information"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public abstract String getExtraInfo();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to mark a task as done."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assert !isDone;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * Adds notes to a task."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param notes notes to add to task"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void addNotes(String notes) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        noteList.add(notes);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        hasNotes \u003d true;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public abstract void postpone(int daysToPostpone, int hoursToPostpone, int minutesToPostpone);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * Gets the notes written by user."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return notes in string format"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String getNotes() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        if (!hasNotes) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        for (String note: noteList) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            output +\u003d (\" #\" + note);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public int compareTo(Task other) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        if (getSymbol() \u003d\u003d \"T\") {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            if (other.symbol \u003d\u003d \"T\") {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                return 0;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                return 1;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            if (other.getSymbol() \u003d\u003d \"T\") {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                return -1;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                return getDateTime().compareTo(other.getDateTime());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "calvincxz": 118
    }
  },
  {
    "path": "src/main/java/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        super.symbol \u003d \"T\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String getExtraInfo() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void postpone(int daysToPostpone, int hoursToPostpone, int minutesToPostpone) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assert super.toString() !\u003d null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return \"[T]\" + super.toString() + super.getNotes();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 32
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "\u003c?import javafx.scene.shape.Circle?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #ffe4b5; -fx-border-insets: 5; -fx-border-width: 2; -fx-border-style: solid inside; -fx-border-color: #4169e1; -fx-background-color: #7fffd4;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "      \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label \" textFill\u003d\"#8f057a\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            \u003cInsets right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            \u003cInsets right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            \u003cFont name\u003d\"Arial Black\" size\u003d\"16.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "         \u003c/font\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"80.0\" fitWidth\u003d\"80.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            \u003cclip\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                \u003cCircle centerX\u003d\"40.0\" centerY\u003d\"40.0\" radius\u003d\"40.0\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            \u003c/clip\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 32
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"730.0\" prefWidth\u003d\"900.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"400.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"50.0\" prefWidth\u003d\"814.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"85.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" alignment\u003d\"CENTER\" layoutX\u003d\"814.0\" layoutY\u003d\"617.8\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"55.0\" prefWidth\u003d\"88.0\" style\u003d\"-fx-border-color: #a52a2a; -fx-background-color: #00ff00;\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"-3.0\" AnchorPane.rightAnchor\u003d\"-2.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            \u003cFont name\u003d\"Comic Sans MS\" size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "         \u003c/font\u003e\u003c/Button\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minViewportHeight\u003d\"900.0\" minViewportWidth\u003d\"900.0\" minWidth\u003d\"-Infinity\" prefViewportHeight\u003d\"900.0\" prefViewportWidth\u003d\"900.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"52.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"1.7976931348623157E308\" prefHeight\u003d\"524.0\" prefWidth\u003d\"898.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "\u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "calvincxz": 24
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    Event testEvent \u003d new Event(\"party\", \"11/11/2011 1800 2200\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void getDateTest() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        LocalDate testDate \u003d LocalDate.parse(\"11/11/2011\", formatter);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        LocalDateTime testDateTime \u003d testDate.atTime(18,00);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        testEvent.getDate();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assertEquals(testDateTime, testEvent.getDateTime());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void getExtraInfoTest() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assertEquals(testEvent.getExtraInfo(), \"11/11/2011 1800 2200\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 24
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import tasks.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void testGetList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        ArrayList\u003cTask\u003e test \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        TaskList list \u003d new TaskList(test);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assertEquals(test, list.getList());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void addTaskTest() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        Task testTask \u003d new Todo(\"x\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        ArrayList\u003cTask\u003e test \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        test.add(testTask);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        TaskList tasklist \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        tasklist.addTask(testTask);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assertEquals(test, tasklist.getList());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void deleteTaskTest() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        Task testTask \u003d new Todo(\"x\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        ArrayList\u003cTask\u003e test \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        test.add(testTask);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        TaskList tasklist \u003d new TaskList(test);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        tasklist.deleteTask(1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assertEquals(test, tasklist.getList());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void markTaskTest() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        Task testTask \u003d new Todo(\"x\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        ArrayList\u003cTask\u003e test \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        test.add(testTask);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        TaskList tasklist \u003d new TaskList(test);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        Task t \u003d tasklist.getTask(1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        t.markAsDone();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assertEquals(t.getStatusIcon(), tasklist.getTask(1).getStatusIcon());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 51
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import tasks.Todo;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assertEquals(\"[T][\\u2718] todo\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                new Todo(\"todo\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "calvincxz": 15
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "deadline return book /by Sunday"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 3
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "if not exist C:\\duke\\bin mkdir C:\\duke\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "javac  -cp C:\\duke\\src -Xlint:none -d C:\\duke\\bin C:\\duke\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "java -classpath C:\\duke\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 21
    }
  },
  {
    "path": "tutorials/gradleTutorial.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Gradle Tutorial"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Gradle is a _build automation tool_ used to automate build processes. There are many ways of integrating Gradle into a project. In this guide, we will be using the _Gradle wrapper_."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* [Introduction](#introduction)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* [Adding Gradle Support to Your Project](#adding-gradle-support-to-your-project)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* [Adding Plugins](#adding-plugins)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  * [CheckStyle](#checkstyle)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Shadow](#shadow)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "* [Adding Dependencies](#adding-dependencies)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  * [JUnit](#junit)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "* [Further Reading](#further-reading)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "As a developer, you write a _build file_ that describes the project. A build file mainly consists of _plugins_, _tasks_ and _properties_. "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "* **Plugins** extend the functionality of Gradle. For example, the `java` plugin adds support for `Java` projects."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "* **Tasks** are reusable blocks of logic.  For example, the task `clean` simply deletes the project build directory. Tasks can be composed of other tasks or be dependent on another task. "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "* **Properties** change the behavior of tasks. For instance, `mainClassName` of the `application` plugin is a compulsory property which tells Gradle which class is the entrypoint to your application."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  As Gradle favors [_convention over configuration_](https://en.wikipedia.org/wiki/Convention_over_configuration), there is not much to you need to configure if you follow the recommended directory structure."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "## Adding Gradle Support to Your Project "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "1. Pull the branch named `gradle`. Merge it to the `master` branch. This will add the Gradle wrapper to your project."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "   git checkout --track origin/gradle"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "   git checkout master"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "   git merge gradle"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "1. Open the `build.gradle` file in an editor. Update the following code block to point to the main class (i.e., the one containing the `main` method) of your application. The code below assumes your main class is `seedu.Duke`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "   ```groovy"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "   application {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "       mainClassName \u003d \"seedu.Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "   }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "1. To check if Gradle has been added to the project correctly, open a terminal window, navigate to the root directory of your project and run the command `gradlew run`. This should result in Gradle running the main method of your project."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ":bulb: Simply run the command `gradlew {taskName}` in the terminal and Gradle will run the task! Here are some example commands:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "* `gradlew tasks` (or `gradlew tasks --all`): shows a list of tasks available"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "* `gradlew run`: runs the main class of your project"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ":bulb: Some plugins may add more helpful tasks so be sure to check their documentation!"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "#### Using Gradle from within Intellij"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "1. After adding support for Gradle, Intellij might automatically ask you (via a pop-up at the bottom right corner of the Window) whether to import the project as a Gradle project. In that case, go ahead and say yes."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "1. If the above didn\u0027t happen, import the Gradle project by `Help \u003e Find Action \u003e Import Gradle Project`."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "   ![Import Gradle](assets/ImportGradle.png)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "1. If the above didn\u0027t work either, close Intellij, delete the Intellij project files (i.e., `.idea` folder and `*.iml` files), and set up the project again, but instead of choosing `Create project from existing sources`, choose `Import project from external model` -\u003e `Gradle`."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "After this, IntelliJ IDEA will identify your project as a Gradle project and you will gain access to the `Gradle Toolbar`. Through the toolbar, you run Gradle tasks and view your project\u0027s dependencies."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "You can click on the Gradle icon in the Gradle toolbar and create a new run configuration for running Gradle tasks without needing to type a `gradlew` command."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "![Gradle icon](assets/GradleIcon.png)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "## Adding Plugins"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "Gradle plugins are reusable units of build logic. Most common build tasks are provided as core plugins by Gradle. Given below are instructions on how to use some useful plugins:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "### CheckStyle"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "To add support for _Checkstyle_ (a tool to check if your code complies with a set of style rules), which comes as a core plugin, simply add the line `id \u0027checkstyle\u0027` into the `plugins` block."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "Your build file should look something like this now:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "// ..."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "Checkstyle expects configuration files for checkstyle to be in `./config/checkstyle/` by convention."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "A sample checkstyle rule configuration is provided in the branch."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "The plugin adds a few _tasks_ to your project. Run `gradlew checkstyleMain checkstyleTest` to verify that you have set up Checkstyle properly (the command will check your main code and test code against the style rules)."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "**Resources**:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "* [Gradle documentation for CheckStyle plugin](https://docs.gradle.org/current/userguide/checkstyle_plugin.html)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "### Shadow"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "Shadow is a plugin that packages an application into an executable jar file. To use it, first add the following line to your Gradle build file:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "The plugin can be configured by setting some properties. Let\u0027s try to produce a jar file with the name in format of `{baseName}-{version}.jar`."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "Add the following block to your build file:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "Now you can run the command `gradlew shadowJar`.It publishes an executable jar to `./build/libs/`. You should be able to able to execute the created jar file by double-clicking it or using the command `java -jar {jarName}`?"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "**Resources**:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "* [Gradle documentation for Shadow plugin](https://plugins.gradle.org/plugin/com.github.johnrengelman.shadow)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "* [Gradle documentation for JUnit](https://docs.gradle.org/current/userguide/java_testing.html#using_junit5)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "* [More about the Shadow plugin](https://imperceptiblethoughts.com/shadow/introduction/)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "## Adding Dependencies"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "Gradle can automate the management of dependencies to third-party libraries. Given below are some examples."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "### JUnit"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "JUnit is a testing framework for Java. It allows developers to write tests and run them. To manage JUnit dependency via Gradle, add the following to your build file:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "Then, configure Gradle to use JUnit by adding the following block to your build file:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "By convention, java tests belong in `src/test/java` folder. Create a new `test/java` folder in under `src`."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "src"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "├─main"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "│  └─java"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "│     └─seedu/duke/Duke.java"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "└─test"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    └─java"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        └─seedu/duke/DukeTest.java"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "If you have imported your Gradle project into IntelliJ IDEA, you will notice that IDEA is able to mark the test directory as the _Test root_ (colored in green by default) automatically."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "You can now write a test (e.g., `test/java/seedu/duke/DukeTest.java`) and run it with `gradlew test`."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "**Resources**:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "* [Gradle documentation for JUnit](https://docs.gradle.org/current/userguide/java_testing.html#using_junit5)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "## Further Reading"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "Now that you have a general idea of how to accomplish basic tasks with Gradle, here\u0027s a list of material you can read to further your understanding."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "* [Official Gradle Documentation](https://docs.gradle.org/current/userguide/userguide.html)"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "----------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "**Authors:**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "* Initial Version: Jeffry Lum"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 2,
      "-": 168
    }
  }
]
