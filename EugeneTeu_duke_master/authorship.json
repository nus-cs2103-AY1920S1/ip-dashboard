[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    String dateAndTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * Deadline task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * @param description user input of the title of the task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * @param dateAndTime user input of date and time in the format d/mm/yyyy HHmm"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public Deadline(String description, String dateAndTime) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        this.dateAndTime \u003d dateAndTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            return \"[D][\\u2713] \" + this.description + \" (by: \" + this.dateAndTime + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            return \"[D][\\u2718] \" + this.description + \" (by: \" + this.dateAndTime + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public String createTaskInFileFormat() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        String temp \u003d \"D \";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        temp +\u003d super.createTaskInFileFormat();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        temp +\u003d \" /by \";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        temp +\u003d this.dateAndTime;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EugeneTeu": 31
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    ArrayList\u003cTask\u003e tempStore \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * Constructor for Duke instance"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * @param filepath file path giving the location of the file"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public Duke(String filepath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        //initialise an arraylist to store Tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        TaskList store \u003d new TaskList(storage.createTasksFromFile(), storage);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        this.parser \u003d new Parser(store);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * Driver method for Duke instance"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * calls parser to parse user input accordingly"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        parser.readUserInput();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * Entry point of program, instantiates Duke instance"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * file input/output is loaded from data/duke.txt"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * @param"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * @return void"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        Duke temp \u003d new Duke(\"data/duke.txt\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        Ui.showGreeting();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        temp.run();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EugeneTeu": 48,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    String errorMessage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * Custom Exception class"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * @param errorMessage customized error messages for each error"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        return this.errorMessage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EugeneTeu": 19
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    String eventDuration;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * Event task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * @param description user input of the title of the task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * @param eventDuration user input of the duration of the event the format is d/MM/yyyy HHmm-HHmm"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public Event(String description, String eventDuration) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        this.eventDuration \u003d eventDuration;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            return \"[E][\\u2713] \" + this.description + \" (at: \" + this.eventDuration + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            return \"[E][\\u2718] \" + this.description + \" (at: \" + this.eventDuration + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public String createTaskInFileFormat() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        String temp \u003d \"E \";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        temp +\u003d super.createTaskInFileFormat();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        temp +\u003d \" /at \";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        temp +\u003d this.eventDuration;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EugeneTeu": 31
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "public class Parser  {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    TaskList storeTaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * Parser class responsible for parsing user input."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * This includes asking for user input, decoding user input accordingly."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * Only responsible for making sense of the users command e.g String manipulation"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * @param list TaskList object at any instance, usually the TaskList read from the hard drive"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public Parser(TaskList list) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        this.storeTaskList \u003d list;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * main driver method for Parser class"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * calls and links to other objects to execute the entire program"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public void readUserInput() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        Scanner myScanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        String argument \u003d myScanner.nextLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        while (!argument.equals(\"bye\") \u0026\u0026 !argument.equals(\"Bye\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            if (argument.equals(\"list\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                storeTaskList.listTask();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                argument \u003d myScanner.nextLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                String[] argumentArray \u003d argument.split(\" \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                //start of toDo,Event,Deadline"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                if (argumentArray[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        if (argumentArray.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description of a done command cannot be empty.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        int index \u003d Integer.valueOf(argumentArray[1]) - 1;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        storeTaskList.doneTask(index);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                    } catch(IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        System.out.println(\"invalid number not in current list\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                    }catch (DukeException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        System.out.println(e);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                    } finally {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        argument \u003d myScanner.nextLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                } else if (argumentArray[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        //catch empty desc error"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        if (argumentArray.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        //form back string"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        String toDoTaskString \u003d \"\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        for (int i \u003d 1; i \u003c argumentArray.length; i++) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                            toDoTaskString +\u003d argumentArray[i];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                            toDoTaskString +\u003d \" \";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        //.trim() to remove trailing space"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        storeTaskList.addToDoTask(toDoTaskString.trim());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        System.out.println(e);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                    } finally {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        argument \u003d myScanner.nextLine();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                } else if (argumentArray[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        //catch empty desc error"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        if (argumentArray.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        //form back string , description stops at /by"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        //date time starts from /by"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        String deadlineTaskDescriptionString \u003d \"\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        String deadlineTaskDateAndTimeString \u003d \"\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        boolean createDesc \u003d true;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        //catch error of no specific date time after /by"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        if (argumentArray[argumentArray.length -1].matches(\"/by\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                            throw new DukeException(\"Oops, no specific date/time supplied\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        for (int i \u003d 1; i \u003c argumentArray.length; i++) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                            if (argumentArray[i].equals(\"/by\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                                createDesc \u003d false;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                            } else if (createDesc) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                                deadlineTaskDescriptionString +\u003d argumentArray[i];"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                                deadlineTaskDescriptionString +\u003d \" \";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                                deadlineTaskDateAndTimeString +\u003d argumentArray[i];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                                deadlineTaskDateAndTimeString +\u003d \" \";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        //System.out.println(deadlineTaskDateAndTimeString);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        deadlineTaskDateAndTimeString \u003d convertStringToDate(deadlineTaskDateAndTimeString);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        storeTaskList.addDeadlineTask(deadlineTaskDescriptionString.trim(), deadlineTaskDateAndTimeString.trim());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        System.out.println(e);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                    } finally {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        argument \u003d myScanner.nextLine();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                } else if (argumentArray[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        //catch empty desc error"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        if (argumentArray.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        //form back string , description stops at /at"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        //date time starts from /at"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        String eventTaskDescriptionString \u003d \"\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        String eventTaskDateAndTimeString \u003d \"\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        boolean createDesc \u003d true;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        //catch error of no specific date time after /at"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        if (argumentArray[argumentArray.length -1].matches(\"/at\")) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                            throw new DukeException(\"Oops, no specific duration supplied\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        for (int i \u003d 1; i \u003c argumentArray.length; i++) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                            if (argumentArray[i].equals(\"/at\")) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                                createDesc \u003d false;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                            } else if (createDesc) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                                eventTaskDescriptionString +\u003d argumentArray[i];"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                                eventTaskDescriptionString +\u003d \" \";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                                eventTaskDateAndTimeString +\u003d argumentArray[i];"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                                eventTaskDateAndTimeString +\u003d \" \";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        eventTaskDateAndTimeString \u003d convertStringToDateEvent(eventTaskDateAndTimeString);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        storeTaskList.addEventTask(eventTaskDescriptionString.trim(), eventTaskDateAndTimeString.trim());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        //argument \u003d myScanner.nextLine();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        System.out.println(e);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                    } finally {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        argument \u003d myScanner.nextLine();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                }else if (argumentArray[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                    try{"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        if (argumentArray.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description for delete command cannot be empty.\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        int index \u003d Integer.valueOf(argumentArray[1]) - 1;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        storeTaskList.deleteTask(index);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        //catch task number not in list error"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                    }catch(IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        System.out.println(\"invalid number not in current list\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                    }catch (DukeException e) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        System.out.println(e);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                    } finally {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        argument \u003d myScanner.nextLine();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                } else if (argumentArray[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                    storeTaskList.findTask(argumentArray[1]);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                    argument \u003d myScanner.nextLine();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        //handles error for not recognized command"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        throw new DukeException(\"☹  OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        System.out.println(e);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                    } finally {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        argument \u003d myScanner.nextLine();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        //test"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        //exiting program"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        myScanner.close();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * String manipulation method to return a formatted"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * from 2/12/2019 1800 to 2nd of December 2019 6pm etc"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * @param dateAndTimeString given string in the format of d/mm/yyyy HHmm"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * @return formatted date and time"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    private static String convertStringToDate(String dateAndTimeString) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            String[] arrayOfDateAndTime \u003d dateAndTimeString.split(\" \");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            String date \u003d arrayOfDateAndTime[0];"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            String time \u003d arrayOfDateAndTime[1];"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            // d/mm/yyyy"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            date \u003d formatString(date);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            Integer timeInInt \u003d Integer.valueOf(time);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            time \u003d convertTime(timeInInt);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            dateAndTimeString \u003d date + \", \" + time;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            return dateAndTimeString;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            System.out.println(\"invalid date and time supplied: try d/mm/yyyy 0000 format\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        } catch (DukeException e ) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        return \" \";"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * converts time to string"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * @param convertedTime given input e.g 1630"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * @return formatted string e.g 1630 becomes 430pm"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * @throws DukeException exception when the input is not four digits / out of bounds e.g 2500"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    private static String convertTime(Integer convertedTime) throws  DukeException{"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        String time \u003d \"\";"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        if (convertedTime \u003d\u003d 0) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            //midnight"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            convertedTime \u003d 12;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        } else if ( convertedTime \u003e 0 \u0026\u0026  convertedTime \u003c 1200) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            int mins \u003d convertedTime % 100;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            if (mins \u003d\u003d 0 ) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                convertedTime \u003d convertedTime % 100;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            time \u003d convertedTime.toString() + \"am\";"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        } else if (convertedTime \u003c 2359 \u0026\u0026 convertedTime \u003e\u003d 1300) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            //1300 / 100 \u003d 13 % 12"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            int hrs \u003d (convertedTime / 100) % 12;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            int mins \u003d convertedTime % 100;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            if (mins \u003d\u003d 0) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                time \u003d hrs + \"pm\";"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                time \u003d String.valueOf(hrs) + mins + \"pm\";"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        } else if (convertedTime \u003c 1300 \u0026\u0026 convertedTime \u003e\u003d 1200 ) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            int mins \u003d convertedTime % 100;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            if (mins \u003d\u003d 0) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                time \u003d \"12pm\";"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                time \u003d \"12\" + mins + \"pm\";"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            time \u003d \"12\" + mins + \"pm\";"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            throw new DukeException(\"invalid time entered\");"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * helper function to convert d/mm/yyyy to the correct format"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * @param date inputdate etc 2/12/2019"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * @return formatted date"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    private static String formatString(String date) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        //[ 2 , 12, 2019]"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        String[] newArr \u003d date.split(\"/\");"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        String num \u003d newArr[0];"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        num \u003d getOrdinal(num);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        String month \u003d newArr[1];"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        month \u003d getMonth(month);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        return num + \" of \" + month + \" \" + newArr[2];"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * method to return the month in full spelling"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * @param month given month number as input"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * @return name of the month"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    private static String getMonth(String month) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        String[] arrMonths \u003d {\" bye\", \"January\", \"February\", \"March\", \"April\", \"May\", \"June\","
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                \"July\", \"August\", \"September\","
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                \"October\", \"November\", \"December\"};"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        int temp \u003d Integer.valueOf(month);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        return arrMonths[temp];"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * method to find the ordinal of each number e.g 1st, 2nd, 3rd"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * @param num input num"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * @return formatted number e.g 1 becomes 1st, 21 becomes 21st"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    private static String getOrdinal(String num) {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        int temp \u003d Integer.valueOf(num);"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        if (temp \u003d\u003d 1 || temp \u003d\u003d 21 || temp \u003d\u003d 31) {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            return temp + \"st\";"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        } else if (temp \u003d\u003d 2 || temp \u003d\u003d 22 ) {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            return temp + \"nd\";"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        } else if (temp \u003d\u003d 3 || temp \u003d\u003d 23) {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            return temp + \"rd\";"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        }else {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            return temp + \"th\";"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    private static String convertStringToDateEvent(String dateAndTimeString) {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "       try { // format of input 2/12/2019 1400-1500"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "           String[] arrayOfDateAndTime \u003d dateAndTimeString.split(\" \");"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "           String date \u003d arrayOfDateAndTime[0];"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "           String temp \u003d arrayOfDateAndTime[1];"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "           String[] arrayOfTime \u003d temp.split(\"-\");"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "           String timeStarting \u003d arrayOfTime[0];"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "           String timeEnding \u003d arrayOfTime[1];"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "           date \u003d formatString(date);"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "           timeStarting \u003d convertTime(Integer.valueOf(timeStarting));"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "           timeEnding \u003d convertTime(Integer.valueOf(timeEnding));"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "           dateAndTimeString \u003d date + \", \" + timeStarting + \"-\" +timeEnding;"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "           return dateAndTimeString;"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "       } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "           System.out.println(\"invalid date and time supplied: try d/mm/yyyy 0000 format\");"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "       } catch (DukeException e ) {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "           System.out.println(e);"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "       }"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        return \" \";"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * method for testing private static methods"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * @param test dummy String"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public static String accessConvertStringToDate(String test) {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        return convertStringToDate(test);"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * method for testing private static method"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * @param convertedTime dummy int"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public static String accessConvertTime(int convertedTime) throws DukeException {"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        return convertTime(convertedTime);"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EugeneTeu": 350
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    File tempFile;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    ArrayList\u003cString\u003e storingStrings \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * Object that deals with saving data to the files and reading from them"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * @param filePath file to be saved to"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            this.tempFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            Stream\u003cString\u003e stream \u003d Files.lines(Paths.get(filePath));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            stream.forEach(storingStrings::add);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * Saves given arrayList of Tasks to file"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * @param list ArrayList of Task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public void saveTaskToFile(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(this.tempFile);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                Task currentTask \u003d list.get(i);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                fileWriter.write(currentTask.createTaskInFileFormat() + \"\\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        } catch(IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * Creates an arrayList of Taks from file"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * @return ArrayList of Task"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public ArrayList\u003cTask\u003e createTasksFromFile() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        ArrayList\u003cTask\u003e store \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        for (int i \u003d 0; i \u003c this.storingStrings.size(); i++) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            String wholeLine \u003d this.storingStrings.get(i);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            String[] argumentArray \u003d wholeLine.split(\" \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            boolean isCompleted \u003d false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            if (argumentArray[1].equals(\"1\"))  {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                //completed"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                //System.out.println(argumentArray[1]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                isCompleted \u003d true;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            if (argumentArray[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                String toDoTaskString \u003d \"\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                for (int j \u003d 2; j \u003c argumentArray.length; j++) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                    toDoTaskString +\u003d argumentArray[j];"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                    toDoTaskString +\u003d \" \";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                //.trim() to remove trailing space"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                Task toDoTask \u003d new ToDo(toDoTaskString.trim());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                if(isCompleted) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                    toDoTask.markAsDone();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                store.add(toDoTask);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            } else if (argumentArray[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                String deadlineTaskDescriptionString \u003d \"\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                String deadlineTaskDateAndTimeString \u003d \"\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                boolean createDesc \u003d true;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                for (int j \u003d 2; j \u003c argumentArray.length; j++) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                    if (argumentArray[j].equals(\"/by\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        createDesc \u003d false;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                    } else if (createDesc) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        deadlineTaskDescriptionString +\u003d argumentArray[j];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        deadlineTaskDescriptionString +\u003d \" \";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        deadlineTaskDateAndTimeString +\u003d argumentArray[j];"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        deadlineTaskDateAndTimeString +\u003d \" \";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                //use .trim() method to eliminate trailing white space"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                Task deadlineTask \u003d new Deadline(deadlineTaskDescriptionString.trim(), deadlineTaskDateAndTimeString.trim());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                if (isCompleted) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                    deadlineTask.markAsDone();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                store.add(deadlineTask);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            } else if (argumentArray[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                String eventTaskDescriptionString \u003d \"\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                String eventTaskDateAndTimeString \u003d \"\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                boolean createDesc \u003d true;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                for (int j \u003d 2; j \u003c argumentArray.length; j++) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                    if (argumentArray[j].equals(\"/at\")) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        createDesc \u003d false;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                    } else if (createDesc) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        eventTaskDescriptionString +\u003d argumentArray[j];"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        eventTaskDescriptionString +\u003d \" \";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        eventTaskDateAndTimeString +\u003d argumentArray[j];"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                        eventTaskDateAndTimeString +\u003d \" \";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                //use of .trim() to avoid trailing whitespace"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                Task eventTask \u003d new Event(eventTaskDescriptionString.trim(), eventTaskDateAndTimeString.trim());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                if (isCompleted) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                    eventTask.markAsDone();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                store.add(eventTask);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        return store;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EugeneTeu": 137
    }
  },
  {
    "path": "src/main/java/StorageStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "public class StorageStub extends Storage {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public StorageStub() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        super(\"data/test1.txt\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public ArrayList\u003cTask\u003e createTasksFromFile() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        return super.createTasksFromFile();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EugeneTeu": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * Parent class of Tasks"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * ToDo, Event , Deadline inherits from this class"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * contains a description and a boolean flag (to mark done status)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * @param description title of the task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * Setter for isDone field"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            return \"[\\u2713] \" + this.description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            return \"[\\u2718] \" + this.description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * Utility method used when specific task is saved to the file"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public String createTaskInFileFormat() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        String temp \u003d \"\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            temp +\u003d \"1 \";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            temp +\u003d \"0 \";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        temp +\u003d this.description;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EugeneTeu": 50
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    ArrayList\u003cTask\u003e store;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    Storage storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * wrapper class for Task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * only responsible for actions that directly manipulates the actual list of task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * Does not deal with saving or loading of tasks from storage"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * @param listOfTasks"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e listOfTasks, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        this.store \u003d listOfTasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e listOfTasks) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        this.store \u003d listOfTasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * Method that displays the tasks on the current list to users"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public void listTask() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        int num \u003d 1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        for (Task i : store) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            System.out.println(+num + \". \" + i);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            num++;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * Create a done version of task at index"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * @param index refers to the position of specified task that user inputs"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public void doneTask(int index) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        Task taskToModify \u003d store.get(index);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        taskToModify.markAsDone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        System.out.println(taskToModify);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        storage.saveTaskToFile(store);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * Creates a todo task based on user input"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * @param toDoTaskString user input"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public void addToDoTask(String toDoTaskString) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        //.trim() to remove trailing space"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        Task toDoTask \u003d new ToDo(toDoTaskString);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        store.add(toDoTask);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        storage.saveTaskToFile(store);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        Ui.printGotIt();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        System.out.println(\" \" + toDoTask.toString());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        Ui.printNow(store.size());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * Creates a deadline task based on user input"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * @param deadlineTaskDescriptionString User input for description of task"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * @param deadlineTaskDateAndTimeString date and time specified. should be in d/mm/yyyy HHmm format"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public void addDeadlineTask(String deadlineTaskDescriptionString, String deadlineTaskDateAndTimeString) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        Task deadlineTask \u003d new Deadline(deadlineTaskDescriptionString, deadlineTaskDateAndTimeString);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        store.add(deadlineTask);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        storage.saveTaskToFile(store);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        Ui.printGotIt();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        System.out.println(\" \" + deadlineTask.toString());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        Ui.printNow(store.size());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * Creates event task based on user input"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * @param eventTaskDescriptionString user input for description of task"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * @param eventTaskDateAndTimeString date and time specified. should be in d/mm/yyyy HHmm format"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public void addEventTask(String eventTaskDescriptionString, String eventTaskDateAndTimeString) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        //use of .trim() to avoid trailing whitespace"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        Task eventTask \u003d new Event(eventTaskDescriptionString, eventTaskDateAndTimeString);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        store.add(eventTask);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        storage.saveTaskToFile(store);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        Ui.printGotIt();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        System.out.println(\" \" + eventTask.toString());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        Ui.printNow(store.size());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * Delete task in list at specified position"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * @param index position of task to be deleted"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        Task removed \u003d store.remove(index);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        storage.saveTaskToFile(store);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        Ui.printNoted();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        System.out.println(removed);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        Ui.printNow(store.size());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    private void addGenericTask(Task task) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        this.store.add(task);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    private void listSearchQuery() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        int num \u003d 1;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        for (Task i : store) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            System.out.println(+num + \". \" + i);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            num++;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public void findTask(String query) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        ArrayList\u003cString\u003e listOfAllDesc \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        for (Task i : store) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            listOfAllDesc.add(i.description);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        TaskList temp \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        for (int i \u003d 0; i \u003c store.size(); i++) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            String eachDescription \u003d listOfAllDesc.get(i);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            if (eachDescription.contains(query)) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                temp.addGenericTask(store.get(i));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        temp.listSearchQuery();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EugeneTeu": 138
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * ToDo task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     * @param description user input of title of the task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public ToDo() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            return \"[T][\\u2713] \" + this.description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            return \"[T][\\u2718] \" + this.description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public String createTaskInFileFormat() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        String temp \u003d \"T \";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        temp +\u003d super.createTaskInFileFormat();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EugeneTeu": 30
    }
  },
  {
    "path": "src/main/java/ToDoStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "public class ToDoStub extends ToDo {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public ToDoStub() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        super.description \u003d \"read book\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        super.isDone \u003d false;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            return \"[T][\\u2713] \" + this.description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            return \"[T][\\u2718] \" + this.description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public String createTaskInFileFormat() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        return super.createTaskInFileFormat();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EugeneTeu": 22
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public static void showGreeting() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        /*String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);*/"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    //print common methods to call"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public static void printNoted() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public static void printGotIt() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public static void printNow(int length) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        System.out.println(\"Now you have \" + length + \" tasks in the list.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EugeneTeu": 26
    }
  },
  {
    "path": "src/main/java/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "T 1 join sports club"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "T 1 five guys"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "D 1 return book /by 2nd of December 2019, 6pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "E 0 project meeting /at 22nd of October 2017, 620pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "T 0 read apple"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "T 1 punch guys"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "T 0 read guys"
      }
    ],
    "authorContributionMap": {
      "EugeneTeu": 7
    }
  },
  {
    "path": "src/main/java/level4TestCase.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "bye"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "EugeneTeu": 11
    }
  },
  {
    "path": "src/main/java/output.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": " [T][✘] read book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": " [D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": " [E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": " [T][✘] join sports club"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": " [T][✘] borrow book"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "1. [T][✘] read book"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "2. [D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "3. [E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "4. [T][✘] join sports club"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "5. [T][✘] borrow book"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": " [D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": " [E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "Now you have 7 tasks in the list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "1. [T][✘] read book"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "2. [D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "3. [E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "4. [T][✘] join sports club"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "5. [T][✘] borrow book"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "6. [D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "7. [E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "EugeneTeu": 38
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "package java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        assertEquals(2,2);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EugeneTeu": 14
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public void testConvertStringToDate() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        String testInput \u003d \"2/10/2019 1345\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        String testInput2 \u003d \"4/5/2000 0942\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        String testOutput \u003d Parser.accessConvertStringToDate(testInput);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        String testOutput2 \u003d Parser.accessConvertStringToDate(testInput2);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        assertEquals(\"2nd of October 2019, 145pm\", testOutput);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        assertEquals(\"4th of May 2000, 942am\", testOutput2);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public void testConvertTime() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        int testInput \u003d 1643;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            String testOutput \u003d Parser.accessConvertTime(testInput);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            assertEquals(\"443pm\", testOutput);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        } catch(DukeException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EugeneTeu": 28
    }
  },
  {
    "path": "src/test/java/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EugeneTeu": 10
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public void testCreateTaskInFileFormat() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        Task testObject \u003d new Task(\"eat apple\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        String testObjectString \u003d testObject.createTaskInFileFormat();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        assertEquals(\"0 eat apple\", testObjectString);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EugeneTeu": 13
    }
  },
  {
    "path": "src/test/java/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public void toStringTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "           ToDoStub testObject \u003d new ToDoStub();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "           String testObjectString \u003d testObject.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "           assertEquals(\"[T][\\u2718] read book\", testObjectString);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    public void createTaskInFileFormatTest() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        ToDoStub testObject \u003d new ToDoStub();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "        assertEquals(\"T 0 read book\", testObject.createTaskInFileFormat());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EugeneTeu": 21
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": " [T][✘] read book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": " [D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": " [E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": " [T][✘] join sports club"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": " [T][✘] borrow book"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "1. [T][✘] read book"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "2. [D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "3. [E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "4. [T][✘] join sports club"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "5. [T][✘] borrow book"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": " [D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": " [E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "Now you have 7 tasks in the list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "1. [T][✘] read book"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "2. [D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "3. [E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "4. [T][✘] join sports club"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "5. [T][✘] borrow book"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "6. [D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "7. [E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "EugeneTeu": 38
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "Bye"
      }
    ],
    "authorContributionMap": {
      "EugeneTeu": 10
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java ../src/main/java/DukeException.java ../src/main/java/Task.java ../src/main/java/Deadline.java ../src/main/java/Event.java ../src/main/java/ToDo.java "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EugeneTeu"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "EugeneTeu": 34
    }
  }
]
