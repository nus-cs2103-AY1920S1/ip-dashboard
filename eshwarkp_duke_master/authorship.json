[
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        ui.addTaskMessage(tasks, task);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 13
    }
  },
  {
    "path": "src/main/java/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        ui.byeMessage();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 11
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 7
    }
  },
  {
    "path": "src/main/java/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public DateTime (String input){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void setDateAndTime() throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            date \u003d formatter.parse(input);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            throw new DukeException(\"OOPS!!! Invalid time and date format. Please enter in dd/MM/yyyy HHmm format\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public Date getDateAndTime() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return this.input;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 32
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    protected DateTime by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public Deadline(String description, DateTime by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        super.changeToFileFormat(\u0027D\u0027, description, by);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 14
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        Task task \u003d tasks.getTask(index);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        tasks.removeTask(index);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        ui.removeTaskMessage(tasks, task);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 15
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        Task task \u003d tasks.getTask(index);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        task.setDone(true);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        ui.doneTaskMessage(task);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 15
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            tasks \u003d new TaskList(storage.loadFromFile());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 37,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    protected DateTime at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public Event(String description, DateTime at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        super.changeToFileFormat(\u0027E\u0027, description, at);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + at +\")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 14
    }
  },
  {
    "path": "src/main/java/InsertCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public class InsertCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public InsertCommand(Task task) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        ui.addTaskMessage(tasks, task);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 14
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public class ListCommand extends Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        ui.printList(tasks);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 7
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        String command \u003d getCommand(fullCommand);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        DateTime dateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                description \u003d getDescription(fullCommand, command);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                index \u003d Integer.parseInt(description) - 1;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                return new DoneCommand(index);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                description \u003d getDescription(fullCommand, command);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                return new AddCommand(new Todo(description));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                description \u003d getDescription(fullCommand, command);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                dateTime \u003d getDateAndTime(fullCommand, command);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                return new AddCommand(new Deadline(description, dateTime));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                description \u003d getDescription(fullCommand, command);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                dateTime \u003d getDateAndTime(fullCommand, command);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                return new AddCommand(new Event(description, dateTime));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                description \u003d getDescription(fullCommand, command);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                index \u003d Integer.parseInt(description) - 1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                return new DeleteCommand(index);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                return new ByeCommand();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public static String getCommand(String input) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        String command;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        if (input.contains(\" \")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            int index \u003d input.indexOf(\" \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            command \u003d input.substring(0, index);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            command \u003d input;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public static String getDescription(String input, String command) throws DukeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        String action \u003d \"\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        if (input.contains(\" \") \u0026\u0026 input.contains(\"/\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            int index \u003d input.indexOf(\" \") + 1;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            String removeCommand \u003d input.substring(index);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            String[] split \u003d removeCommand.split(\"/\", 2);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            action \u003d split[0];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        } else if (input.contains(\" \")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            String[] split \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            action \u003d split[1];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        if (action.equals(\"\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a \" + command + \" cannot be empty.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return action;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public static DateTime getDateAndTime(String input, String command) throws DukeException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        String detail \u003d \"\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        DateTime dateTime;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        if (input.contains(\" \") \u0026\u0026 input.contains(\"/\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            int index \u003d input.indexOf(\" \");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            String removeCommand \u003d input.substring(index);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            String[] split \u003d removeCommand.split(\"/\", 2);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            index \u003d split[1].indexOf(\" \") + 1;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            detail \u003d split[1].substring(index);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        if (detail.equals(\"\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            throw new DukeException(\"OOPS!!! The time and date of a \" + command + \" cannot be empty.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            dateTime \u003d new DateTime(detail);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            dateTime.setDateAndTime();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return dateTime;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 93
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public ArrayList\u003cTask\u003e loadFromFile() throws FileNotFoundException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        readFileContents();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void readFileContents() throws FileNotFoundException{"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        File f \u003d new File(this.filePath); // create a File for the given file path"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            readAsObject(s.nextLine());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void writeToFile(TaskList tasks) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        ArrayList\u003cTask\u003e updatedTaskList \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            for (Task task : updatedTaskList) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                String text \u003d task.getFileFormat();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                fw.write(text + System.lineSeparator());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void readAsObject(String item) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        Task task \u003d new Task(\"\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        char type \u003d item.charAt(0);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        String[] split \u003d item.split(\" \\\\| \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        boolean isValidTask \u003d true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            case \u0027T\u0027:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                task \u003d new Todo(split[2]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            case \u0027D\u0027:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                task \u003d new Deadline(split[2], new DateTime(split[3]));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            case \u0027E\u0027:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                task \u003d new Event(split[2], new DateTime(split[3]));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                System.out.println(\"OOPS!!! There is an invalid task in the file!\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                isValidTask \u003d false;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        if (isValidTask) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            if (split[1].equals(\"+\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                task.setDone(true);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 73
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    protected char fileFormatType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    protected String fileFormatDescription;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    protected DateTime fileFormatDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return (isDone ? \"+\" : \"-\"); //return tick or X symbols"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void setDone(boolean isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void changeToFileFormat(char type, String description) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        this.fileFormatType \u003d type;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        this.fileFormatDescription \u003d description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void changeToFileFormat(char type, String description, DateTime dateTime) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        this.fileFormatType \u003d type;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        this.fileFormatDescription \u003d description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        this.fileFormatDateTime \u003d dateTime;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public String getFileFormat() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        if (fileFormatType \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            return fileFormatType + \" | \" + getStatusIcon() + \" | \" + fileFormatDescription;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            return fileFormatType + \" | \" + getStatusIcon() + \" | \" + fileFormatDescription + \" | \" + fileFormatDateTime.toString();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 45
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void removeTask(int index) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 33
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        super.changeToFileFormat(\u0027T\u0027, description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 12
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import java.util.function.DoubleToIntFunction;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    private static final String DIVIDER \u003d \"________________________________________\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    protected Scanner sc;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        System.out.println(\"    \" + DIVIDER);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        System.out.println(\"Welcome to Duke!\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        System.out.println(\"No previous data found!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        String command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void printList(TaskList tasks) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            int index \u003d i + 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            System.out.println(\"    \" + index + \".\" + taskList.get(i));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void doneTaskMessage(Task task) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        System.out.println(\"    Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        System.out.println(\"    \" + task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void addTaskMessage(TaskList taskList, Task task) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        System.out.println(\"    Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        System.out.println(\"    \" + task);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        System.out.println(\"    Now you have \" + taskList.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void removeTaskMessage(TaskList taskList, Task task) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        System.out.println(\"    Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        System.out.println(\"    \" + task);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        System.out.println(\"    Now you have \" + taskList.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void byeMessage() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        System.out.println(\"    Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 66
    }
  },
  {
    "path": "src/main/java/data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "D | + | return book  | 2/12/2019 1800"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 1
    }
  }
]
