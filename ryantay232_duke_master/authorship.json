[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "T|Y|Do assignment"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "E|N|Attend party|30/8/2019 1800"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "D|N|Return book|31/8/2019 0900"
      }
    ],
    "authorContributionMap": {
      "ryantay232": 3
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            taskList \u003d new TaskList(storage.readDuke());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * inside run, use ui to ask for commands, ui sends back what command it was as a string"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * parser takes that string command and read it and say is what command and send back as an integer(?)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * tasklist takes it and does the command and send back a list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * storage takes the list and record into drive"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public void run() throws IOException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        ui.printLogo();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            input \u003d ui.getInput();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            int result \u003d parser.getCommand(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            List\u003cTask\u003e tasks \u003d taskList.doCommand(result, input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            storage.writeDuke(tasks);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        } while (!input.contains(\"bye\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryantay232": 48,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryantay232": 7
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public int getCommand(String input) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        String[] i \u003d input.split(\"\\\\s\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        if (i[0].equals(\"bye\")) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        } else if (i[0].equals(\"list\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        } else if (i[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            return 2;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        } else if (i[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            return 3;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        } else if (i[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            return 4;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        } else if (i[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            return 5;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        } else if (i[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            return 6;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        } else if (i[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            return 7;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryantay232": 29
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import java.nio.charset.Charset;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    final static Charset ENCODING \u003d StandardCharsets.UTF_8;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private Path path;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public Storage(String path) throws IOException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        this.path \u003d Paths.get(path);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private List\u003cString\u003e read() throws IOException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return Files.readAllLines(path, ENCODING);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private void write(List\u003cString\u003e lines) throws IOException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        Files.write(path, lines, ENCODING);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public ArrayList\u003cTask\u003e readDuke() throws IOException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        List\u003cString\u003e lines \u003d read();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        for (String s : lines) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            String[] split \u003d s.split(\"\\\\|\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            Task task \u003d new Task();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            if (split[0].contains(\"T\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                task \u003d new ToDo(split[2]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            } else if (split[0].contains(\"D\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                task \u003d new Deadline(split[2], split[3]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            } else if (split[0].contains(\"E\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                task \u003d new Event(split[2], split[3]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            if (split[1].contains(\"Y\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public void writeDuke(List\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        List\u003cString\u003e lines \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            lines.add(task.toFile());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        write(lines);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryantay232": 61
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private LocalDateTime dateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public Deadline(String description, String date) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        String[] dateSplit \u003d date.split(\"\\\\s\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        String[] d \u003d dateSplit[0].split(\"/\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        int day \u003d Integer.parseInt(d[0]);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        int month \u003d Integer.parseInt(d[1]);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        int year \u003d Integer.parseInt(d[2]);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        int hour \u003d Integer.parseInt(dateSplit[1].substring(0, 2));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        int min \u003d Integer.parseInt(dateSplit[1].substring(2));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        dateTime \u003d LocalDateTime.of(year, month, day, hour, min);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private String getDate() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return dateTime.getDayOfMonth() + \"/\" + dateTime.getMonthValue() + \"/\" + dateTime.getYear() +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                \" \" + String.format(\"%02d\", dateTime.getHour()) + String.format(\"%02d\", dateTime.getMinute());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return \"D|\" + getStatusIcon() + \"|\" + description + \"|\" + getDate();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return \"[D][\" + getStatusIcon() + \"] \" + description + \"(by: \" + getDate() + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryantay232": 34
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private LocalDateTime dateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public Event(String description, String date) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        String[] dateSplit \u003d date.split(\"\\\\s\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        String[] d \u003d dateSplit[0].split(\"/\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        int day \u003d Integer.parseInt(d[0]);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        int month \u003d Integer.parseInt(d[1]);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        int year \u003d Integer.parseInt(d[2]);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        int hour \u003d Integer.parseInt(dateSplit[1].substring(0, 2));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        int min \u003d Integer.parseInt(dateSplit[1].substring(2));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        dateTime \u003d LocalDateTime.of(year, month, day, hour, min);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private String getDate() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return dateTime.getDayOfMonth() + \"/\" + dateTime.getMonthValue() + \"/\" + dateTime.getYear() +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                \" \" + String.format(\"%02d\", dateTime.getHour()) + String.format(\"%02d\", dateTime.getMinute());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return \"E|\" + getStatusIcon() + \"|\" + description + \"|\" + getDate();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return \"[E][\" + getStatusIcon() + \"] \" + description + \"(at: \" + getDate() + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryantay232": 34
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    protected String getStatusIcon() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return (isDone ? \"Y\" : \"N\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return \"T|\" + getStatusIcon() + \"|\" + description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryantay232": 36
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return \"[T][\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryantay232": 12
    }
  },
  {
    "path": "src/main/java/duke/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public List\u003cTask\u003e doCommand(int result, String input) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        String[] s \u003d input.split(\"\\\\s\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        switch (result) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            case 0:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                return tasks;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            case 1:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                System.out.print(Ui.line);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                System.out.println(Ui.indent + \" Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    System.out.println(Ui.indent + \" \" + (i + 1) + \".\" + tasks.get(i));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                System.out.println(Ui.line);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                return tasks;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            case 2:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    if (s.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                        throw new DukeException(\"Task number cannot be empty.\\n\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    int n \u003d Integer.parseInt(s[1]) - 1;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    if (n \u003c 0 || n \u003e tasks.size() - 1) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                        throw new DukeException(\"Task number is not in the list.\\n\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    tasks.get(n).markAsDone();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    System.out.print(Ui.line);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    System.out.println(Ui.indent + \" Nice! I\u0027ve marked this task as done: \\n\" +"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                            Ui.indent + \"   \" + tasks.get(n));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    System.out.println(Ui.line);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                } catch (DukeException ex) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    System.out.print(Ui.line);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    System.out.print(Ui.indent + ex.getMessage());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    System.out.println(Ui.line);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                return tasks;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            case 3:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    if (s.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                        throw new DukeException(\"Task number cannot be empty.\\n\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    int n \u003d Integer.parseInt(s[1]) - 1;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    if (n \u003c 0 || n \u003e tasks.size() - 1) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                        throw new DukeException(\"Task number is not in the list.\\n\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    System.out.print(Ui.line);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    System.out.println(Ui.indent + \" Noted. I\u0027ve removed this task: \\n\" +"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                            Ui.indent + \"   \" + tasks.get(n) + \"\\n\" +"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                            Ui.indent + \" Now you have \" + (tasks.size() - 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    System.out.println(Ui.line);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    tasks.remove(n);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                } catch (DukeException ex) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    System.out.print(Ui.line);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    System.out.print(Ui.indent + ex.getMessage());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    System.out.println(Ui.line);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                return tasks;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            case 4:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    if (s.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                        throw new DukeException(\"The description cannot be empty.\\n\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    Task task \u003d new ToDo(input.substring(5));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    tasks.add(task);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    System.out.print(Ui.line);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    System.out.println(Ui.indent + \" Got it. I\u0027ve added this task: \\n\" +"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                            Ui.indent + \"   \" + task + \"\\n\" +"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                            Ui.indent + \" Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    System.out.println(Ui.line);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                } catch (DukeException ex) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    System.out.print(Ui.line);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    System.out.print(Ui.indent + ex.getMessage());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    System.out.println(Ui.line);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                return tasks;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            case 5:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    if (s.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                        throw new DukeException(\"The description cannot be empty.\\n\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    if (!input.contains(\"/by\")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                        throw new DukeException(\"Wrong input.\\n\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    String desc \u003d input.substring(9, input.indexOf(\u0027/\u0027) - 1);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    String date \u003d input.substring(input.indexOf(\"/by\") + 4);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    Task task \u003d new Deadline(desc, date);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    tasks.add(task);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    System.out.print(Ui.line);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    System.out.println(Ui.indent + \" Got it. I\u0027ve added this task: \\n\" +"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                            Ui.indent + \"   \" + task + \"\\n\" +"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                            Ui.indent + \" Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    System.out.println(Ui.line);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                } catch (DukeException ex) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    System.out.print(Ui.line);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    System.out.print(Ui.indent + ex.getMessage());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    System.out.println(Ui.line);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                return tasks;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            case 6:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    if (s.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                        throw new DukeException(\"The description cannot be empty.\\n\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    if (!input.contains(\"/at\")) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                        throw new DukeException(\"Wrong input.\\n\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    String desc \u003d input.substring(6, input.indexOf(\u0027/\u0027) - 1);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    String date \u003d input.substring(input.indexOf(\"/at\") + 4);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    Task task \u003d new Event(desc, date);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    tasks.add(task);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    System.out.print(Ui.line);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    System.out.println(Ui.indent + \" Got it. I\u0027ve added this task: \\n\" +"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                            Ui.indent + \"   \" + task + \"\\n\" +"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                            Ui.indent + \" Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    System.out.println(Ui.line);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                } catch (DukeException ex) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    System.out.print(Ui.line);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    System.out.print(Ui.indent + ex.getMessage());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    System.out.println(Ui.line);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                return tasks;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            case 7:"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    if (s.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                        throw new DukeException(\"The description cannot be empty.\\n\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    String search \u003d input.substring(5).toLowerCase();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    for (Task t : tasks) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                        if (t.getDescription().toLowerCase().contains(search)) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                            foundTasks.add(t);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    System.out.print(Ui.line);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    if (foundTasks.isEmpty()) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                        System.out.println(Ui.indent + \" There are no matching tasks.\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                        for (int i \u003d 0; i \u003c foundTasks.size(); i++) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                            System.out.println(Ui.indent + \" \" + (i + 1) + \".\" + foundTasks.get(i));"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    System.out.println(Ui.line);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                } catch (DukeException ex) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    System.out.print(Ui.line);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    System.out.print(Ui.indent + ex.getMessage());"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    System.out.println(Ui.line);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                return tasks;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                System.out.print(Ui.line);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                System.out.print(Ui.indent + \"Wrong input.\\n\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                System.out.println(Ui.line);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                return tasks;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryantay232": 176
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    final public static String line \u003d \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    final public static String indent \u003d \"    \";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    final public static String logo \u003d line"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            + \"     ____        _           \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            + \"    |  _ \\\\ _   _| | _____   \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            + \"    | | | | | | | |/ / _ \\\\  \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            + \"    | |_| | |_| |   \u003c  __/   \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            + \"    |____/ \\\\__,_|_|\\\\_\\\\___|\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            + \"     Hello! I\u0027m Duke          \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            + \"     What can I do for you?   \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            + line;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public void printLogo() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public String getInput() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        System.out.println(indent + \"!!! FAILED TO LOAD LIST !!!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryantay232": 35
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public void getCommand_bye() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        assertEquals(0, new Parser().getCommand(\"bye\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public void getCommand_list() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        assertEquals(1, new Parser().getCommand(\"list\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryantay232": 18
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        assertEquals(\"[N] test\", new Task(\"test\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public void testToFile() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        assertEquals(\"T|N|test\", new Task(\"test\").toFile());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryantay232": 18
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "lul"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "event return book /at sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "deadline do test /by then"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ryantay232": 6
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "PAUSE"
      }
    ],
    "authorContributionMap": {
      "ryantay232": 23
    }
  }
]
