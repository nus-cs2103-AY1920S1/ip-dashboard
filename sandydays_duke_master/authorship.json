[
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    private Task addedTask;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public AddCommand(Task t) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        this.addedTask \u003d t;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        tasks.addTask(addedTask);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        ui.printAddedTask(addedTask, tasks);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sandydays": 19
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sandydays": 7
    }
  },
  {
    "path": "src/main/java/DateAndTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public class DateAndTime {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    protected int date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    protected int month;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    protected int year;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    protected int timeNumber;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    protected String timeDay;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    protected String[] monthMappings \u003d new String[]{\"\", \"January\", \"February\", \"March\", \"April\", \"May\", \"June\","
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                                                    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"};"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public DateAndTime(String dateAndTime) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            String[] split \u003d dateAndTime.split(\" \");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            String date[] \u003d split[0].split(\"/\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            int time \u003d Integer.parseInt(split[1]) / 100;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            this.date \u003d Integer.parseInt(date[0]);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            this.month \u003d Integer.parseInt(date[1]);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            this.year \u003d Integer.parseInt(date[2]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            if (time \u003c 12) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                this.timeNumber \u003d (time \u003d\u003d 0) ? 12 : time;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                this.timeDay \u003d \"am\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                this.timeNumber \u003d time - 12;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                this.timeDay \u003d \"pm\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            throw new DukeException(\"Date and time not in correct format.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        String extra \u003d (date \u003d\u003d 1) ? \"st\" : (date \u003d\u003d 2) ? \"nd\" : (date \u003d\u003d 3) ? \"rd\" : \"th\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return this.date + extra + \" of \" + monthMappings[this.month] + \" \" + this.year + \", \" + this.timeNumber + this.timeDay;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sandydays": 38
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    protected DateAndTime by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        this.by \u003d new DateAndTime(by);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return \"D | \" + (isDone ? 1 : 0) + \" | \" + description + \" | \" + by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sandydays": 18
    }
  },
  {
    "path": "src/main/java/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public class DeadlineCommand extends AddCommand {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public DeadlineCommand(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        super(new Deadline(description, by));"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sandydays": 7
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    private int taskNum;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public DeleteCommand(int taskNum) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        Task taskChanged \u003d tasks.deleteTask(taskNum);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        ui.showDeletedTask(taskChanged);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        ui.showNumTasks(tasks);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sandydays": 20
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    private int taskNum;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public DoneCommand(int taskNum) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        Task taskChanged \u003d tasks.markDone(taskNum);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        ui.showChangedTask(taskChanged);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sandydays": 19
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "sandydays": 36,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sandydays"
        },
        "content": " }"
      }
    ],
    "authorContributionMap": {
      "sandydays": 14
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    protected DateAndTime at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public Event(String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        this.at \u003d new DateAndTime(at);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return \"E | \" + (isDone ? 1 : 0) + \" | \" + description + \" | \" + at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sandydays": 18
    }
  },
  {
    "path": "src/main/java/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public class EventCommand extends AddCommand {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public EventCommand(String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        super(new Event(description, at));"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sandydays": 7
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            ui.showExit();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sandydays": 19
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import java.lang.ArrayIndexOutOfBoundsException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    static Command parse(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        String[] command \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        switch (command[0]) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                return new ShowCommand();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                int i \u003d Integer.parseInt(command[1]) - 1;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                return new DoneCommand(i);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                int j \u003d Integer.parseInt(command[1]) - 1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                return new DeleteCommand(j);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                    return new TodoCommand(command[1]);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                    throw new DukeException(\"\\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                    String[] detailsD \u003d command[1].split(\" /by \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                    return new DeadlineCommand(detailsD[0], detailsD[1]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                    throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                    throw new DukeException(\"\\u2639 OOPS!!! The description of the deadline is incomplete.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                    String[] detailsE \u003d command[1].split(\" /at \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                    return new EventCommand(detailsE[0], detailsE[1]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                    throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                    throw new DukeException(\"\\u2639 OOPS!!! The description of the event is incomplete.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                return new UnknownCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "sandydays": 47
    }
  },
  {
    "path": "src/main/java/ShowCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public class ShowCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        ui.showTasks(tasks);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sandydays": 12
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public LinkedList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        LinkedList\u003cTask\u003e taskList \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                taskList \u003d readData(file, taskList);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    private LinkedList\u003cTask\u003e readData(File file, LinkedList\u003cTask\u003e tasks) throws DukeException, FileNotFoundException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        Scanner readFile \u003d new Scanner(file);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        while (readFile.hasNext()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            String nextTask \u003d readFile.nextLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            String[] details \u003d nextTask.split(Pattern.quote(\" | \"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            String type \u003d details[0];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                task \u003d new Todo(details[2]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            } else if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                task \u003d new Deadline(details[2], details[3]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                task \u003d new Event(details[2], details[3]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            if (details[1].equals(\"1\")) task.markAsDone();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void writeToFile(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        LinkedList\u003cTask\u003e tasks \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        String toWrite \u003d \"\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            toWrite +\u003d tasks.get(i).toSave();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            if (i !\u003d tasks.size() - 1) toWrite +\u003d \"\\n\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        fw.write(toWrite);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "sandydays": 78
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sandydays": 30
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    private LinkedList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        this.taskList \u003d new LinkedList\u003cTask\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public TaskList(LinkedList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public LinkedList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public Task markDone(int taskNum) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        if (taskNum + 1 \u003e taskList.size() || taskNum + 1 \u003c 0) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! This task does not exist.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        Task t \u003d taskList.remove(taskNum);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        t.markAsDone();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        taskList.add(taskNum, t);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public Task deleteTask(int taskNum) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        if (taskNum + 1 \u003e taskList.size() || taskNum + 1 \u003c 0) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! This task does not exist.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        Task t \u003d taskList.remove(taskNum);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        taskList.add(t);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sandydays": 40
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return \"T | \" + (isDone ? 1 : 0) + \" | \" + description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sandydays": 16
    }
  },
  {
    "path": "src/main/java/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public class TodoCommand extends AddCommand {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public TodoCommand(String command) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        super(new Todo(command));"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sandydays": 7
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        System.out.println(\"\\u2639 OOPS!!! Unable to load file. Try again!\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        String userInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void showError(String error) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        System.out.println(error);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void showExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void showTasks(TaskList taskList) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        LinkedList\u003cTask\u003e tasks \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            System.out.println((i + 1) + \".\" + tasks.get(i));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void showChangedTask(Task t) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        System.out.println(t);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void showDeletedTask(Task t) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        System.out.println(t);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void showNumTasks(TaskList taskList) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        int size \u003d taskList.getTasks().size();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        System.out.print(\"Now you have \" + size);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        if (size \u003d\u003d 1) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            System.out.println(\" task in the list.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            System.out.println(\" tasks in the list.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void printAddedTask(Task task, TaskList tasks) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        int taskListSize \u003d tasks.getTasks().size();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        System.out.print(\"Now you have \" + taskListSize);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        if (taskListSize \u003d\u003d 1) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            System.out.println(\" task in the list.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            System.out.println(\" tasks in the list.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sandydays": 72
    }
  },
  {
    "path": "src/main/java/UnknownCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public class UnknownCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        throw new DukeException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sandydays": 12
    }
  }
]
