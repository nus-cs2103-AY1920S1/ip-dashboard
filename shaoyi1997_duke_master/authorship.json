[
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "T | Not Done | adsasd"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "T | Not Done | asdggf"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "D | Not Done | asdas | 12/12/1999 0900"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 3
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Class for the command that adds a task into the tasklist."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Constructor for the AddCommand object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param ipt the string representation of the command input."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public AddCommand(String ipt) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        input \u003d ipt;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Indicates whether this is an exit command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public boolean isExit() { return false; }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Executes the add command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * The task will be parsed from the input string representation and added into the task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * The text file will be updated with the given task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * A completion message will be displayed after successful execution."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param tasks tasklist that stores all the tasks"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param ui ui object that deals with user interaction"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param storage storage object that deals with writing into the text file"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        Task tk;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        int idxOfSlash;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            if (input.length() \u003e\u003d 4) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                // add Deadline"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                if (input.length() \u003e\u003d 8 \u0026\u0026 input.substring(0, 8).equals(\"deadline\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                    idxOfSlash \u003d input.indexOf(\"/by \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                    if (idxOfSlash \u003d\u003d -1 || input.split(\" \")[1].contains(\"/\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                        throw new DukeException(\"The description of the deadline is incorrect.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                    tk \u003d new Deadline(input.substring(9, idxOfSlash - 1),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                            format.format(format.parse(input.substring(idxOfSlash + 4))));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                // add Event"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                else if (input.length() \u003e\u003d 5 \u0026\u0026 input.substring(0, 5).equals(\"event\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                    idxOfSlash \u003d input.indexOf(\"/at \");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                    if (idxOfSlash \u003d\u003d -1 || input.split(\" \")[1].contains(\"/\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                        throw new DukeException(\"The description of the event is incorrect.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                    tk \u003d new Event(input.substring(6, idxOfSlash - 1),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                            format.format(format.parse(input.substring(idxOfSlash + 4))));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                // add ToDos"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                else if (input.substring(0, 4).equals(\"todo\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                        tk \u003d new ToDo(input.substring(5));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                    } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                        throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                    throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                tasks.addTask(tk);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                storage.updateFile(tasks);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                ui.showResultOfCommand(\"     Got it. I\u0027ve added this task: \\n       \""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                        + tk + \"\\n     Now you have \" + tasks.getNumOfTask() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            ui.showError(\"I\u0027m sorry, but the datetime format is incorrect :-(\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 88
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Abstract class for a command to be executed when the user inputs a command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "abstract public class Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    abstract public boolean isExit();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    abstract public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 9
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Class for the deadline task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Contains a description of the task and the datetime for which it is due."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Constructor for Deadline task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Initializes the description and due datetime."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param des description of the deadline."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param by datetime for which the deadline is due."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public Deadline(String des, String by) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        super(des);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Getter for the description of the deadline task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return the string of the description of the deadline."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return description + \" | \" + by;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Returns the string representation of the deadline task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return string consisting of the type of task (deadline), done marker, description and due date and time."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 40
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Class for the command that deletes a task from the tasklist."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Constructor for the delete command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param taskNum the index of the task to be deleted"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public DeleteCommand(int taskNum) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        taskNumber \u003d taskNum;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Indicates whether this is an exit command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public boolean isExit() { return false; }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Executes the delete command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Given task will be deleted from the tasklist at the index position."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * A completion message will be displayed after successful deletion."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param tasks tasklist that stores all the tasks"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param ui ui object that deals with user interaction"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param storage storage object that deals with writing into the text file"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @throws DukeException exception is thrown when the index falls outside the number of tasks"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            if (taskNumber \u003e tasks.getNumOfTask() || taskNumber \u003c 1) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                throw new DukeException(\"List only has \" + tasks.getNumOfTask() + \" items.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                Task curTask \u003d tasks.getTaskByIndex(taskNumber - 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                tasks.deleteTaskByIdx(taskNumber - 1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                ui.showResultOfCommand(\"     Noted. I\u0027ve removed this task:\\n       \" + curTask"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                        + \"\\n     Now you have \" + tasks.getNumOfTask() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                storage.updateFile(tasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 49
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Class for the command that marks a given task done given its index."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Constructor for the done command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param taskNum the index of the task to be marked done."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public DoneCommand(int taskNum) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        taskNumber \u003d taskNum;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Indicates whether this is an exit command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public boolean isExit() { return false; }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Executes the done command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Given task will be marked done from the tasklist at the index position."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * A completion message will be displayed after successful deletion."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param tasks tasklist that stores all the tasks"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param ui ui object that deals with user interaction"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param storage storage object that deals with writing into the text file"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @throws DukeException exception is thrown when the index falls outside the number of tasks"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            if (taskNumber \u003e tasks.getNumOfTask() || taskNumber \u003c 1) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                throw new DukeException(\"List only has \" + tasks.getNumOfTask() + \" items.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                Task curTask \u003d tasks.getTaskByIndex(taskNumber - 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                curTask.markDone();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                ui.showResultOfCommand(\"     Nice! I\u0027ve marked this task as done: \\n     \" + curTask);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                storage.updateFile(tasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 48
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * A CLI program that tracks a lists of tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Capable of adding, deleting and listing tasks."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Tasks can be marked done."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Constructor for Duke program."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Initializes the Ui, Storage and Tasklist."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param filePath The file path of the txt file Duke loads and writes the task lists to."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @see Ui"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @see Storage"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @see TaskList"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Executes the Duke program."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * It successively reads the command input given by the user until the exit command is given."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                Command c \u003d ui.readCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Main method."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        new Duke(\"../../../data/tasks.txt\").run();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 55,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Class that represents an exception thrown when Duke encounters an invalid command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public DukeException (String msg) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 9
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Class for the event task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Contains a description of the task and the datetime on which the event starts."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Constructor for the event task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Initializes the description and datetime."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param description description of the event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param at date and time on which the event starts."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Getter for the description of the event task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return the string of the description of the event."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return description + \" | \" + at;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Returns the string representation of the event."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return string consisting of the type of task (event), done marker, description and due date and time."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 40
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Class for the command that prompts the program to terminate."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Constructor for the exit command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public ExitCommand() {}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Indicates whether this is an exit command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return true."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Prints the bye message through the Ui object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param tasks tasklist that stores all the tasks"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param ui ui object that deals with user interaction"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param storage storage object that deals with writing into the text file"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        ui.showResultOfCommand(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 30
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Class that represents the find command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Constructor for the find command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param ipt the string of search query."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public FindCommand(String ipt) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        input \u003d ipt;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Indicates if the command is the exit command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public boolean isExit() { return false; }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Executes the find command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Searches within the tasklist if any of the tasks match the search query."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Displays all tasks that matches."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param tasks tasklist that stores all the tasks"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param ui ui object that deals with user interaction"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param storage storage object that deals with writing into the text file"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @throws DukeException exception is thrown when no task is found."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            ArrayList\u003cTask\u003e tasklist \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            StringBuilder stringOfTasksFound \u003d new StringBuilder(\"     Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            int counter \u003d 0;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            for (Task tk : tasklist) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                String curTaskDescription \u003d tk.getDescription();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                if (curTaskDescription.contains(input)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                    stringOfTasksFound.append(\"     \" + counter + \".\" + tk.toString() + \"\\n\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                    counter++;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            if (counter \u003d\u003d 0) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                throw new DukeException(\"No tasks found\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            stringOfTasksFound.delete(stringOfTasksFound.length() - 1, stringOfTasksFound.length());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            ui.showResultOfCommand(stringOfTasksFound.toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 57
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Class for the command that prompts the program to terminate."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Constructor for the list command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public ListCommand() {}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Indicates whether this is an exit command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public boolean isExit() { return false; }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Executes the list command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * All tasks in the tasklist will be displayed to the user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Tasks are represented by their string representation."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param tasks tasklist that stores all the tasks"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param ui ui object that deals with user interaction"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param storage storage object that deals with writing into the text file"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @see  Task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        StringBuilder stringOfItems \u003d new StringBuilder(\"     Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        int numOfItems \u003d tasks.getNumOfTask();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        for (int i \u003d 0; i \u003c numOfItems; i++) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            stringOfItems.append(\"     \" + (i + 1) + \". \" + tasks.getTaskByIndex(i)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                    + (i \u003d\u003d numOfItems - 1 ? \"\" : \"\\n\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        ui.showResultOfCommand(stringOfItems.toString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 37
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Class that handles the loading and writing of tasks from/to a text file in the hard drive."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Constructor for the storage object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param fp string representation of the file path from the project source directory."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public Storage(String fp) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        filePath \u003d fp;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Updates the textfile with the latest tasklist by rewriting the entire tasklist."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param tasks tasklist that represents all the current tasks in the tasklist."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public void updateFile(TaskList tasks) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath, false);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            for (Task tk : taskList) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                fw.write((tk instanceof Deadline ? \"D\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                        : (tk instanceof Event ? \"E\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                        : \"T\"))"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                        + \" | \" + (tk.getDoneStatus() ? \"    Done\" : \"Not Done\")"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                        + \" | \" + tk.getDescription() + System.lineSeparator());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Loads the tasklist from the textfile in the hard drive."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return an arraylist consisting of the tasks parsed."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @throws FileNotFoundException exception thrown when the text file cannot be found."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            String[] details \u003d sc.nextLine().split(\"(\\\\s\\\\|\\\\s)\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            String taskType \u003d details[0];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            Task curTask;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            if (taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                curTask \u003d new ToDo(details[2]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            } else if (taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                curTask \u003d new Deadline(details[2], details[3]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                curTask \u003d new Event(details[2], details[3]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            if (details[1].equals(\"Done\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                curTask.markDone();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            taskList.add(curTask);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 71
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Class for a task in Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Consists of the description of the task and a marker to indicate if it is done."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Constructor for the task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Initializes the description and done marker for the task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Task is initialized as not done by default."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param des the description of the task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public Task(String des) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.description \u003d des;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Returns whether the task is done or not"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return boolean flag indicating whether the task is done or not"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public boolean getDoneStatus() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Getter for the description of the task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return the string of the description of the task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Returns the string representation of the task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return string consisting of done marker and description of the task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return \"[\" + (isDone ? \u0027\\u2713\u0027 : \u0027\\u2718\u0027) + \"] \" + description;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 55
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Class that represents the tasklist that holds all the tasks in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private ArrayList\u003cTask\u003e addedItems;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Empty Constructor for the tasklist."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        addedItems \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Constructor for the tasklist."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * The tasklist will be initialized with all the tasks in the given list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param ls tasklist to be initialized with."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public TaskList (ArrayList\u003cTask\u003e ls) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        addedItems \u003d ls;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Returns the number of tasks in the list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return int of the number of tasks in the list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public int getNumOfTask() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return addedItems.size();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Returns a task given its index."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param idx index of the task to be returned."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return the task represented by its index."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public Task getTaskByIndex(int idx) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return addedItems.get(idx);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Returns the tasklist in an ArrayList."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return ArrayList of the tasks."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return addedItems;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Deletes a tast in the tasklist."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param idx index of the task to be deleted."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public void deleteTaskByIdx(int idx) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        addedItems.remove(idx);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Adds a task into the list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param tk task to be added into the list."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public void addTask(Task tk) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        addedItems.add(tk);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 73
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Class for the deadline task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Contains a description of the task and the datetime for which it is due."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public ToDo(String des) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        super(des);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Returns the string representation of the todo task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return string consisting of the type of task (todo), done marker, description and due date and time."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 20
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Class for the Ui (User Interaction) object."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Handles all user input and program output to the user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Constructor for Ui."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Initializes the Scanner object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Inserts a line above and below the input string."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param input input string to be sandwiched by lines."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return string consisting of the input and two lines, above and below the string"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public static String insertLines(String input) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return \"    ____________________________________________________________\" + \"\\n\" + input + \"\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                + \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Prints the welcome message to the user."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        System.out.println(insertLines(\"     Hello! I\u0027m Duke\\n\" + \"     What can I do for you?\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Parses the command given by the user."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return Command object that specifies what command the user has given."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @throws DukeException exception is thrown when the command cannot be found or does not meet its specifications."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public Command readCommand() throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        String input \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        } else if (input.substring(0, 4).equals(\"find\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            return new FindCommand(input.substring(5));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        } else if (input.length() \u003e\u003d 6 \u0026\u0026 input.substring(0,4).equals(\"done\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            return new DoneCommand(Integer.parseInt(input.substring(5)));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        } else if ((input.length() \u003e\u003d 7 \u0026\u0026 input.substring(0,6).equals(\"delete\"))) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            return new DeleteCommand(Integer.parseInt(input.substring(7)));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            return new AddCommand(input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Displays the successful completion message after the completion of a command."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param msg completion message to be printed"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public void showResultOfCommand(String msg) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        System.out.println(insertLines(msg));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Displays the error message whenever a error is found."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param msg error message to be printed."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public void showError(String msg) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        System.out.println(insertLines(\"     ☹ OOPS!!! \" + msg));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Displays the loading error whenever the text file in which Duke reads and writes from cannot be opened."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        System.out.println(insertLines(\"     ☹ OOPS!!! The file cannot be opened\"));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 84
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    void testDescriptionGetter() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertEquals(\"Test | 12/12/2000 0800\", new Deadline(\"Test\", \"12/12/2000 0800\").getDescription());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    void testStringConversion() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertEquals(\"[D][\\u2718] Test (by: 12/12/2000 0800)\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                new Deadline(\"Test\", \"12/12/2000 0800\").toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 17
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    void testDescriptionGetter() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertEquals(\"Test | 12/12/2000 0800\", new Event(\"Test\", \"12/12/2000 0800\").getDescription());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    void testStringConversion() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertEquals(\"[E][\\u2718] Test (at: 12/12/2000 0800)\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                new Event(\"Test\", \"12/12/2000 0800\").toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 17
    }
  },
  {
    "path": "src/test/java/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    void testStringConversion() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertEquals(\"[T][\\u2718] Test\", (new ToDo(\"Test\")).toString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 11
    }
  }
]
