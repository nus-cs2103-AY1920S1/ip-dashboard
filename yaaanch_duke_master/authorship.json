[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 1,
      "-": 19
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        System.out.print(\"    Hello! I\u0027m Duke!\\n    What can I do for you?\\n\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        String currentInput \u003d input.nextLine();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        String[] currentInputArray \u003d currentInput.split(\"\\\\s\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        while (!currentInputArray[0].equals(\"bye\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                switch (currentInputArray[0]) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                    case \"list\":"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                            System.out.print(\"    You have no tasks in your list.\\n\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        System.out.print(\"    Here are the tasks in your list:\\n\" );"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        int i \u003d 1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        for (Task t : tasks) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                            System.out.print(\"    \" + i++ + \".\" + t + \"\\n\" );"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                    case \"done\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        if (currentInputArray.length \u003c 2) throw new InsufficientArgumentError();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        if (!currentInputArray[1].matches(\"-?\\\\d+\")) throw new MissingKeywordError(MissingKeywordError.Keyword.NUMBER);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        int doneTaskNumber \u003d Integer.parseInt(currentInputArray[1]) - 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        if (doneTaskNumber \u003c 0 || doneTaskNumber \u003e\u003d tasks.size()) throw new NoSuchTaskError();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        System.out.print(\"    Nice! I\u0027ve marked this task as done:\\n\" );"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        Task doneTask \u003d tasks.get(doneTaskNumber);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        doneTask.setDone();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        System.out.print(\"      \" + doneTask + \"\\n\" );"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                    case \"delete\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        if (currentInputArray.length \u003c 2) throw new InsufficientArgumentError();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        if (!currentInputArray[1].matches(\"-?\\\\d+\")) throw new MissingKeywordError(MissingKeywordError.Keyword.NUMBER);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        int deleteTaskNumber \u003d Integer.parseInt(currentInputArray[1]) - 1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        if (deleteTaskNumber \u003c 0 || deleteTaskNumber \u003e\u003d tasks.size()) throw new NoSuchTaskError();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        System.out.print(\"    Noted. I\u0027ve removed this task:\\n\" );"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        System.out.print(\"      \" + tasks.get(deleteTaskNumber) + \"\\n\" );"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        tasks.remove(deleteTaskNumber);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        System.out.print(\"    Now you have \" + tasks.size() + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        if (currentInputArray.length \u003c 2) throw new InsufficientArgumentError();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        Task todo \u003d new Todo(currentInput.substring(5));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        tasks.add(todo);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        System.out.print(\"    Got it. I\u0027ve added this task:\\n      \" + todo"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                                + \"\\n    Now you have \" + tasks.size() + \" tasks in the list.\\n\" );"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        if (currentInputArray.length \u003c 2) throw new InsufficientArgumentError();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        if (!currentInput.contains(\" /by \")) throw new MissingKeywordError(MissingKeywordError.Keyword.BY);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        String[] deadlineArr \u003d currentInput.split(\" /by \" );"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        if (deadlineArr.length \u003c 2 || deadlineArr[0].length() \u003c 10) throw new InsufficientArgumentError();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        Task deadline \u003d new Deadline(deadlineArr[0].substring(9), deadlineArr[1]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        tasks.add(deadline);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        System.out.print(\"    Got it. I\u0027ve added this task:\\n      \" + deadline"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                                + \"\\n    Now you have \" + tasks.size() + \" tasks in the list.\\n\" );"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        if (currentInputArray.length \u003c 2) throw new InsufficientArgumentError();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        if (!currentInput.contains(\" /at \")) throw new MissingKeywordError(MissingKeywordError.Keyword.AT);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        String[] eventArr \u003d currentInput.split(\" /at \" );"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        if (eventArr.length \u003c 2 || eventArr[0].length() \u003c 7) throw new InsufficientArgumentError();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        Task event \u003d new Event(eventArr[0].substring(6), eventArr[1]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        tasks.add(event);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        System.out.print(\"    Got it. I\u0027ve added this task:\\n      \" + event"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                                + \"\\n    Now you have \" + tasks.size() + \" tasks in the list.\\n\" );"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        throw new UnknownCommandError();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            } catch (DukeException d){"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                System.out.print(d.getMessage());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            currentInput \u003d input.nextLine();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            currentInputArray \u003d currentInput.split(\"\\\\s\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        System.out.print(\"    Bye. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 80,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        super(\"    \\u2639 Sorry. \" + s + \"\\n\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 13
    }
  },
  {
    "path": "src/main/java/InsufficientArgumentError.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class InsufficientArgumentError extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public InsufficientArgumentError() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        super(\"The description cannot be empty.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 5
    }
  },
  {
    "path": "src/main/java/MissingKeywordError.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class MissingKeywordError extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public enum Keyword {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        NUMBER, BY, AT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public MissingKeywordError(Keyword keyword) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        super(\"I need the \" + getKeywordString(keyword) + \" to work.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private static String getKeywordString(Keyword keyword) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        switch (keyword) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            case NUMBER:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                return \"number of a task\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            case BY:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                return \"keyword /by\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            case AT:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                return \"keyword /at\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                return \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 20
    }
  },
  {
    "path": "src/main/java/NoSuchTaskError.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class NoSuchTaskError extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public NoSuchTaskError() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        super(\"There is no such task.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 5
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 22
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 11
    }
  },
  {
    "path": "src/main/java/UnknownCommandError.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class UnknownCommandError extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public UnknownCommandError() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        super(\"I don\u0027t know what that means.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 5
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "mistake"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "event oops"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "fas"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 12
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 21
    }
  }
]
