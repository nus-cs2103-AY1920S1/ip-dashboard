[
  {
    "path": "duke/src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        this.type \u003d \"deadline\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    public Deadline(boolean isDone, String description, String by) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    \tsuper(isDone, description); // usually isDone \u003d true here"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    \tthis.by \u003d by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    \tthis.type \u003d \"deadline\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    \treturn this.description + \" /by \" + this.by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tirameshu": 26
    }
  },
  {
    "path": "duke/src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tprivate static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tprivate static SimpleDateFormat formatterIn \u003d new SimpleDateFormat(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tprivate static SimpleDateFormat formatterOut \u003d new SimpleDateFormat(\"d MMM yyyy ha\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tprivate static String filename \u003d \"./data/duke.txt\"; // todo isDone? description"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tprivate static void initialLoad() throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tString line \u003d null; // in case file is empty"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tFile f \u003d new File(filename);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tScanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\twhile (s.hasNext()) { // assumes duke.txt has correct format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\tboolean isDone;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\tString type \u003d s.next();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\tint binary \u003d Integer.valueOf(s.next());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\tif (binary \u003d\u003d 1) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\tisDone \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t} else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\tisDone \u003d false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\tString description \u003d s.nextLine().trim();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\tloadLine(type, isDone, description);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\ts.close();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t} catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tSystem.out.println(\"File not found!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tprivate static void loadLine(String type, boolean isDone, String description) throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tswitch(type) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tcase \"todo\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t    loadTodo(isDone, description);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t    break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tcase \"deadline\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t    loadDeadline(isDone, description);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t    break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tcase \"event\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t    loadEvent(isDone, description);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t    break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tprivate static Task loadTodo(boolean isDone, String description) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tTodo todo \u003d new Todo(isDone, description);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tlist.add(todo);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\treturn todo;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tprivate static Task loadDeadline (boolean isDone, String description) throws DukeException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tint indexBy \u003d description.indexOf(\"/\"); // potential source of error"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tif (indexBy \u003d\u003d -1) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tthrow new DukeException(\"Put / before by!\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tString taskDesc \u003d description.substring(0, indexBy - 1); // start after space, end before space before /"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tString dateInString \u003d line.substring(indexBy + 4);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tDate date \u003d formatterIn.parse(dateInString);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tString by \u003d formatterOut.format(date);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tDeadline dead \u003d new Deadline(isDone, taskDesc, by);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tlist.add(dead);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\treturn dead;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tprivate static Task loadEvent(boolean isDone, String description) throws DukeException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tint indexAt \u003d description.indexOf(\"/\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tif (indexAt \u003d\u003d -1) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tthrow new DukeException(\"Put / before at!\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tString taskDesc \u003d description.substring(0, indexAt - 1); // start after space, end before space before /"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tString dateInString \u003d line.substring(indexAt + 4);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tDate date \u003d formatterIn.parse(dateInString);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tString at \u003d formatterOut.format(date);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tEvent event \u003d new Event(isDone, taskDesc, at);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tlist.add(event);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\treturn event;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t * Writes updated todo list to file."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\tprivate static void update(ArrayList\u003cTask\u003e list, String filename) throws IOException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t// writes into file"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tFileWriter fw \u003d new FileWriter(filename, false); // rewrites the entire doc"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tfor (Task task: list) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tString type \u003d task.getType();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tint binary \u003d task.isDone ? 1 : 0;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tString toWrite \u003d type + \" \" + binary + \" \" + task.getDescription();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tfw.write(toWrite + System.lineSeparator());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tfw.close();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t/*"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tString logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t+ \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t+ \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t+ \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t+ \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tSystem.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t*/"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tinitialLoad();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t "
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tSystem.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tScanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tString next \u003d scanner.next(); // no longer need nextline because adding comes with type of task"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\twhile (!next.equals(\"bye\")) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\ttry {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\tif (next.equals(\"list\")) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\tSystem.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\tfor (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\t\tSystem.out.println((i + 1) + \".\" + list.get(i).toString());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t} else if (next.equals(\"done\")) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\tif (list.isEmpty()) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\t\tscanner.nextLine(); // just to clear whatever\u0027s left on the line"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\t\tthrow new DukeException(\"You have no task to do!\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\t} else if (!scanner.hasNextInt()) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\t\tthrow new DukeException(\"Do include the task number that you have done!\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\tint index \u003d scanner.nextInt(); // since scanner only took in the word done"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\tTask task \u003d list.get(index - 1);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\ttask.markAsDone();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\tSystem.out.println(\"Nice! I\u0027ve marked this task as done:\\n  \" + task.toString());"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t} else if (next.equals(\"delete\")) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\tif (list.isEmpty()) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\t\tscanner.nextLine(); // just to clear whatever\u0027s left on the line"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\t\tthrow new DukeException(\"You have no task to delete!\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\t} else if (!scanner.hasNextInt()) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\t\tthrow new DukeException(\"Which task do you want to delete?\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\tint index \u003d scanner.nextInt(); // since scanner only took in the word done"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\tTask task \u003d list.get(index - 1);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\tlist.remove(task);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\tSystem.out.println(\"Noted. I\u0027ve removed this task:\\n  \" + task.toString());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\tSystem.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t} else {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\tTask task;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\tString line \u003d scanner.nextLine().trim(); // would be \\n if incorrect input"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\tswitch (next) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\tcase \"todo\":"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\t\tif (line.isEmpty()) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\t\t\tthrow new DukeException(\"☹ OOPS!!! The description of a \" + next + \" cannot be empty.\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\t\t}"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\t\ttask \u003d loadTodo(false, line);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\tcase \"deadline\":"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\t\tif (line.isEmpty()) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\t\t\tthrow new DukeException(\"☹ OOPS!!! The description of a \" + next + \" cannot be empty.\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\t\t}"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\t\ttask \u003d loadDeadline(false, line);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\tcase \"event\":"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\t\tif (line.isEmpty()) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\t\t\tthrow new DukeException(\"☹ OOPS!!! The description of a \" + next + \" cannot be empty.\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\t\t}"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\t\ttask \u003d loadEvent(false, line);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\tdefault:"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\t\tthrow new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\tif (task \u003d\u003d null) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\t\tthrow new DukeException(\"There is no new task!\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\tSystem.out.println(\"Got it. I\u0027ve added this task:\\n  \" + task.toString());"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t\tSystem.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t} catch (DukeException de){"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t\tSystem.out.println(de.toString());"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tnext \u003d scanner.next();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t// bye invoked"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t// update duke.txt with list"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tupdate(list, filename);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t} catch (IOException e) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t\tSystem.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tSystem.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\t"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "\t\tscanner.close();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tirameshu": 211,
      "-": 9
    }
  },
  {
    "path": "duke/src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tirameshu": 7
    }
  },
  {
    "path": "duke/src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        this.type \u003d \"event\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    public Event(boolean isDone, String description, String at) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    \tsuper(isDone, description); // usually isDone \u003d true here"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    \tthis.at \u003d at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    \tthis.type \u003d \"event\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    \treturn this.description + \" /at \" + this.at;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tirameshu": 26
    }
  },
  {
    "path": "duke/src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    boolean isDone; // deliberate, else need overload with method for isDone"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        this.type \u003d \"task\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    public Task(boolean isDone, String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        this.type \u003d \"task\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        return (isDone ? \"[\\u2713] \" + this.description : \"[\\u2718] \" + this.description); //return tick or X symbols"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tirameshu": 33
    }
  },
  {
    "path": "duke/src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        this.type \u003d \"todo\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    public Todo(boolean isDone, String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    \tsuper(isDone, description); // usually isDone \u003d true here"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    \tthis.type \u003d \"todo\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tirameshu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tirameshu": 17
    }
  },
  {
    "path": "duke/src/main/java/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "todo 0 read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tirameshu"
        },
        "content": "deadline 0 2100 /by now"
      }
    ],
    "authorContributionMap": {
      "tirameshu": 2
    }
  }
]
