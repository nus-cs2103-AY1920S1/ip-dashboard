[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "task runTests(type:Exec) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    workingDir \u003d \"text-ui-test\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    commandLine \u003d \"./runtest.sh\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanlk99": 11,
      "-": 15
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "class AddCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    Task toAdd;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    public AddCommand(Task toAdd) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        this.toAdd \u003d toAdd;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    public boolean terminate() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    public void execute(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        taskList.add(toAdd);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        Formatter.printHorizontalLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        Formatter.formatLine(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        Formatter.formatLine(\"  \" + toAdd);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        Formatter.formatLine(\"Now you have \" + taskList.size() + \" task\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            (taskList.size() \u003d\u003d 1 ? \"\" : \"s\") + \" in the list.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        Formatter.printHorizontalLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanlk99": 24
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "abstract class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    abstract public boolean terminate();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    abstract public void execute(ArrayList\u003cTask\u003e taskList) throws DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanlk99": 7
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    String time;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    public Deadline(String description, String time) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + time + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanlk99": 13
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    int index;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    public boolean terminate() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    public void execute(ArrayList\u003cTask\u003e taskList) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d taskList.size()) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            throw new DukeException(\"That is not a valid task number.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        Task toRemove \u003d taskList.get(index);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        Formatter.printHorizontalLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        Formatter.formatLine(\"Noted. I\u0027ve removed this task.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        Formatter.formatLine(\"  \" + toRemove);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        Formatter.formatLine(\"Now you have \" + taskList.size() + \" task\" +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            (taskList.size() \u003d\u003d 1 ? \"\" : \"s\") + \" in the list.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        Formatter.printHorizontalLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanlk99": 29
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "class DoneCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    int index;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    public boolean terminate() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    public void execute(ArrayList\u003cTask\u003e taskList) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d taskList.size()) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            throw new DukeException(\"That is not a valid task number.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        taskList.get(index).markAsDone();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        Formatter.printHorizontalLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        Formatter.formatLine(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        Formatter.formatLine(\"  \" + taskList.get(index));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        Formatter.printHorizontalLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanlk99": 26
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    private void init() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        greetUser();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "                String rawInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "                Command parsedCommand \u003d Parser.parseInput(rawInput);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "                parsedCommand.execute(taskList);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "                if (parsedCommand.terminate()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "                Formatter.printHorizontalLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "                Formatter.formatLine(\"Sorry! \" + e);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "                Formatter.printHorizontalLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        new Duke().init();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    private void greetUser() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        String[] greeting \u003d {\" ____        _        \","
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            \"|  _ \\\\ _   _| | _____ \","
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            \"| | | | | | | |/ / _ \\\\\","
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            \"| |_| | |_| |   \u003c  __/\","
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\","
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            \"Hello! I\u0027m Duke.\","
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            \"What can I do for you?\"};"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        Formatter.printHorizontalLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        for (String line : greeting) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            Formatter.formatLine(line);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        Formatter.printHorizontalLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanlk99": 43,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "class DukeException extends RuntimeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    String message;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanlk99": 13
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    String time;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    public Event(String description, String time) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + time + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanlk99": 13
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "class ExitCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    public boolean terminate() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    public void execute(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        Formatter.printHorizontalLine();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        Formatter.formatLine(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        Formatter.printHorizontalLine();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanlk99": 13
    }
  },
  {
    "path": "src/main/java/Formatter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "public class Formatter {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    public static void printHorizontalLine() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        formatLine(\"________________________________________\" +"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            \"________________________________________\\n\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    public static void formatLine(String output) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        System.out.println(\"    \" + output);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanlk99": 10
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "class ListCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    public boolean terminate() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    public void execute(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        Formatter.printHorizontalLine();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            Formatter.formatLine(\"You have no tasks right now.\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            Formatter.formatLine(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "                Formatter.formatLine((i + 1) + \".\" + taskList.get(i));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        Formatter.printHorizontalLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanlk99": 20
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "import java.lang.NumberFormatException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "import java.lang.RuntimeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    public static Command parseInput(String rawInput) throws DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        String commandPhrase \u003d rawInput.split(\" \", 2)[0];"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        switch (commandPhrase) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "                index \u003d Integer.parseInt(rawInput.split(\" \", 2)[1]) - 1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "                return new DoneCommand(index);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "                throw new DukeException(\"Please use \u0027done i\u0027 to mark completion of the i-th task in the list.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "                index \u003d Integer.parseInt(rawInput.split(\" \", 2)[1]) - 1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "                return new DeleteCommand(index);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "                throw new DukeException(\"Please use \u0027delete i\u0027 to delete the i-th task in the list.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            return new AddCommand(parseTask(rawInput));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            throw new DukeException(\"I don\u0027t understand that command.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    private static Task parseTask(String rawInput) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        String taskType \u003d rawInput.split(\" \", 2)[0];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        String taskRawDesc;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        String taskDesc;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        String taskTime;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        if (!rawInput.contains(\" \")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            throw new DukeException(\"The description of a \" + taskType + \" cannot be empty.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        taskRawDesc \u003d rawInput.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            return new ToDo(taskRawDesc);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            if (!taskRawDesc.contains(\" /by \")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "                throw new DukeException(\"Please specify the deadline using /by (with spaces preceding and following).\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            taskDesc \u003d taskRawDesc.split(\" /by \", 2)[0];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            taskTime \u003d taskRawDesc.split(\" /by \", 2)[1];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            if (taskDesc.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "                throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            } if (taskTime.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "                throw new DukeException(\"Please specify the deadline using /by (with spaces preceding and following).\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            return new Deadline(taskDesc, taskTime);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            if (!taskRawDesc.contains(\" /at \")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "                throw new DukeException(\"Please specify the event time using /at (with spaces preceding and following).\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            taskDesc \u003d taskRawDesc.split(\" /at \", 2)[0];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            taskTime \u003d taskRawDesc.split(\" /at \", 2)[1];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            if (taskDesc.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "                throw new DukeException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            } if (taskTime.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "                throw new DukeException(\"Please specify the event time using /at (with spaces preceding and following).\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            return new Event(taskDesc, taskTime);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "            throw new RuntimeException(\"Our parser encountered a fatal error.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanlk99": 86
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    String desc;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    public Task(String desc) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        return (isDone ? \"[O]\" : \"[X]\"); //can\u0027t display unicode"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        return getStatusIcon() + \" \" + desc;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanlk99": 22
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanlk99": 10
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "fi"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "# count the number of testcases"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "testNo\u003d$( ls testcases/input* 2\u003e/dev/null -Ubad1 -- log* | wc -l )"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "for (( i \u003d 1; i \u003c\u003d testNo; i++ ))"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "do"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    java -classpath ../bin Duke \u003c testcases/input-$i \u003e temp-$i"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    diff temp-$i testcases/output-$i"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    then"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    else"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "        echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanlk99"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "    rm temp-$i"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanlk99"
        },
        "content": "done"
      }
    ],
    "authorContributionMap": {
      "tanlk99": 32
    }
  }
]
