[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "test {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    mainClassName \u003d \"duke.ui.Launcher\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "run{"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 32,
      "-": 15
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Represents a bot which tracks user\u0027s tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** Storage to load, save and store user data. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private Storage storage \u003d new Storage(\"data.txt\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** TaskList to store all the tasks. */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** Boolean to check whether user is exiting Duke. */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private boolean isExit \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Previously saved data will be loaded and converted into a list of tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Otherwise, an empty list will be initialized."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return notice notifying the user of whether data is loaded."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public String loadStorage() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String s \u003d \"Hello i\u0027m Duke! What can i do for you?\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            return \"Successfully loaded previous data. \\n\" + s;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            return e.getMessage() + \"\\n\" + s;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Checks whether user is exiting Duke."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return boolean signifying whether user is exiting Duke."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Gets response to the user input."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param input commands users entered to be executed."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return response to the user to be printed out."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            Command c \u003d Parser.parseCommand(input);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            String response \u003d  c.execute(tasks, storage);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 61
    }
  },
  {
    "path": "src/main/java/duke/command/AddDeadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Represents a command to add a deadline object to TaskList."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class AddDeadline extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** Description and deadline of task entered by user.*/"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    protected String userIn;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Initializes an AddDeadline Object with the user input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param userIn description and deadline of task entered by user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public AddDeadline(String userIn) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        this.userIn \u003d userIn;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Adds a Deadline task object into the list of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tasks TaskList object which represents the list of tasks created by the user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param storage storage which loads, saves and stores data of user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return String to notify the user of the execution of this command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @throws DukeException if user input is invalid."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            String[] splitUserIn \u003d userIn.split(\" /by \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            Task newDl \u003d new Deadline(splitUserIn[0], splitUserIn[1]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            tasks.addTask(newDl);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            String response \u003d \"Got it. I\u0027ve added this task: \\n\" + newDl + \"\\nNow you have \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                    + tasks.getSize() + \" task(s) in the list.\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            throw new DukeException(\"Invalid description\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 44
    }
  },
  {
    "path": "src/main/java/duke/command/AddEvent.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Represents a command to add an event object to TaskList."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class AddEvent extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** Description of event entered by user. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    protected String userIn;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Initializes an Event object with the user input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param userIn description of event entered by user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public AddEvent(String userIn) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        this.userIn \u003d userIn;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Adds an event object into the list of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tasks TaskList object which represents the list of tasks created by the user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param storage storage which loads, saves and stores data of user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return String to notify the user of the execution of this command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @throws DukeException if user input is invalid."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            String[] splitUserIn \u003d userIn.split(\" /at \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            Task newEvent \u003d new Event(splitUserIn[0], splitUserIn[1]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            tasks.addTask(newEvent);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            String response \u003d \"Got it. I\u0027ve added this task: \\n\" + newEvent + \"\\nNow you have \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                    + tasks.getSize() + \" task(s) in the list.\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            throw new DukeException(\"Invalid description\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 43
    }
  },
  {
    "path": "src/main/java/duke/command/AddTodo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Represents a command to add a Todo object to TaskList."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class AddTodo extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** Description of task entered by user.*/"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    protected String userIn;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Initializes an AddTodo Object with the user input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param userIn description of task entered by user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public AddTodo(String userIn) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        this.userIn \u003d userIn;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Adds a Todo task object into the list of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tasks TaskList object which represents the list of tasks created by the user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param storage storage which loads, saves and stores data of user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return String to notify the user of the execution of this command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @throws DukeException if user input is invalid."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        Task newTodo \u003d new Todo(userIn);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        tasks.addTask(newTodo);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String response \u003d \"Got it. I\u0027ve added this task: \\n\" + newTodo + \"\\nNow you have \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                + tasks.getSize() + \" task(s) in the list.\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 38
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Represents a command entered by the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** Represents whether user wants to exit the program. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    protected boolean isExit \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Returns whether the user wants to exit the program."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return whether user wants to exit the program."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Executes the command accordingly and make changes to the TaskList of tasks and"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * the storage."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tasks TaskList object which represents the list of tasks created by the user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param storage storage which loads, saves and stores data of user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return String to notify the user of the execution of this command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @throws DukeException if user input is invalid."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public abstract String execute(TaskList tasks, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 32
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Represents a command to delete a task in the list of tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** Index of task user wants to delete. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    String userIn;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Initializes a DeleteCommand with the user input."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param userIn index of task user wants to delete."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public DeleteCommand(String userIn) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        this.userIn \u003d userIn;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Deletes a specified task requested by the user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tasks TaskList object which represents the list of tasks created by the user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param storage storage which loads, saves and stores data of user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return String to notify the user of the execution of this command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @throws DukeException if index in user input is invalid."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            int ind \u003d Integer.parseInt(userIn) - 1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            Task delTask \u003d tasks.getTask(ind);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            tasks.deleteTask(ind);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            String response \u003d \"Noted. I\u0027ve removed this task: \\n\" + delTask + \"\\nNow you have \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                    + tasks.getSize() + \" task(s) in the list.\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            throw new DukeException(\"Invalid task number entered\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 42
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Represents a command to complete a task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** Index of task user has completed. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    String userIn;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Initializes a DoneCommand with the user input."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param userIn index of task user has completed."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public DoneCommand(String userIn) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        this.userIn \u003d userIn;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Completes a specified task by marking it as done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tasks TaskList object which represents the list of tasks created by the user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param storage storage which loads, saves and stores data of user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return String to notify the user of the execution of this command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @throws DukeException if index in user input is invalid."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            int ind \u003d Integer.parseInt(userIn) - 1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            Task currTask \u003d tasks.getTask(ind);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            currTask.markAsDone();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            String response \u003d \"Nice! I\u0027ve marked this task as done: \\n\" + currTask;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            throw new DukeException(\"Invalid task number entered\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 41
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Represents a command to exit the program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Saves the TaskList in the storage file and changes isExit to true to exit the program."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tasks TaskList object which represents the list of tasks created by the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param storage storage which loads, saves and stores data of user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return String to notify the user of the execution of this command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @throws DukeException if there is a saving error."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String response \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        storage.saveAll(tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 24
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Represents command to search for a task by searching a keyword."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** Keyword entered by user. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    protected String userIn;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Initializes a FindCommand object with keyword entered by user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param userIn keyword entered by user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public FindCommand(String userIn) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        this.userIn \u003d userIn;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Finds tasks that contain the keyword entered by user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tasks TaskList representing a list of all tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param storage storage used for saving, loading and storing user data."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return String to notify the user of the execution of this command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        sb.append(\"Here are the matching tasks in your list + \\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            Task currTask \u003d tasks.getTask(i);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            String[] splitString \u003d currTask.getKeywords().split(\" \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            for (String s : splitString) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                if (s.equalsIgnoreCase(userIn)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                    sb.append(count + \". \" + currTask + \"\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                    count++;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 44
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Represents a command to list out all the tasks created by the user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Lists out the tasks created by the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tasks TaskList object which represents the list of tasks created by the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param storage storage which loads, saves and stores data of user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return String to notify the user of the execution of this command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        sb.append(\"Here are the tasks in your list: \\n\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            sb.append(i + 1 + \". \" + tasks.getTask(i) + \"\\n\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 24
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Represents exception which arises from errors when running Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Initializes the DukeException object with a message."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param message message describing the error."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 14
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.command.AddTodo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.command.AddEvent;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.command.AddDeadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Represents a Parser which is used to convert user input into the necessary objects."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Converts commands from user into the corresponding command objects to execute the commands."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param command command from the user."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return Command object created from the command from user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @throws DukeException if command is invalid."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public static Command parseCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            String[] splitString \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            if (splitString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                switch (splitString[0].toLowerCase()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                    return new ListCommand();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                    return new ExitCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                    throw new DukeException(\"Invalid Input!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                switch (splitString[0].toLowerCase()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                    return new AddTodo(splitString[1]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                    return new AddDeadline(splitString[1]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                    return new AddEvent(splitString[1]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                    return new DoneCommand(splitString[1]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                    return new DeleteCommand(splitString[1]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                    return new FindCommand(splitString[1]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                    throw new DukeException(\"Invalid Input!\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            throw new DukeException(\"Invalid description\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Creates new Task objects depending on the saved data of the user"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * and adds it to the list of tasks. Completion of tasks are also checked"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * against the data and will be marked as done if the task is completed."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param loadData saved data from the user to be loaded."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tasks ArrayList of tasks created from loading previously saved data."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @throws DukeException if description or time and date of tasks are invalid."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public static void parseLoad(String loadData, ArrayList\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String[] splitData \u003d loadData.split(\" \\0 \");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        if (splitData[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            Task t \u003d new Todo(splitData[2]);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            if (splitData[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                t.markAsDone();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            tasks.add(t);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } else if (splitData[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            Task t \u003d new Deadline(splitData[2], splitData[3]);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            if (splitData[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                t.markAsDone();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            tasks.add(t);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            Task t \u003d new Event(splitData[2], splitData[3]);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            if (splitData[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                t.markAsDone();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            tasks.add(t);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 99
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Represents a storage to store, load and save data of user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** Path of the file. */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    protected String filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** File object of the filePath. */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    protected File dataFile;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Initializes a Storage object with the specified file path."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param filePath file path of the file to be used to save data."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        dataFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Loads any previous data of the user."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Data is converted into an ArrayList of tasks."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return ArrayList of tasks which were saved previously by the user."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @throws DukeException if there is error loading the data or there is"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     *     no previous data."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            boolean shouldCreate \u003d dataFile.createNewFile();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            if (shouldCreate) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                throw new DukeException(\"No previously saved data\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            Scanner sc \u003d new Scanner(dataFile);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                String data \u003d sc.nextLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                Parser.parseLoad(data, tasks);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            throw new DukeException(\"Error loading\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Saves the list of tasks created by the user into the file."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tasks ArrayList of tasks to be saved."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @throws DukeException if there is error saving the tasks."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public void saveAll(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            FileWriter fw \u003d new FileWriter(dataFile);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                Task currTask \u003d tasks.getTask(i);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                fw.write(currTask.getSaveData() + \"\\n\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            throw new DukeException(\"Error saving\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 75
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Represents a Task which has a deadline to adhere to."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** String which represents the deadline of the task. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** Date object which represents the deadline of the task. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    protected Date dateBy;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** Formatter object to format the deadline correctly. */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    protected static SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Initializes a Deadline Object with the description of the task and the deadline of the task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * This object is initialized as uncompleted."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param by deadline of the task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @throws DukeException if description is empty or the deadline is of the wrong format."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        checkValidBy();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private void checkValidBy() throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            this.dateBy \u003d formatter.parse(by);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            if (!formatter.format(dateBy).equals(by)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                throw new DukeException(\"Invalid date!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            throw new DukeException(\"Invalid date format : dd/mm/yyyy HHmm\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Returns a string consisting of keywords that users can use to search for this"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return String of keywords."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public String getKeywords() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return description + \" \" + by;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Returns a string representation to be used for saving data of this object."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return String representation of this object for saving."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public String getSaveData() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String status \u003d isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return \"D \\0 \" + super.getSaveData() + \" \\0 \" + by;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Returns a string representation of this object."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return String representation of this object."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 73
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Represents an Event."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** String which represents the date and time of the event. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** Date object which represents the date and time of the event. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    protected Date dateAt;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** Formatter object to format the date and time correctly. */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    protected static SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Initializes an Event Object with the description of the event and its date"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * and time."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * This object is initialized as uncompleted."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param description description of the event."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param at date and time of the event."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @throws DukeException if description is empty or the date and time is of the wrong format."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public Event(String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        checkValidAt();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private void checkValidAt() throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            this.dateAt \u003d formatter.parse(at);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            if (!formatter.format(dateAt).equals(at)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                throw new DukeException(\"Invalid date!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            throw new DukeException(\"Invalid date format : dd/mm/yyyy HHmm\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Returns a string consisting of keywords that users can use to search for this"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * event."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return String of keywords."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public String getKeywords() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return description + \" \" + at;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Returns a string representation to be used for saving data of this object."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return String representation of this object for saving."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public String getSaveData() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String status \u003d isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return \"D \\0 \" + super.getSaveData() + \" \\0 \" + at;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Returns a string representation of this object."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return String representation of this object."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 74
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Represents a task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** String which represents the description of the task. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** Boolean which represents whether the task is completed. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    protected boolean isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Initializes a Task Object with the description of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Task Object initializes as uncompleted."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @throws DukeException if description is empty or just white spaces."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public Task(String description) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        if (description.trim().isEmpty()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            throw new DukeException(\"Description shouldn\u0027t be empty!\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Returns a status icon to represent whether this task is completed."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return Status icon to represent whether this task is completed."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Completes this task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Returns a string consisting of keywords that users can use to search for this"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return String of keywords."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public String getKeywords() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Returns a string representation to be used for saving data of this object."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return String representation of this object for saving."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public String getSaveData() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String status \u003d isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return status + \" \\0 \" + description;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Returns a string representation of this object."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return String representation of this object."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 69
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Represents a list of every task created by the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** ArrayList of tasks created by the user in this TaskList.*/"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Initializes a TaskList object with the specified list of tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tasks an existing list of tasks which will be initialized with the TaskList object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Initializes a TaskList object with an empty list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Adds a specified task to the list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param task task to be added to the list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Deletes a specified task from the list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param ind index of the task to be deleted from the list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public void deleteTask(int ind) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        tasks.remove(ind);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Returns a specified task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param ind index of the task to be returned."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return Specified task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public Task getTask(int ind) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return tasks.get(ind);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Returns the size of the list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return Size of the list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 59
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Represents a task to be done."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Initializes a Todo object with the description of the task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * This object is initialized as uncompleted."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @throws DukeException if description is empty or just white spaces."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public Todo(String description) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Returns a string representation to be used for saving data of this object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return String representation of this object for saving."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public String getSaveData() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String status \u003d isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return \"T \\0 \" + super.getSaveData();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Returns a string representation of this object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return String representation of this object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 37
    }
  },
  {
    "path": "src/main/java/duke/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.scene.paint.ImagePattern;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private Circle displayPicture;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private DialogBox(String text, Image img, String color) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        dialog.setStyle(\"-fx-background-color:\" + color + \"; -fx-background-radius: 20\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        getCircleImg(img, displayPicture);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Returns a DialogBox that represents user\u0027s input, with their image."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param text user\u0027s input."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param img user\u0027s image"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return DialogBox representing user."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return new DialogBox(text, img, \"MISTYROSE\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Returns a DialogBox that represents Duke\u0027s response to user\u0027s command, with their image."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param text Duke\u0027s response to user\u0027s command."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param img Duke\u0027s image."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return DialogBox representing Duke."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        var db \u003d new DialogBox(text, img, \"LAVENDER\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Fills a circle with the image given to obtain a circular image."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param img image to be filled in the circle."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param cir circle which will be filled by image."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public void getCircleImg(Image img, Circle cir) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        cir.setStroke(Color.LIGHTPINK);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        cir.setFill(new ImagePattern(img));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 91
    }
  },
  {
    "path": "src/main/java/duke/ui/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "waifonglee": 13
    }
  },
  {
    "path": "src/main/java/duke/ui/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public void stop() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        duke.getResponse(\"Bye\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "waifonglee": 38
    }
  },
  {
    "path": "src/main/java/duke/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.jpg\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/wooyoo.jpg\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Sets duke to a Duke object to link MainWindow to it."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param d Duke object to link MainWindow to."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                DialogBox.getDukeDialog(duke.loadStorage(), dukeImage)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        );"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        );"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        if (duke.isExit()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 66
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "\u003c?import javafx.scene.shape.Circle?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"HHIHIHI\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            \u003cInsets bottom\u003d\"15.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        \u003cCircle fx:id\u003d\"displayPicture\" centerX\u003d\"250.0\" centerY\u003d\"250.0\" radius\u003d\"34.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 26
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"603.0\" prefWidth\u003d\"610.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"3.0\" layoutY\u003d\"561.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"533.0\" style\u003d\"-fx-background-color: snow;\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"534.0\" layoutY\u003d\"561.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-radius: 10; -fx-background-color: powderblue;\" text\u003d\"Enter\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutY\u003d\"2.0\" prefHeight\u003d\"560.0\" prefWidth\u003d\"610.0\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"563.0\" prefWidth\u003d\"586.0\" style\u003d\"-fx-background-color: azure;\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 19
    }
  },
  {
    "path": "src/test/java/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public void testToString() throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        assertEquals(\"[D][\\u2718] do 2103 project (by: 26/08/2019 2359)\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                new Deadline(\"do 2103 project\", \"26/08/2019 2359\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public void testGetSaveData() throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        assertEquals(\"D \\0 0 \\0 test \\0 26/08/2019 1400\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                new Deadline(\"test\", \"26/08/2019 1400\").getSaveData());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 19
    }
  },
  {
    "path": "src/test/java/duke/task/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public void testToString() throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        assertEquals(\"[T][\\u2718] do 2103 project\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                new Todo(\"do 2103 project\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public void testGetSaveData() throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        assertEquals(\"T \\0 0 \\0 test\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                new Todo(\"test\").getSaveData());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 19
    }
  }
]
