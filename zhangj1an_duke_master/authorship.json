[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Useful Commands"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "Duke Increment | Tutorial"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 2,
      "-": 38
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    mainClassName \u003d \"dukepkg.launcher.Launcher\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "run {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "test {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    failFast \u003d true"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    archiveBaseName \u003d \"tsuki\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    archiveVersion \u003d \"\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 46,
      "-": 15
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "T # 1 # finish 3230"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "E # 0 # 3230 lec # tmr"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "T # 0 # finish 3244 tut"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "E # 1 # things # tmr"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "E # 0 # a # 12nd of December 2019, 2pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "D # 0 # b # 8th of December 2008, 6pm"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "E # 0 # add # tmr"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "T # 0 # 3244"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "T # 0 # 3333 /for 2hr"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "T # 0 # 33333 /for"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "T # 0 # 123 /for"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "T # 0 # 4321 /for 2hr"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "T # 0 # 43210 /for"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "T # 0 # 12345 /for 1hr"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "E # 0 # reading # 8"
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 15
    }
  },
  {
    "path": "data/zjtasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "D # 0 # marathon # 2hrs"
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 1
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Hi! Tsuki Task Manager is a girl\u0027s school themed app that helps you organize your tasks, ranging from todos, events to deadlines. Specifically, Duke is optimized for those who prefer to work with a Command Line Interface (CLI) while still enjoys a pleasant Graphical User Interface (GUI). If you can type comfortably fast, Duke can get your bucket list management more lightweight and fun than traditional GUI apps. Interested? Jump to the section 2, `Quick Start` to get started."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "![Sample usage](Ui.png)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "## 2. Quick Start"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "1. Ensure you have Java `11` or above installed in your computer."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "2. Download the latest `tsuki.jar` here."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "3. Copy the file to the folder you want to use as the home folder for your duke task manager."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "4. Open the terminal and type `java -jar tsuki.jar` to start the app. The GUI should appear in a few seconds."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "5. Type the command in the command box and press `Enter` to execute it. \u003cbr /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "  e.g. typing  `help` and pressing `Enter` will list all the current task stored in the database."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "* no duplicate tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "  `Oops! No duplicate tasks.`"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "* checks format error. Some examples:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "  1. unknown command : `Oops! I\u0027m sorry, but I don\u0027t know what that means :-(`"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "  2. list + unwanted arguments: `Oops! The list command should just be \"list\". `"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "  3. event without time : `Oops! The event command should be event description /at time.`"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "  4. Task number out of bounds: `Oops! The task No. you refer to is non-existent. Try another one.`"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "### 3.0 `help` - get help"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "View all the available commands."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "`help`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "### 3.1 `todo \u003ctask_content\u003e` - add an todo task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Add a task into task manager."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "`todo CS2103T homework`"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "```"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Got it! I\u0027ve added this task:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "   [T][x] CS2103T homework"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Now you have 1 task in the list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "```"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "### 3.2 `time \u003ctask_content\u003e /for \u003cduration\u003e` - add an timed task"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Add a task that needs to be finished within the speculated time limit."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "`time website design /for 2hrs`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "```"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Got it! I\u0027ve added this task:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "   [T][x] website design (for: 2hrs)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Now you have 1 task in the list."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "```"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "### 3.3 `deadline \u003ctask_content\u003e /by \u003ctime\u003e` - add an deadline"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Add an deadline task into task manager."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "`deadline shower /by tonight`"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "```"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Got it! I\u0027ve added this task:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "   [D][x] shower (by: tonight)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "```"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Alternatively, you can also enter time in DD/MM/YYYY HHMM format. \u003cbr /\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "`deadline lunch /by 8/12/2008 1800`"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "```"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Got it! I\u0027ve added this task:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "   [D][x] lunch (by: 8th of December 2008, 6pm)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "```"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "### 3.4 `event` - add an event"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Add an upcoming event."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "`event performance /at 9:30`"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "```"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Got it! I\u0027ve added this task:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "   [E][x] performance (at: 9:30)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "```"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Alternatively, you can also enter time in DD/MM/YYYY HHMM format. \u003cbr /\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "`deadline dota /at 27/09/2019 1530`"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "```"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Got it! I\u0027ve added this task:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "   [E][x] dota (at: 27th of September 2019, 3.30pm)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "```"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "### 3.5 `done \u003cTask_ID\u003e` - mark a task as finished"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Mark a task as finished."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "```"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "  [D][] shower (by: tonight)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "```"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "### 3.6 `delete \u003cTask_ID\u003e` - delete a task"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Delete a task by number."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "```"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "  [D][x] shower (by: tonight)"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "```"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "### 3.7 `list` - list out all available tasks"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Output a list of commands that are currently stored in the database."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "```"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "  ..."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "```"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Or, if there is nothing in the list yet:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "`Your task list is empty.`"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "### 3.8 `find \u003ckeyword\u003e` - find tasks by keyword"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Find tasks that matches the keywords you enter. Can use more than 1 keyword."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "`find shower`"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "```"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "  ..."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "```"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Or, if there is no tasks find:"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "`Oops, no matching task.`"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "### 3.9 `bye` - quit"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Quit the app."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "```"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "```"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "And the program will exit in 3 seconds."
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 181,
      "-": 15
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "rootProject.name \u003d \u0027dukepkg\u0027"
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 1
    }
  },
  {
    "path": "src/main/java/dukepkg/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "package dukepkg;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " * The task of type Deadline."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "public class Deadline extends dukepkg.Task{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    private final String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Instantiates a new Deadline task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param task the task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param by   the deadline by which the task needs to be finished."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public Deadline(String task, String by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Gets the deadline schedule."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @return the time"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 33
    }
  },
  {
    "path": "src/main/java/dukepkg/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "package dukepkg;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import dukepkg.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import dukepkg.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import java.lang.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " * Duke, the task bot class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    private static TaskList tasklist;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    private static Parser parser;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Instantiates a new Duke."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        Storage storage \u003d new Storage(\"data/zjtasks.txt\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        tasklist \u003d new TaskList(storage, ui);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        tasklist.loadTaskHistory();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        Ui.showGreeting();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        while(true){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            if(isExit) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                System.out.println(\"Existing programme...\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                System.exit(0);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                String command \u003d ui.readCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                Command c \u003d parser.constructCommand(command);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                c.execute(tasklist, ui);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            } catch(DukeException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                ui.showDukeError(e);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * The entry point of application."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param args the input arguments"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Gets response."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param input the input"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @return the response"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            Command c \u003d parser.constructCommand(input);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            String uiMsg \u003d c.execute(tasklist, ui);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            return uiMsg;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            return ui.showDukeError(e);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Flag to indicate whether the system should exit."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @return the boolean to indicate the system should exit."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "      return this.isExit;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 83,
      "-": 2
    }
  },
  {
    "path": "src/main/java/dukepkg/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "package dukepkg;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " * The task of type Event."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "public class Event extends dukepkg.Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    private final String at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Instantiates a new Event."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param task the task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param at   the time at which the event will happen."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public Event(String task, String at) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Gets the time at which the event will happen."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @return the time"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 33
    }
  },
  {
    "path": "src/main/java/dukepkg/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "package dukepkg;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import dukepkg.ui.MainWindow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    private final Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            stage.setTitle(\"Tsuki Task Manager\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            stage.setMinWidth(450);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            stage.setMinHeight(300);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 35
    }
  },
  {
    "path": "src/main/java/dukepkg/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "package dukepkg;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import dukepkg.commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import dukepkg.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import dukepkg.exceptions.FormatException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import dukepkg.exceptions.UnrecognizedException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " * The Parser used to make sense of the command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "@SuppressWarnings(\"ALL\")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * The Scanner used to take in inputs."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    Scanner input;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Instantiates a new Parser."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public static Task constructTimeCommand(String[] arr) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        String[] timed_task \u003d arr[1].trim().split(\"/for\", 2);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        t \u003d new Time(timed_task[0].trim(), timed_task[1].trim());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    private String getAction(String[] arr) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        return arr[0];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    private String[] parseCommand(String command) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        return command.split(\" \", 2);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    private void validateList(String[] arr) throws FormatException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        if (arr.length \u003e 1) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            throw new FormatException(\"☹ OOPS!!! The list command should just be \\\"list\\\".\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    private void validateBye(String[] arr) throws FormatException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        if (arr.length \u003e 1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            throw new FormatException(\"☹ OOPS!!! The bye command should just be \\\"bye\\\".\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    private void unrecognizedAction() throws UnrecognizedException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        throw new UnrecognizedException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    private void validateModifyExistingTaskCommandFormat(String[] arr) throws FormatException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        if (arr.length \u003d\u003d 1 || arr.length \u003e 2) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            throw new FormatException(\"☹ OOPS!!! The \" + arr[0] + \" command should be \" + arr[0] + \" + task No.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        if (!arr[1].matches(\"(?\u003c\u003d\\\\s|^)\\\\d+(?\u003d\\\\s|$)\")){"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            throw new FormatException(\"☹ OOPS!!! The \" + arr[0] + \" command should be followed by a integer.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Check whether the index used to modify existing tasks is out of range of the tasklist length."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param index      the index of the task in the list"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param listLength the list length"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @throws FormatException if the index is out of range."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public static void validateModifyExistingTaskCommandIndex(int index, int listLength) throws FormatException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        if(index \u003e\u003d listLength || index \u003c 0) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            throw new FormatException(\"☹ OOPS!!! The task No. you refer to is non-existent. Try another one.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    private void validateAddTaskCommandLength(String[] arr) throws FormatException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        if (arr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            throw new FormatException(\"☹ OOPS!!! The description of a \" + arr[0] + \" cannot be empty.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Validates deadline format."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param arr the user input line."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @throws FormatException thrown if deadline task format is wrong."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public static void validateDeadlineFormat(String[] arr) throws FormatException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        String[] ddl \u003d arr[1].trim().split(\"/by\", 2);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        if(ddl.length \u003c 2) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            throw new FormatException(\"☹ OOPS!!! Format of \" + arr[0] + \" should be deadline description /by time.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        } else if(arr[1].trim().matches(\"/by.*\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            throw new FormatException(\"☹ oops!!! you forget to add description for the \" + arr[0] + \" command.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        } else if(arr[1].trim().matches(\".*/by\")) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            throw new FormatException(\"☹ oops!!! you forget to add time for the \" + arr[0] + \" command.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Validates time format for the TimeCommand that contains duration of tasks."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param arr the arr that contains type of command and task content"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @throws FormatException the format exception"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public static void validateTimeFormat(String[] arr) throws FormatException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        String[] ddl \u003d arr[1].trim().split(\"/for\", 2);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        if(ddl.length \u003c 2) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            throw new FormatException(\"☹ OOPS!!! Format of \" + arr[0] + \" should be todo description /for duration.\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        } else if(arr[1].trim().matches(\"/for.*\")) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            throw new FormatException(\"☹ oops!!! you forget to add description for the \" + arr[0] + \" command.\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        } else if(arr[1].trim().matches(\".*/for\")) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            throw new FormatException(\"☹ oops!!! you forget to add duration for the \" + arr[0] + \" command.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Standardize time for the deadline task."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param arr the user input line."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @return the Deadline task created after time format is standardized."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    @SuppressWarnings(\"Annotator\")"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public static Task standardizeDeadlineTime(String[] arr) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        String[] ddl \u003d arr[1].trim().split(\"/by\", 2);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        String[] date_time \u003d ddl[1].trim().split(\" \");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        //noinspection Annotator"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        if(date_time.length \u003e 1 \u0026\u0026 date_time[0].matches(\"^((((([1-9])|(0[1-9])|(1\\\\d)|(2[0-8]))/(([1-9])|(0[1-9])|(1[0-2])))|((31/(((0[13578])|([13578]))|(1[02])))|((29|30)/(((0[1,3-9])|([1,3-9]))|(1[0-2])))))/((20[0-9][0-9]))|(((([1-9])|(0[1-9])|(1\\\\d)|(2[0-8]))/(([1-9])|(0[1-9])|(1[0-2])))|((31/(((0[13578])|([13578]))|(1[02])))|((29|30)/(((0[1,3-9])|([1,3-9]))|(1[0-2])))))/((19[0-9][0-9]))|(29/(02|2)/20(([02468][048])|([13579][26])))|(29/(02|2)/19(([02468][048])|([13579][26]))))$\")  \u0026\u0026 date_time[1].matches(\"^(0[0-9]|1[0-9]|2[0-3]|[0-9])[0-5][0-9]$\")) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            String time \u003d formatTime(ddl[1].trim());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            t \u003d new Deadline(ddl[0].trim(), time);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            t \u003d new Deadline(ddl[0].trim(), ddl[1].trim());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Validate event format."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param arr the user input line."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @throws FormatException if user input has wrong format for event tasks."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public static void validateEventFormat(String[] arr) throws FormatException {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        String[] evt \u003d arr[1].trim().split(\"/at\", 2);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        if(evt.length \u003c 2) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            throw new FormatException(\"☹ OOPS!!! Format of \" + arr[0] + \" should be event description /at time.\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        } else if(arr[1].trim().matches(\"/at.*\")) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            throw new FormatException(\"☹ oops!!! you forget to add description for the \" + arr[0] + \" command.\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        } else if(arr[1].trim().matches(\".*/at\")) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            throw new FormatException(\"☹ oops!!! you forget to add time for the \" + arr[0] + \" command.\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Standardize event time task."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param arr the user input line"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @return the event task created after time format is standardized"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public static Task standardizeEventTime(String[] arr) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        String[] evt \u003d arr[1].trim().split(\"/at\", 2);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        String[] date_time \u003d evt[1].trim().split(\" \");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        if(date_time.length \u003e 1 \u0026\u0026 date_time[0].matches(\"^((((([1-9])|(0[1-9])|(1\\\\d)|(2[0-8]))/(([1-9])|(0[1-9])|(1[0-2])))|((31/(((0[13578])|([13578]))|(1[02])))|((29|30)/(((0[1,3-9])|([1,3-9]))|(1[0-2])))))/((20[0-9][0-9]))|(((([1-9])|(0[1-9])|(1\\\\d)|(2[0-8]))/(([1-9])|(0[1-9])|(1[0-2])))|((31/(((0[13578])|([13578]))|(1[02])))|((29|30)/(((0[1,3-9])|([1,3-9]))|(1[0-2])))))/((19[0-9][0-9]))|(29/(02|2)/20(([02468][048])|([13579][26])))|(29/(02|2)/19(([02468][048])|([13579][26]))))$\")  \u0026\u0026 date_time[1].matches(\"^(0[0-9]|1[0-9]|2[0-3]|[0-9])[0-5][0-9]$\")) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            String time \u003d formatTime(evt[1].trim());"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            t \u003d new Event(evt[0].trim(), time);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            t \u003d new Event(evt[0].trim(), evt[1].trim());"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Check if the new task is a duplicate of one already saved in tasklist."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param tasks the tasks alreday saved in the tasklist."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param t     the new task that is to be added."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @throws FormatException when the new task is a duplicate."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public static void checkDuplicate(ArrayList\u003cTask\u003e tasks, Task t) throws FormatException {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        for(Task existing_t : tasks) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            if(existing_t.equals(t)) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                throw new FormatException(\"☹ OOPS!!! No duplicate tasks.\\n\" +"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                        \"The existing task is:\\n\" + existing_t.toString());"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Format time string from DD/MM/YYYY TTTT to word form, such as 9th of Sempterber, 2019, 6pm."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param input the previous time format"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @return the standardized time format"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    static String formatTime(String input) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        String[] date_time \u003d input.split(\" \");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        String[] date \u003d date_time[0].split(\"/\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        int day \u003d Integer.parseInt(date[0]);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        int month_int \u003d Integer.parseInt(date[1]);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        String month_enum \u003d Month.convertIntToString(month_int);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        String month_str \u003d month_enum.substring(0,1) + month_enum.substring(1).toLowerCase();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        int year \u003d Integer.parseInt(date[2]);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        int hour \u003d Integer.parseInt(date_time[1].substring(0,2));"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        int min \u003d Integer.parseInt(date_time[1].substring(2,4));"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        String output \u003d String.valueOf(day);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        output +\u003d day % 10 \u003d\u003d 1 ? \"st of \" : day % 10 \u003d\u003d 2 ? \"nd of \" : day % 10 \u003d\u003d 3 ? \"rd of \" : \"th of \";"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        output +\u003d month_str + \" \" + year + \", \";"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        output +\u003d (hour \u003e 12 ? hour - 12 : hour) + (min \u003d\u003d 0 ? \"\" : \".\" + min) + (hour \u003e\u003d 12 ? \"pm\" : \"am\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Construct user command object based on input line."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param command the user input line."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @return the command constructed"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @throws DukeException if the user input has wrong format or is not even recognizeable."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public Command constructCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        String[] arr \u003d parseCommand(command);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        String action \u003d getAction(arr);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            switch(action) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                    validateList(arr);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                    return new ListCommand();"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                    validateBye(arr);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                    return new ByeCommand();"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                    validateModifyExistingTaskCommandFormat(arr);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                    return Command.getModifyExistingTaskCommand(arr);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                case \"time\":"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                    validateAddTaskCommandLength(arr);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                    return Command.getAddTaskCommand(arr);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                    validateFindTaskCommandFormat(arr);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                    return Command.getFindTaskCommand(arr);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                case \"help\":"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                    return new HelpCommand();"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                    unrecognizedAction();"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                    return new ByeCommand(); // not reachable"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    private void validateFindTaskCommandFormat(String[] arr) throws FormatException {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        if(arr.length \u003c 2) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            throw new FormatException(\"☹ OOPS!!! Format of \" + arr[0] + \" should be done keywards.\");"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * The enum Month."
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public enum Month {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "         * January month."
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "         */"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        JANUARY(1),"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "         * February month."
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "         */"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        FEBRUARY(2),"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "         * March month."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "         */"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        MARCH(3),"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "         * April month."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "         */"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        APRIL(4),"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "         * May month."
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "         */"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        MAY(5),"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "         * June month."
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "         */"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        JUNE(6),"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "         * July month."
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "         */"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        JULY(7),"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "         * August month."
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "         */"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        AUGUST(8),"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "         * September month."
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "         */"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        SEPTEMBER(9),"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "         * October month."
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "         */"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        OCTOBER(10),"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "         * November month."
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "         */"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        NOVEMBER(11),"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "         * December month."
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "         */"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        DECEMBER(12);"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "         * The months expressed in integers."
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "         */"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        final int id;"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        Month(int id) {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            this.id \u003d id;"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "         * Convert the expression format of month from int to string."
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "         *"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "         * @param iMonth the month expressed in integers."
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "         * @return the month expressed in string."
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "         */"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        static String convertIntToString(int iMonth) {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            for(Month month : Month.values()) {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                if(month.id \u003d\u003d iMonth) {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                    return month.toString();"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                }"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        }"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 337
    }
  },
  {
    "path": "src/main/java/dukepkg/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "package dukepkg;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " * The Storage object used to save and retrieve task list data."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    private static String filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Instantiates a new Storage object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param filePath the file path used to store the task list data."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        Storage.filePath \u003d filePath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            if(!file.exists()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                File dir \u003d new File(\"data\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                dir.mkdir();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            System.out.println(\"File cannot be created!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Load task list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @return the task list from history."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @throws FileNotFoundException if the file does not exist."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public static ArrayList\u003cTask\u003e loadList() throws FileNotFoundException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            String line \u003d s.nextLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            String[] arr \u003d line.split(\" # \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            Task t \u003d null;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            if (arr.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                t \u003d new Todo(arr[2]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            } else if (arr[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                t \u003d new Deadline(arr[2], arr[3]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            } else if (arr[0].equals(\"E\")){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                t \u003d new Event(arr[2], arr[3]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            } else if (arr[0].equals(\"T\")){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                t \u003d new Time(arr[2], arr[3]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            if (Integer.parseInt(arr[1]) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                t.markDone();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            tasks.add(t);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Saves update of task list."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param tasks the updated task list"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @throws IOException if cannot write to the file."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public static void saveList(ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, false);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            String s \u003d (t instanceof Todo) ? \"T # \" : ((t instanceof Event) ? \"E # \" : \"D # \");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            s +\u003d t.isDone() ? \"1 # \" : \"0 # \";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            s +\u003d t.getTask();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            s +\u003d t instanceof Todo ? \"\" : (t instanceof Time) ? \" # \" + ((Time) t).getDuration() : ((t instanceof Event) ? \" # \" + ((Event) t).getAt() : \" # \" + ((Deadline) t).getBy());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            fw.write(s + \"\\n\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 84
    }
  },
  {
    "path": "src/main/java/dukepkg/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "package dukepkg;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " * The Task object."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    private boolean done_ \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    private final String task_;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Instantiates a new Task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param task the task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    Task(String task) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        task_ \u003d task;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Flag for whether the task is finished."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @return the boolean"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        return done_;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Gets task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @return the task"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        return task_;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Mark the task as finished."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        done_ \u003d true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    private String getSymbol() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        if(isDone()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            return \"\\u2713\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            return \"\\u2718\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        return \"[\" + getSymbol() + \"] \" + task_;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        assert(obj instanceof Task);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        Task o \u003d (Task) obj;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        return (this.task_.equals(o.task_));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 62
    }
  },
  {
    "path": "src/main/java/dukepkg/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "package dukepkg;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " * The Task list object used as a data structure to arrange all the tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * The list of Tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public static ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Instantiates a new Task list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param storage the Storage object used to save and retrieve task data."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param ui      the Ui object used to interact with the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public TaskList(Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        TaskList.storage \u003d storage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        TaskList.ui \u003d ui;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Load task history."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public void loadTaskHistory() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            tasks \u003d Storage.loadList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            Ui.showLoadingError(e);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Add a task to the list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param t the task to be added."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Delete a task from the list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param index the list index of the task to be deleted."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public void deleteTask(int index) { tasks.remove(index); }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 56
    }
  },
  {
    "path": "src/main/java/dukepkg/Time.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "package dukepkg;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "public class Time extends dukepkg.Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    private String duration \u003d \"\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Instantiates a new Time Task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param task the content used to construct the task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public Time (String task, String duration) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Gets the duration within which the task must be done."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @return the duration"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public String getDuration() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        return duration;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        return \"[T]\" + super.toString() + \" (for: \" + this.duration + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 28
    }
  },
  {
    "path": "src/main/java/dukepkg/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "package dukepkg;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " * The task of type Todo."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "public class Todo extends dukepkg.Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Instantiates a new Todo Task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param task the content used to construct the task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public Todo(String task) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 20
    }
  },
  {
    "path": "src/main/java/dukepkg/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "package dukepkg;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import dukepkg.exceptions.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import dukepkg.exceptions.UnrecognizedException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " * The Ui object used to interact with the user.."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    private final Scanner input;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Instantiates a new Ui."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Shows loading error of files."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param e the error message."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public static void showLoadingError(FileNotFoundException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        e.getMessage();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Shows task list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param tasks the tasks to be displayed."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public String showTaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            return \"Your task list is empty.\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        StringBuilder str \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        assert(tasks.size() !\u003d 0);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            str.append(counter).append(\". \").append(t.toString()).append(\"\\n\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        return str.toString();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Shows exit msg."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public String showExitMsg() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        return \"Bye. Hope to see you again soon! Exit in 3 seconds...\\n\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Shows task done prompt."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param t the task that has been marked as finished."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public String showTaskDonePrompt(Task t) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\\n\" +"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                \"    \" + t.toString() + \"\\n\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Shows task deleted prompt."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param t    the task that has been deleted."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param size the number of the remaining tasks in the list"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public String showTaskDeletedPrompt(Task t, int size) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        return \"Noted. I\u0027ve removed this task:\\n\" +"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                \"    \" + t.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                \"Now you have \" + size + (size \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\\n\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Shows added task prompt."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param tasks the tasks list"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param t     the task to be added"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public String showAddedTaskPrompt(ArrayList\u003cTask\u003e tasks, Task t) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                \"    \" + t.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                \"Now you have \" + tasks.size() + (tasks.size() \u003d\u003d 1 ? \" task \" : \" tasks \") + \"in the list. \\n\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Shows saving error. Cannot write to file."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param e the error message."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public String showSavingError(IOException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        return (\"Task not saved: \" + e.getMessage() + \"\\n\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Shows greeting to user."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public static String showGreeting() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        return \"Hello! I\u0027m Tsuki, your personal task manager.\\n\" +"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                \"What can I do for you?\\n\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Shows error of type duke exception."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param e the error message."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public String showDukeError(DukeException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        return e.getMessage() + \"\\n\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Reads command from user input."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @return the input line from user."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @throws UnrecognizedException if there is no input from the user."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public String readCommand() throws UnrecognizedException {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        if(input.hasNextLine()) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            return input.nextLine();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            throw new UnrecognizedException(\"☹ OOPS!!! no input.\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Shows tasks that matches the keywords."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param selected the selected tasks"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public String showMatchingTask(ArrayList\u003cTask\u003e selected) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        StringBuilder str \u003d new StringBuilder(\"Here are the matching tasks in your list: \\n\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        for(Task s : selected) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            counter ++;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            str.append(counter).append(\".\").append(s.toString()).append(\"\\n\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        return str.toString();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Show no matching task string."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public String showNoMatchingTask() {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        return \"Oops, no matching task.\";"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public String showHelpMsg() {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        return \"Here is the list of available commands:\\n\" +"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                \"Add task - todo \u003ctask\u003e\\n\" +"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                \"Add timed task - time \u003ctask\u003e \u003cduration\u003e\\n\" +"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                \"Add event - event \u003ctask\u003e /at \u003ctime\u003e\\n\" +"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                \"Add deadline - deadline \u003ctask\u003e /by \u003ctime\u003e \\n\" +"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                \"Mark task as done - done \u003ctask_id\u003e\\n\" +"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                \"Delete task - delete \u003ctask_id\u003e\\n\" +"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                \"List all tasks - list\\n\" +"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                \"Find task by keywords - find \u003ckeywords separated by space\u003e\\n\" +"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                \"Exit the program - bye\\n\";"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 180
    }
  },
  {
    "path": "src/main/java/dukepkg/commands/AddTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "package dukepkg.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import dukepkg.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import dukepkg.exceptions.FormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " * The type of command used to add tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "public class AddTaskCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    private final Task t;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Instantiates a new Add task command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param t the task that is going to be added by the command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    AddTaskCommand(Task t) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        this.t \u003d t;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public String execute(TaskList tasklist, Ui ui) throws FormatException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        Parser.checkDuplicate(TaskList.tasks, t);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        tasklist.addTask(t);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        String str \u003d ui.showAddedTaskPrompt(TaskList.tasks, t);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            Storage.saveList(TaskList.tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            str \u003d ui.showSavingError(e);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 36
    }
  },
  {
    "path": "src/main/java/dukepkg/commands/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "package dukepkg.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import dukepkg.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import dukepkg.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " * The command used to terminate the programme."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public String execute(TaskList tasklist, Ui ui) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        this.isExit \u003d true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        return ui.showExitMsg();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 17
    }
  },
  {
    "path": "src/main/java/dukepkg/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "package dukepkg.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import dukepkg.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import dukepkg.exceptions.FormatException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " * The range of commands to interact with the bot."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * The flag to check whether the command leads to a shutdown of system."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    boolean isExit \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Parses the input line as a command to modify existing tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param arr the input line passed in by user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @return a command used for modifying existing tasks. Either a done command or a delete command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public static Command getModifyExistingTaskCommand(String[] arr) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        int index \u003d Integer.parseInt(arr[1]) - 1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        if(arr[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            return new DoneCommand(index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            return new DeleteCommand(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Parses the input line as a command to add new tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param arr the input line passed in by user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @return a command used for adding new tasks. Either a todo command, a deadline command or a event command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @throws FormatException when the user input is incompatible with existing command formats."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public static Command getAddTaskCommand(String[] arr) throws FormatException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        Task t \u003d new Todo(arr[1]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        if (!arr[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            switch (arr[0]) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                    Parser.validateDeadlineFormat(arr);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                    t \u003d Parser.standardizeDeadlineTime(arr);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                    return new DeadlineCommand(t);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                    Parser.validateEventFormat(arr);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                    t \u003d Parser.standardizeEventTime(arr);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                    return new EventCommand(t);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                case \"time\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                    Parser.validateTimeFormat(arr);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                    t \u003d Parser.constructTimeCommand(arr);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                    return new TimeCommand(t);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            return new TodoCommand(t);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        return new TodoCommand(t);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Construct a find task command that finds tasks based on keywords."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param arr the user input line"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @return the find task command"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public static Command getFindTaskCommand(String[] arr) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        String[] keywords \u003d arr[1].trim().split(\" \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        return new FindCommand(keywords);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * An abstract method to execute the user command."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param tasklist the TaskList object for adding and deleting tasks."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param ui       the Ui object for raising prompts after executing tasks."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @throws FormatException when the user input is incompatible with existing command formats."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public abstract String execute(TaskList tasklist, Ui ui) throws FormatException;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Flag of whether the program should terminate."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @return the boolean."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 88
    }
  },
  {
    "path": "src/main/java/dukepkg/commands/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "package dukepkg.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import dukepkg.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " * The command used to add a deadline task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "class DeadlineCommand extends AddTaskCommand{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Instantiates a new Deadline command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param t the deadline task that is going to be added by the command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    DeadlineCommand(Task t) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        super(t);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 17
    }
  },
  {
    "path": "src/main/java/dukepkg/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "package dukepkg.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import dukepkg.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import dukepkg.exceptions.FormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " * The command used to delete tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Instantiates a new Delete command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param index the index of the task that is going to be deleted in the tasklist."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public String execute(TaskList tasklist, Ui ui) throws FormatException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        Parser.validateModifyExistingTaskCommandIndex(index, TaskList.tasks.size());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        tasklist.deleteTask(index);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        Task t \u003d TaskList.tasks.get(index);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        String str \u003d ui.showTaskDeletedPrompt(t, TaskList.tasks.size());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            Storage.saveList(TaskList.tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            str \u003d ui.showSavingError(e);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 37
    }
  },
  {
    "path": "src/main/java/dukepkg/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "package dukepkg.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import dukepkg.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import dukepkg.exceptions.FormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " * The command used to mark a task as finished."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Instantiates a new Done command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param index the index of the task that is going to be marked as finished in the task list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public String execute(TaskList tasklist, Ui ui) throws FormatException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        Parser.validateModifyExistingTaskCommandIndex(index, TaskList.tasks.size());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        TaskList.tasks.get(index).markDone();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        String str \u003d ui.showTaskDonePrompt(TaskList.tasks.get(index));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            Storage.saveList(TaskList.tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            str \u003d ui.showSavingError(e);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 36
    }
  },
  {
    "path": "src/main/java/dukepkg/commands/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "package dukepkg.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import dukepkg.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " * The command used to add a event into the task list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "class EventCommand extends AddTaskCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Instantiates a new Event command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param t the event task that is going to be added by the command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    EventCommand(Task t) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        super(t);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 17
    }
  },
  {
    "path": "src/main/java/dukepkg/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "package dukepkg.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import dukepkg.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import dukepkg.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import dukepkg.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " * The command used to find certain tasks using keyword matching."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * The keywords used to search the commands."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    private final String[] keywords;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Instantiates a new Find command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param keywords the keywords"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public FindCommand(String[] keywords) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        this.keywords \u003d keywords;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public String execute(TaskList tasklist, Ui ui) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        ArrayList\u003cTask\u003e copy \u003d TaskList.tasks;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        ArrayList\u003cTask\u003e selected \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        for(String s : keywords) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            for(Task t : copy) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                if(t.getTask().contains(s)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                    selected.add(t);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            for(Task t : selected) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                copy.remove(t);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        if(selected.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            return ui.showNoMatchingTask();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            return ui.showMatchingTask(selected);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 46
    }
  },
  {
    "path": "src/main/java/dukepkg/commands/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "package dukepkg.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import dukepkg.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import dukepkg.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " * The command used to get user manual."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "public class HelpCommand extends Command{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public String execute(TaskList tasklist, Ui ui) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        return ui.showHelpMsg();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 14
    }
  },
  {
    "path": "src/main/java/dukepkg/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "package dukepkg.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import dukepkg.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import dukepkg.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " * The command used to cast contents of the task list onto the screen."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public String execute(TaskList tasklist, Ui ui) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        return ui.showTaskList(TaskList.tasks);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 15
    }
  },
  {
    "path": "src/main/java/dukepkg/commands/TimeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "package dukepkg.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import dukepkg.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "class TimeCommand extends TodoCommand {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Instantiates a new Add task command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param t the task that is going to be added by the command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    TimeCommand(Task t) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        super(t);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 16
    }
  },
  {
    "path": "src/main/java/dukepkg/commands/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "package dukepkg.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import dukepkg.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " * The command used to add a todo command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "class TodoCommand extends AddTaskCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Instantiates a new Todo command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param t the todo task that is going to be added by the command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    TodoCommand(Task t) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        super(t);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 18
    }
  },
  {
    "path": "src/main/java/dukepkg/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "package dukepkg.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " * The exception of type Duke. Includes FormatException and UnrecognizedException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Instantiates a new Duke exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param err the error message of the exception."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    DukeException(String err) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        super(err);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 15
    }
  },
  {
    "path": "src/main/java/dukepkg/exceptions/FormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "package dukepkg.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " * The exception of type Format."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "public class FormatException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Instantiates a new Format exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param err the error message of the exception."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public FormatException(String err) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        super(err);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 15
    }
  },
  {
    "path": "src/main/java/dukepkg/exceptions/UnrecognizedException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "package dukepkg.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " * The exception of type Unrecognized ."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "public class UnrecognizedException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Instantiates a new Unrecognized exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param err the error message of the exception."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public UnrecognizedException(String err){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        super(err);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 15
    }
  },
  {
    "path": "src/main/java/dukepkg/launcher/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "package dukepkg.launcher;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import dukepkg.Main;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " * The type Launcher."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "class Launcher {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * The entry point of application."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param args the input arguments"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 19
    }
  },
  {
    "path": "src/main/java/dukepkg/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "package dukepkg.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " * represent the speaker\u0027s face and a label containing text from the speaker."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "class DialogBox extends HBox {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        final Circle clip \u003d new Circle(25, 25, 25);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        displayPicture.setClip(clip);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        dialog.setMinSize(Label.USE_PREF_SIZE, Label.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        this.setBackground(new Background(new BackgroundFill("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                Color.gray(0.865), new CornerRadii(10), new Insets(5, 5, 5, 5))));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        this.setSpacing(10);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Returns a DialogBox object containing user avatar and user response."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param text input from user"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param img  an image representing User\u0027s face"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @return a User DialogBox"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Returns a DialogBox object containing duke avatar and duke response."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param text response from Duke"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param img  an image representing Duke\u0027s face"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @return a Duke DialogBox"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        DialogBox db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 87
    }
  },
  {
    "path": "src/main/java/dukepkg/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "package dukepkg.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import dukepkg.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import dukepkg.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import java.util.Timer;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import java.util.TimerTask;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Initialize the scrollPane with dialogContainer."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        dialogContainer.setSpacing(5);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(Ui.showGreeting(), dukeImage));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Sets duke."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * @param d the d"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * containing Duke\u0027s reply and then appends them to the dialog container."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     * Clears the user input after processing."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        );"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        if (duke.isExit()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            closeUi();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    private void closeUi() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        Timer exit_timer \u003d new Timer();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        exit_timer.schedule(new TimerTask() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            public void run() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                Platform.exit();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        }, 3000);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "}"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 83
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "\u003c?import javafx.scene.effect.DropShadow?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"450.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\"  style\u003d\"-fx-background-color: #f8b1b1#f8b1b1; -fx-background-radius: 8; -fx-padding: 10px; -fx-border-radius: 8; -fx-border-color: #fbf3f3#fbf3f3;\" text\u003d\"Label\" textFill\u003d\"#8b0000\" textAlignment\u003d\"JUSTIFY\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                \u003cFont name\u003d\"Euphemia UCAS\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            \u003ceffect\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                \u003cDropShadow /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            \u003c/effect\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 28
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "\u003c?import javafx.geometry.Point3D?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"450.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"dukepkg.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"450.0\" AnchorPane.bottomAnchor\u003d\"1.0\" promptText\u003d\"Start a new Task!\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" defaultButton\u003d\"true\" layoutX\u003d\"450.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\"/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"450.0\" vvalue\u003d\"1.0\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" AnchorPane.bottomAnchor\u003d\"50\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" \u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                    \u003crotationAxis\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                        \u003cPoint3D /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                    \u003c/rotationAxis\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                    \u003cpadding\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                        \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                    \u003c/padding\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "                \u003c/VBox\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 32
    }
  },
  {
    "path": "src/test/java/dukepkg/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "package dukepkg;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public void constructorTest(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        Deadline d1 \u003d new Deadline(\"finish 3230\", \"tmr\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        Assertions.assertEquals(\"[D][✘] finish 3230 (by: tmr)\", d1.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        Deadline d2 \u003d new Deadline(\"read 3131\", \"8/12/2008 1800\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        //System.out.println(d2.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        Assertions.assertEquals(\"[D][✘] read 3131 (by: 8/12/2008 1800)\", d2.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 15
    }
  },
  {
    "path": "src/test/java/dukepkg/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "package dukepkg;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "import static dukepkg.Parser.formatTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    public void formatTimeTest(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        Assertions.assertEquals(\"12nd of November 2019, 2pm\", formatTime(\"12/11/2019 1400\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "        Assertions.assertEquals(\"8th of December 2008, 6pm\", formatTime(\"8/12/2008 1800\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 14
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    [T][✘] read book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Now you have 1 task in the list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    [D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    [E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    [T][✘] join sports club"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    [T][✘] borrow book"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    [T][✓] read book"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    [T][✓] join sports club"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "1. [T][✓] read book"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "2. [D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "3. [E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "4. [T][✓] join sports club"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "5. [T][✘] borrow book"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    [D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    [E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Now you have 7 tasks in the list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    [D][✘] do homework (by: no idea :-p)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Now you have 8 tasks in the list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "1. [T][✓] read book"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "2. [D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "3. [E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "4. [T][✓] join sports club"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "5. [T][✘] borrow book"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "6. [D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "7. [E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "8. [D][✘] do homework (by: no idea :-p)"
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 45
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 12
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 34
    }
  },
  {
    "path": "tutorials/javaFxTutorialPart4.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# JavaFX Tutorial 4 – FXML "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "While we have produced a fully functional prototype, there are a few major problems with our application."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "1. The process of visually enhancing the GUI is long and painful:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "   * Does the `TextField` need to be 330px or 325px wide? "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "   * How much padding is enough padding to look good?"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "   Every small change requires us to rebuild and run the application.  "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Components are heavily dependent on each other:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   Why does `Main` need to know that `DialogBox` needs a `Label`? "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   What happens if we change the `Label` to a custom `ColoredLabel` in the future?  "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    We need to minimize the amount of information each control needs to know about another."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    Otherwise, making changes in the future will break existing features."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. The code is untidy and long:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   Why is all the code in one place?"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   The `Main` class attempts to do it all. "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   Code for visual tweaks, listeners and even utility methods are all in one file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   This makes it difficult to find and make changes to existing code."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "FXML is a XML-based language that allows us to define our user interface. Properties of JavaFX objects can be defined in the FXML file. For example:  "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "```xml"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "The FXML snippet define a TextField similar to the one that we programmatically defined previous in Tutorial 2. Notice how concise FXML is compared to the plain Java version."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "Let\u0027s return to Duke and convert it to use FXML instead."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "# Rebuilding the Scene using FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "Scene Builder is a tool developed by Oracle and currently maintained by Gluon. It is a What-You-See-Is-What-You-Get GUI creation tool. [Download](https://gluonhq.com/products/scene-builder/#download) the appropriate version for your OS and install it."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "Create the following files in `src/main/resources/view`:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "**MainWindow.fxml**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "```xml"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"400.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangj1an"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"400.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "**DialogBox.fxml**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "```xml"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/fx:root\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "1. Let’s explore the provided FXML files in Scene Builder. "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    Running the tool brings up the main screen."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    Select `Open Project` \u003e `src/main/resources/view/MainWindow.fxml`. Inspect each control and its properties."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "   ![SceneBuilder opening MainWindow.fxml](assets/SceneBuilder.png)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "1. On the right accordion pane, you can modify the properties of the control that you have selected. Try changing the various settings and see what they do!"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "1. On the left accordion, you can see that we have set the controller class to `MainWindow`. "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "We will get to that later."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "   ![Controller for MainWindow](assets/MainWindowController.png)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "1. Let’s repeat the process for `DialogBox`."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "   The main difference here is that DialogBox checks `Use fx:root construct` and _does not define a controller class_. "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "   ![Settings for DialogBox](assets/DialogBoxController.png)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "## Using Controllers"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "As part of the effort to separate the code handling Duke\u0027s logic and UI, let\u0027s _refactor_ the UI-related code to its own class."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "We call these UI classes _controllers_. "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "Let\u0027s implement the `MainWindow` controller class that we specified in `MainWindow.fxml`."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "**MainWindow.java**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        );"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "The `@FXML` annotation marks a `private` or `protected` member and makes it accessible to FXML despite its modifier."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "Without the annotation, we will have to make everything `public` and expose our UI to unwanted changes."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "The `FXMLLoader` will map the a control with a `fx:id` defined in FXML to a variable with the same name in its controller."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "Notice how in `MainWindow`, we can invoke `TextField#clear()` on `userInput` and access its content just as we did in the previous example."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "Similarly, methods like private methods like `handleUserInput` can be used in FXML when annotated by `@FXML`. "
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "## Using FXML in our application"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "Let\u0027s create a new `Main` class as the bridge between the existing logic in `Duke` and the UI in `MainWindow`."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "**Main.java**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "@Override"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "Again, we can interact with the `AnchorPane` defined in the FXML as we would have if we created the `AnchorPane` ourselves."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "For our custom `DialogBox`, we did not define a controller so let\u0027s create a controller for it."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "**DialogBox.java**"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "When we create a new instance of `DialogBox`, we set both the controller and root Node to `DialogBox`. "
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "From this point onwards we can interact with `DialogBox` as we have in the previous tutorials."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "The last change that we have to make is to point our `Launcher` class in the right direction:"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "In `Launcher.java`"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "//...    "
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "//..."
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "[todo]: # (Discussion on the fx:root pattern.)"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "## Exercises"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "1. Convert `MainWindow` to use the `fx:root` construct."
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "1. Extend `MainWindow` to have a `Stage` as a root Node."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "1. Customize the appearance of the application further with CSS."
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "**Authors:**"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "* Initial Version: Jeffry Lum"
      }
    ],
    "authorContributionMap": {
      "zhangj1an": 2,
      "-": 292
    }
  }
]
