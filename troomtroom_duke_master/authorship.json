[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.8\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "run {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "checkstyle{"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    mainClassName \u003d \"Run\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 13,
      "troomtroom": 30
    }
  },
  {
    "path": "build/scripts/duke.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@rem  duke startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "set APP_HOME\u003d%DIRNAME%.."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and DUKE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\lib\\duke-0.1.0.jar;%APP_HOME%\\lib\\javafx-fxml-11.0.2-linux.jar;%APP_HOME%\\lib\\javafx-controls-11.0.2-linux.jar;%APP_HOME%\\lib\\javafx-controls-11.0.2.jar;%APP_HOME%\\lib\\javafx-graphics-11.0.2-linux.jar;%APP_HOME%\\lib\\javafx-graphics-11.0.2.jar;%APP_HOME%\\lib\\javafx-base-11.0.2-linux.jar;%APP_HOME%\\lib\\javafx-base-11.0.2.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@rem Execute duke"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %DUKE_OPTS%  -classpath \"%CLASSPATH%\" Duke %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "rem Set variable DUKE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "if  not \"\" \u003d\u003d \"%DUKE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "troomtroom": 100
    }
  },
  {
    "path": "build/scriptsShadow/duke.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@rem  duke startup script for Windows"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "set APP_HOME\u003d%DIRNAME%.."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and DUKE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "echo."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "echo."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "echo."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ":init"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\lib\\duke-0.1.3.jar"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@rem Execute duke"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %DUKE_OPTS%  -jar \"%CLASSPATH%\" %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ":end"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "rem Set variable DUKE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "if  not \"\" \u003d\u003d \"%DUKE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "troomtroom": 84
    }
  },
  {
    "path": "data/warehouse.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "E;False;doit ;23 12 2222 12 0;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "T;False;xx;"
      }
    ],
    "authorContributionMap": {
      "troomtroom": 2
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public void execute(TaskList tasks, IO io, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        tasks.storage.add(task);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public Boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "troomtroom": 16
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "abstract class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    abstract Boolean isExit();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    abstract void execute(TaskList tasks, IO io, Storage storage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public Command() { "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "troomtroom": 9
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    Time by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public Deadline(String description, boolean isDone,String type,Time by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        super(description,isDone,type);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        this.type \u003d \"Deadline\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        return (\"[\" + \"D\" + \"][\" "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                + this.getStatusIcon() "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                + \"] \" "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                + this.description "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                + \" (by: \" + this.by.showtime() + \")\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                );"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public Time getby() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "troomtroom": 23
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public void execute(TaskList tasks, IO io, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        tasks.delete(this.index);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public Boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "troomtroom": 16
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public void execute(TaskList tasks, IO io, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        tasks.markdone(this.index);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public Boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "troomtroom": 16
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    private IO io;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     * runs main loop for the project."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     * "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     * @param filePath argument file location"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        io \u003d new IO();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            tasks \u003d new TaskList(storage.loadtext());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            io.showLoadingError(\"Loading Error\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     * Parser and executes commands one at a time."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        IO.start();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                String fullCommand \u003d io.readCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                c.execute(tasks, io, storage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                io.showError(e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                IO.showLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "troomtroom": 39
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    Time at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public Event(String description, boolean isDone,String type,Time at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        super(description,isDone,type);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        this.type \u003d \"Event\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        return (\"[\" + \"E\" + \"][\" "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                + this.getStatusIcon() "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                + \"] \" "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                + this.description "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                + \" (at: \""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                + this.at.showtime() "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                + \")\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                );"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public Time getat() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "troomtroom": 25
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public ExitCommand() { "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public void execute(TaskList tasks, IO io, Storage storage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        storage.savetofile(tasks);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public Boolean isExit() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "troomtroom": 16
    }
  },
  {
    "path": "src/main/java/IO.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "public class IO {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    private static String line \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    private Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public IO() { "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     * starting graphic and intro. "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public static void start() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                    + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                    + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                    + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        output(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public static void showLine() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     * prints out String between 2 lines."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     * "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     * @param word passed to print."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public static void output(String word) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        IO.showLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        System.out.println(\"    \" + word);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        IO.showLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     * displays the current status of the TaskList."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     * "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     * @param task the tasklist to be printed."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public static void displaycurrentlist(TaskList task) { "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        if (task.storage.size() \u003e 0) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            IO.showLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            for (int i \u003d 0; i \u003c task.storage.size(); i++) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                System.out.println((i + 1) + \".\" + task.storage.get(i));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            showLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            output(\"empty list\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public void showLoadingError(String desc) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        output(\"Error couldnt load lol\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public void showError(String desc) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        output(\"Error :\" + desc);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "troomtroom": 67
    }
  },
  {
    "path": "src/main/java/IlleagalCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "public class IlleagalCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public  IlleagalCommand() { "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public void execute(TaskList tasks, IO io, Storage storage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        IO.output(\"Error, the command was not recognised.\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public Boolean isExit() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "troomtroom": 14
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public ListCommand() { "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public void execute(TaskList tasks, IO io, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        IO.displaycurrentlist(tasks);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public Boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "troomtroom": 16
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     * takes string and returns command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     * "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     * @param inputstring is the text to be converted to command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     * @return Command of required type."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public static Command parse(String inputstring) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        if (inputstring.equals(\"bye\")) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        } else if (inputstring.equals(\"list\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        } else if (inputstring.split(\" \")[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                return new DoneCommand(Integer.parseInt(inputstring.split(\" \")[1]));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                IO.output(\"☹ OOPS!!! The description of a done cannot be empty.\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                return new IlleagalCommand();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        } else if (inputstring.split(\" \")[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                return new DeleteCommand(Integer.parseInt(inputstring.split(\" \")[1]));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                IO.output(\"☹ OOPS!!! The description of a delete cannot be empty.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                return new IlleagalCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        } else if (inputstring.split(\" \")[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                return new AddCommand(new ToDO(inputstring.substring(5),false,\"ToDO\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                return new IlleagalCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        } else if (inputstring.split(\" \")[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                String byString \u003d \" \" + inputstring.split(\"/by \")[1];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                String[] seperated \u003d byString.split(\"/\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                String[] temp \u003d seperated[2].split(\" \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                int year \u003d Integer.parseInt(temp[0].trim());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                int month \u003d Integer.parseInt(seperated[1].trim());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                int day \u003d Integer.parseInt(seperated[0].trim());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                int hour \u003d Integer.parseInt(temp[1].substring(0,2).trim());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                int minute \u003d Integer.parseInt(temp[1].substring(2,4).trim());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                return new AddCommand(new Deadline(inputstring.split(\"/by\")[0].substring(9),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                                        false,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                                        \"Deadline\","
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                                        new Time(year, month, day, hour, minute)));//by"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                IO.output(\"☹ OOPS!!! The description of a deadline is wrong\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                return new IlleagalCommand();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        } else if (inputstring.split(\" \")[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                String byString \u003d \" \" + inputstring.split(\"/at \")[1];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                String[] seperated \u003d byString.split(\"/\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                String[] temp \u003d seperated[2].split(\" \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                int year \u003d Integer.parseInt(temp[0].trim());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                int month \u003d Integer.parseInt(seperated[1].trim());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                int day \u003d Integer.parseInt(seperated[0].trim());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                int hour \u003d Integer.parseInt(temp[1].substring(0,2).trim());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                int minute \u003d Integer.parseInt(temp[1].substring(2,4).trim());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                return new AddCommand(new Event(inputstring.split(\"/at\")[0].substring(6),"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                                      false,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                                      \"Event\","
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                                      new Time(year, month, day, hour, minute)));// /by 2/12/2019 1800"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                IO.output(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                return new IlleagalCommand();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            return new IlleagalCommand();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        }    "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "troomtroom": 78
    }
  },
  {
    "path": "src/main/java/Run.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "public class Run {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        new Duke(\"/mnt/c/users/kartike/desktop/nus/semester3/cs2103/duke/data/warehouse.txt\").run();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "troomtroom": 5
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    String file;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public Storage(String file) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        this.file \u003d file;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     * Loads from textfile into TaskList."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     * "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     * @return Loaded LinkedList of Tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     * @throws FileNotFoundException if the passed file is absent"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public LinkedList\u003cTask\u003e loadtext() throws FileNotFoundException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        String filetext \u003d this.file;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        File inpfile \u003d new File(filetext);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        Scanner filereader \u003d new Scanner(inpfile);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        LinkedList\u003cTask\u003e storage \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            while (filereader.hasNextLine()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                String nextline \u003d filereader.nextLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                //System.out.println(\" lklklklkl  \"+nextline);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                String[] array \u003d nextline.split(\";\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                //System.out.println(array[0]+array[1]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                String type \u003d array[0];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                String description \u003d array[2];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                Boolean doneval \u003d false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                if (array[1].equals(\"False\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                    doneval \u003d false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                } else if (array[1].equals(\"True\")) { "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                    doneval \u003d true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                    IO.output(\"check error 5  \" + array[1]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                //output(Arrays.toString(array));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                    storage.add(new ToDO(description,doneval,\"TODO\"));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                } else if (type.equals(\"E\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                    storage.add(new Event(description, doneval, \"Event\",strToTime(array[3])));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                } else if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                    storage.add(new Deadline(description,doneval,\"Deadline\",strToTime(array[3])));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        } catch (Exception a) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            IO.output(\"error 3\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            a.printStackTrace();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        return storage;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     * helps to convert string to time object."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     * "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     * @param input string to be converted"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     * @return Time value"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public static Time strToTime(String input) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        // 2021 4 1 19 23"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        String[] div \u003d input.split(\" \");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        int day \u003d Integer.parseInt(div[0]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        int month \u003d Integer.parseInt(div[1]);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        int year \u003d Integer.parseInt(div[2]);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        int hour \u003d Integer.parseInt(div[3]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        int minute \u003d Integer.parseInt(div[4]);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        return new Time(day,month,year, hour,minute);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     * saves TaskList to file."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     * "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     * @param tasks list passed to be saved to file"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public void savetofile(TaskList tasks) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        String entrystring \u003d \"\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.storage.size(); i++) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            Task ob \u003d tasks.storage.get(i);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            if (ob.getType().equals(\"ToDO\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                entrystring +\u003d ob.getLetterType() + \";\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                               + ob.getisDone() + \";\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                               + ob.getDescription() + \";\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                               + \"\\n\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            } else if (ob.getType().equals(\"Deadline\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                entrystring +\u003d ob.getLetterType() + \";\""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                               + ob.getisDone() + \";\""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                               + ob.getDescription() + \";\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                               + ((Deadline)ob).getby() + \";\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                               + \"\\n\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            } else if (ob.getType().equals(\"Event\")) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                entrystring +\u003d ob.getLetterType() + \";\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                               + ob.getisDone() + \";\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                               + ob.getDescription() + \";\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                               + ((Event)ob).getat() + \";\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                               + \"\\n\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "                IO.output(\"check error 3\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            FileWriter fw \u003d new FileWriter(\"/mnt/c/users/kartike/desktop/nus/semester3/cs2103/duke/data/warehouse.txt\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            fw.write(entrystring);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "troomtroom": 121
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    String type;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public Task(String description, boolean isDone, String type) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public String getisDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        return this.isDone ? \"True\" : \"False\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public String getLetterType() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        //System.out.println(this.getClass());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        if (this.type.equals(\"ToDO\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            return \"T\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        } else if (this.type.equals(\"Event\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            return \"D\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            return \"E\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        return (\"[\" + this.type.charAt(0) + \"][\" + this.getStatusIcon() + \"] \" + this.description);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public boolean changedone() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        this.isDone \u003d ! (isDone);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        //isDone ? this.isDone \u003d false : this.isDone \u003d true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "troomtroom": 49
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    LinkedList\u003cTask\u003e storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public TaskList(LinkedList\u003cTask\u003e storage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     * deletes from passed object at index."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     * "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     * @param index point of deletion"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        if (storage.size() \u003e 0) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            IO.showLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            System.out.println(\"    Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            System.out.println(this.storage.get(index - 1));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            this.storage.remove(index - 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            System.out.println(\"Now you have \" + storage.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            IO.showLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            IO.output(\"storage is empty, nothing to delete\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     * marks index element done from passed object."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     * "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     * @param index index of object to be marked done"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public void markdone(int index) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        if (storage.size() \u003e 0) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            IO.showLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            System.out.println(\"     Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            Task temp \u003d this.storage.get(index - 1);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            temp.changedone();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            this.storage.set(index - 1,temp);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            System.out.println(this.storage.get(index - 1));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            IO.showLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "            IO.output(\"storage is empty, nothing to markdone\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "troomtroom": 52
    }
  },
  {
    "path": "src/main/java/Time.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "public class Time {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    int year;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    int month;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    int day;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    int hour;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    int minute;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    Time(int year,int month,int day,int hour,int minute) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        this.month \u003d month;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        this.day \u003d day;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        this.hour \u003d hour;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        this.minute \u003d minute;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    Time() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     * returns a printing format of time object with slashes."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     * "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     * @return string with time in right format for display."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public String showtime() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        return (this.day + \"/\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "               + this.month + \"/\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "               + this.year + \" \""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "               + this.hour + \":\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "               + this.minute);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        return (this.day + \" \" + this.month + \" \" + this.year + \" \" + this.hour + \" \" + this.minute);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "troomtroom": 37
    }
  },
  {
    "path": "src/main/java/ToDO.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "class ToDO extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public ToDO(String description, boolean isDone,String type) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        super(description,isDone,type);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        this.type \u003d \"ToDO\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        //System.out.println(this.description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "        return (\"[\" + \"T\" + \"][\" + this.getStatusIcon() + \"] \" + this.description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "troomtroom"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "troomtroom"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "troomtroom": 12
    }
  }
]
