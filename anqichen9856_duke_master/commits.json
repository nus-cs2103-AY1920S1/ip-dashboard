{
  "authorDailyContributionsMap": {
    "anqichen9856": [
      {
        "insertions": 302,
        "deletions": 38,
        "date": "2019-08-22",
        "commitResults": [
          {
            "hash": "04024b31a64f9993188c3ed4cbbcbde7cf41505f",
            "messageTitle": "Add greet, echo and exit functions. Indentation and horizontal lines omitted.",
            "messageBody": "",
            "insertions": 9,
            "deletions": 0
          },
          {
            "hash": "cdf2b0b3a47eadb2bb9a1cbf26fa45dbe4b7fcf5",
            "messageTitle": "Add the ability to store text entered by the user and display them in order when the user types \"list\".",
            "messageBody": "",
            "insertions": 21,
            "deletions": 5
          },
          {
            "hash": "c5d98b7281cc13b7e6b14e703148ba634c45a0cc",
            "messageTitle": "Add Task class to facilitate marking tasks as done.",
            "messageBody": "",
            "insertions": 23,
            "deletions": 0
          },
          {
            "hash": "0870ff456fd1ca4d03daf6e45270908b733096a6",
            "messageTitle": "Add the ability to mark tasks as done.",
            "messageBody": "",
            "insertions": 29,
            "deletions": 16
          },
          {
            "hash": "e27a4357553ea356ed68b5ccd25c13baae3edef1",
            "messageTitle": "Use Inheritance to support multiple task types (i.e. implement classes Todo, Deadline and Event classes to inherit from a Task class).",
            "messageBody": "",
            "insertions": 37,
            "deletions": 0
          },
          {
            "hash": "2b651e5362fce02a20056b2b1741eb3c5ae4b54f",
            "messageTitle": "Add support for tracking three types of tasks: 1. ToDos: tasks without any date/time attached to it e.g., visit new theme park 2. Deadlines: tasks that need to be done before a specific date/time e.g., submit report by 11/10/2019 5pm 3. Events: tasks that start at a specific time and ends at a specific time e.g., team project meeting on 2/10/2019 2-4pm",
            "messageBody": "",
            "insertions": 35,
            "deletions": 2
          },
          {
            "hash": "671c3ddf93996bb30cfda8c9d586eb51152f0594",
            "messageTitle": "Use the input/output redirection technique to semi-automate testing of Duke.",
            "messageBody": "",
            "insertions": 98,
            "deletions": 1
          },
          {
            "hash": "6ea875202857cdb1f7559c56effe2985c7a0c130",
            "messageTitle": "Define a class DukeException to represent exceptions specific to Duke.",
            "messageBody": "",
            "insertions": 6,
            "deletions": 0
          },
          {
            "hash": "ecb126788284b230c37fe480e05b38d47121556e",
            "messageTitle": "Use DukeException to handle errors such as incorrect inputs entered by the user. Errors handled include: incorrect commands (other than \"todo\" \"event\" \"deadline\" \"done\" \"list\" \"bye\"); missing description for ToDos, Deadlines and Events; missing time for Deadlines and Events; missing task number for Done.",
            "messageBody": "",
            "insertions": 34,
            "deletions": 11
          },
          {
            "hash": "4f1e0d583433d42bac5f85ca8b479f2fcb2a01a6",
            "messageTitle": "Add support for deleting tasks from the list. Update error handling to include missing task number for \"delete\".",
            "messageBody": "",
            "insertions": 10,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 81,
        "deletions": 1,
        "date": "2019-08-27",
        "commitResults": [
          {
            "hash": "24b570ba561da9bfeb1792397a9327078a00122c",
            "messageTitle": "Add the function to save the tasks in the hard disk automatically whenever the task list changes. Every time when Duke starts up, load the data from the hard disk.",
            "messageBody": "",
            "insertions": 81,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 1207,
        "deletions": 282,
        "date": "2019-08-28",
        "commitResults": [
          {
            "hash": "03c7756539a43c922c065ef20ea7ac7654290c26",
            "messageTitle": "Add the ability to parse dates and times of the format \"dd/MM/yyyy HHmm\" (e.g. 02/12/2019 1800) as a LocalDateTime object instead of a simple String.",
            "messageBody": "",
            "insertions": 20,
            "deletions": 0
          },
          {
            "hash": "ab802d01f096de03baf1bc9bbad2bccff62253da",
            "messageTitle": "Make the code more OOP by extracting out closely related code as classes. Extracted the following classes: Ui: deals with interactions with the user Storage: deals with loading tasks from the file and saving tasks in the file Parser: deals with making sense of the user command TaskList: contains the task list e.g., it has operations to add/delete tasks in the list *Command classes (i.e., AddCommand, DeleteCommand, ExitCommand etc.) that inherits from an abstract Command class",
            "messageBody": "",
            "insertions": 372,
            "deletions": 156
          },
          {
            "hash": "29825168c627a5bb886472fafecaf2f2bca089fd",
            "messageTitle": "Organize the classes into suitable java packages. e.g., duke.task, duke.command, duke.core",
            "messageBody": "",
            "insertions": 100,
            "deletions": 14
          },
          {
            "hash": "1c8248ca276cf438ddd46e5b4daec16f361b240f",
            "messageTitle": "Add JUnit tests to test the behavior of the code.",
            "messageBody": "",
            "insertions": 43,
            "deletions": 0
          },
          {
            "hash": "f3b51650579a24d2bb64467f5411736bb1b5aae9",
            "messageTitle": "Add JavaDoc comments to the code.",
            "messageBody": "",
            "insertions": 456,
            "deletions": 5
          },
          {
            "hash": "e57c0d9977c3766e643754b2fd45ebd971d44b4a",
            "messageTitle": "Tweak the code to comply with a chosen coding standard.",
            "messageBody": "",
            "insertions": 63,
            "deletions": 61
          },
          {
            "hash": "ce15bf88b697461d8e5e311bc745017b53fd9139",
            "messageTitle": "Add the ability to find a task by searching for a keyword.",
            "messageBody": "",
            "insertions": 43,
            "deletions": 2
          },
          {
            "hash": "a7ed26a9ab901b94feccd5dcbdffc4b9cac38471",
            "messageTitle": "Add Javadoc comment to Level-9 classes and methods. Add an empty line between description and parameter section for every Javadoc comment.",
            "messageBody": "",
            "insertions": 110,
            "deletions": 44
          }
        ]
      },
      {
        "insertions": 230,
        "deletions": 13,
        "date": "2019-09-04",
        "commitResults": [
          {
            "hash": "d3b46620fee170e01ce2741b21021a94e6ab1ed4",
            "messageTitle": "Automate project builds using Gradle",
            "messageBody": "Set up gradle to build and run Duke. Set up gradle to run unit tests. Add Shadow plugin plugin that packages an application into an executable jar file. Automate the management of dependencies to third-party libraries such as JUnit.\n",
            "insertions": 21,
            "deletions": 3
          },
          {
            "hash": "dc916e699710a25d20652456681af009cd393cb5",
            "messageTitle": "Use checkStyle to detect coding style violations.",
            "messageBody": "Add checkstyle plugin to gradle to check if the code complies with a set of style rules specified in the configuration files.\n",
            "insertions": 16,
            "deletions": 9
          },
          {
            "hash": "61b13f23d4987b939c8a9df9f25a23bb4a864aab",
            "messageTitle": "Add a GUI to Duke",
            "messageBody": "Use JavaFX to create a GUI for Duke (without using FXML).\n",
            "insertions": 193,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 125,
        "deletions": 20,
        "date": "2019-09-05",
        "commitResults": [
          {
            "hash": "1b98c233fe42e7f939b9ae75cdf672d574a54f60",
            "messageTitle": "Add specific response messages in GUI",
            "messageBody": "Modify the stub getResponse(String input) method in Duke so that it returns detailed response instead of \"Duke heard...\".\n",
            "insertions": 125,
            "deletions": 20
          }
        ]
      },
      {
        "insertions": 222,
        "deletions": 151,
        "date": "2019-09-09",
        "commitResults": [
          {
            "hash": "18ab30881d4e9b99643e18d815c8b099b1b81f05",
            "messageTitle": "Use FXML and improve Duke GUI",
            "messageBody": "Use FXML to separate logic and remove dependency between GUI classes. Let Duke show welcome message and print loadSuccess/loadError messages upon activation. Further customize User and Duke dialog boxes (different colors, paddings).\n",
            "insertions": 222,
            "deletions": 151
          }
        ]
      },
      {
        "insertions": 111,
        "deletions": 54,
        "date": "2019-09-10",
        "commitResults": [
          {
            "hash": "e68e0b433ada1f9ccd5fcf99667b36e6b039c84f",
            "messageTitle": "Add Assertions (#4)",
            "messageBody": "Use assert feature (not JUnit assertions) to document important assumptions that should hold at various points in the code.",
            "insertions": 24,
            "deletions": 2
          },
          {
            "hash": "34baa3401aaf060efb17a8738324fed657e23c2b",
            "messageTitle": "Improve code quality",
            "messageBody": "Refactor the code to improve the code quality where necessary. Modify complicated boolean expressions in Parser class.\n",
            "insertions": 22,
            "deletions": 8
          },
          {
            "hash": "306f0b0b9e6b47f9824cbfd342e582863c6aa534",
            "messageTitle": "Fix regressions caused by refactoring",
            "messageBody": "Fix logic bugs in checkIllegalInstruction method in Parser class. Handle one more exception (task index given in \"done\" or \"delete\" commands is out of bounds) from user input.\n",
            "insertions": 29,
            "deletions": 11
          },
          {
            "hash": "5f5c02400f525504fe3f7cd45ac6464124de1a38",
            "messageTitle": "Use Lambdas in Ui class",
            "messageBody": "Use the Lambdas feature of Java for printing all tasks from a TaskList in Ui class.\n",
            "insertions": 5,
            "deletions": 10
          },
          {
            "hash": "8231e35b42df8a0b3bf834ed9aa5fad0ab3d3a00",
            "messageTitle": "Use Streams in Parser and Ui classes",
            "messageBody": "Use the Streams feature of Java for displaying search results in Ui class, as well as subString and findIdx methods in Parser class.\n",
            "insertions": 16,
            "deletions": 23
          },
          {
            "hash": "f16d6dd19922ab16953a847316d93afddd999f2f",
            "messageTitle": "Teach Duke GUI to automatically quit when user types \"bye\"",
            "messageBody": "Add delayed stage.close() when GUI detects a \"bye\" input.\n",
            "insertions": 15,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 210,
        "deletions": 73,
        "date": "2019-09-11",
        "commitResults": [
          {
            "hash": "21943c4891c67fedd4a7ef31e97b8ddfdc3db0e8",
            "messageTitle": "Teach Duke to reformat user input date and time",
            "messageBody": "Remove the unused dateTime field in Deadline and Event classes. Add the ability to parse user input date and time to a more readable string representation.\n",
            "insertions": 61,
            "deletions": 45
          },
          {
            "hash": "3093e6dfb95705fe9b968f27f1df605f903a4241",
            "messageTitle": "Add the ability to update existing tasks",
            "messageBody": "Support a way to easily edit details of an existing task without having to delete it first, e.g. change the time of an event without changing anything else. Improve organisation of import statements in various classes.\n",
            "insertions": 149,
            "deletions": 28
          }
        ]
      },
      {
        "insertions": 87,
        "deletions": 142,
        "date": "2019-09-12",
        "commitResults": [
          {
            "hash": "a1cc665590b09c400c6b3bdb8e98d0314aacfcbd",
            "messageTitle": "Improve code based on peer review",
            "messageBody": "Use DateTimeFormatter to format the output string of date and time instead of manually coding the string. Change the \u0027by\u0027 and \u0027at\u0027 fields in Deadline and Event classes to more descriptive \u0027dueTime\u0027 and \u0027occurTime\u0027 fields.\n",
            "insertions": 27,
            "deletions": 69
          },
          {
            "hash": "e884a71cb44883815796ae8cfb9e7a7c9cacfb2b",
            "messageTitle": "Improve code quality (more understandable naming \u0026 shorter methods)",
            "messageBody": "Update class, method and parameter names to follow coding standard more closely:\n(1) ToDo (class) -\u003e NormalTask\n(2) parseDateTime (method) -\u003e formatDateTime (method)\n(3) String s (parameter) -\u003e String instruction / String errorMessage\n\nMake Parser class more concise.\n",
            "insertions": 60,
            "deletions": 73
          }
        ]
      },
      {
        "insertions": 6,
        "deletions": 4,
        "date": "2019-09-14",
        "commitResults": [
          {
            "hash": "728c744b7e62b68dca9629af5401a4a96bb23cbd",
            "messageTitle": "Further shorten Parser method",
            "messageBody": "",
            "insertions": 6,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 314,
        "deletions": 9,
        "date": "2019-09-15",
        "commitResults": [
          {
            "hash": "64de5e01adacb20f61e63751cc3a3dc46ff70394",
            "messageTitle": "Write Javadoc comments for recently added methods and classes",
            "messageBody": "",
            "insertions": 314,
            "deletions": 9
          }
        ]
      },
      {
        "insertions": 272,
        "deletions": 94,
        "date": "2019-09-16",
        "commitResults": [
          {
            "hash": "f2431d18ce8a5088c2a1fe226da8f23bdfbbec62",
            "messageTitle": "Fix Parser bug caused by case fallthrough",
            "messageBody": "",
            "insertions": 10,
            "deletions": 13
          },
          {
            "hash": "300868a563e0454ab8600ef7fe526ddbb1e5b118",
            "messageTitle": "Add a user guide",
            "messageBody": "Update docs\\README.md to introduce Duke features and usage with examples.\n",
            "insertions": 170,
            "deletions": 9
          },
          {
            "hash": "e4fc3298c5bc495b0bc063e92bd8e68e83c01082",
            "messageTitle": "Improve user guide formatting",
            "messageBody": "",
            "insertions": 39,
            "deletions": 39
          },
          {
            "hash": "01a07cf222f480475d4762bdadf8bcf7c16993aa",
            "messageTitle": "Improve user guide formatting",
            "messageBody": "",
            "insertions": 47,
            "deletions": 30
          },
          {
            "hash": "0e705889b3d790ec2798ada2dd1003f776ef3130",
            "messageTitle": "Improve user guide formatting",
            "messageBody": "",
            "insertions": 5,
            "deletions": 2
          },
          {
            "hash": "adef7b2d30c681c9dcb1951d49885c033569579e",
            "messageTitle": "Improve user guide formatting",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ]
  },
  "authorFinalContributionMap": {
    "anqichen9856": 2296
  },
  "authorFileTypeContributionMap": {
    "anqichen9856": {
      "java": 1939,
      "md": 180,
      "fxml": 49,
      "sh": 36,
      "bat": 0,
      "gradle": 28,
      "txt": 64
    }
  },
  "authorContributionVariance": {
    "anqichen9856": 76397.375
  },
  "authorDisplayNameMap": {
    "anqichen9856": "CS2103T-T11-1 CHEN  ...  ANQI"
  }
}
