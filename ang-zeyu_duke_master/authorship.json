[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 15,
      "ang-zeyu": 22
    }
  },
  {
    "path": "data/taskData.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "{ type: todo, done: true, description: ohnoz. }"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "{ type: todo, done: false, description: ohnooooo }"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "{ type: deadline, done: false, description: 2103ip, time: 01/12/1997 0000 }"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "{ type: deadline, done: true, description: anotherip, time: 29/01/1997 2359 }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "{ type: deadline, done: false, description: yet another ip, time: 1/12/1997 2359 }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "{ type: event, done: false, description: yet another event, time: 09/2/2010 1200 to 09/2/2010 1400 }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "{ type: event, done: true, description: yet another event, time: 09/2/2010 1200 to 1400 }"
      }
    ],
    "authorContributionMap": {
      "ang-zeyu": 7
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.command.CommandParser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.command.Commands;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    private static final String RECURSIVE_PARENT_DIR_NAME \u003d \"data\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        Duke duke \u003d new Duke(RECURSIVE_PARENT_DIR_NAME);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    private Duke(String dirName) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        ui \u003d new Ui(new Scanner(System.in));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        storage \u003d new Storage(dirName, ui);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        storage.loadTasksToList(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        ui.printGreetingMsg();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                String input \u003d ui.readLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                ui.printLineDivider();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                Command command \u003d CommandParser.parseCommand(input);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                command.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                if (command.commandType \u003d\u003d Commands.bye) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            } catch (DukeExceptions ex) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                ui.displayDukeException(ex);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                ui.printLineDivider();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                ui.printEmptyLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 1,
      "ang-zeyu": 52
    }
  },
  {
    "path": "src/main/java/duke/DukeExceptions.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "public class DukeExceptions extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    private String displayMsg;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    private DukeExceptions(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    protected DukeExceptions(String message, String displayMsg) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        this(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        this.displayMsg \u003d displayMsg;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public String getDisplayMsg() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        return this.displayMsg;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ang-zeyu": 18
    }
  },
  {
    "path": "src/main/java/duke/DukeUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": " * A class providing several common utility functions."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "public abstract class DukeUtil {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "     * Concatenates an array of strings with a specified delimiter."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "     * @param strings Array of strings to concatenate."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "     * @param delimiter Delimiter to use to join strings together."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "     * @return Concatenated String."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public static String concatStrings(String[] strings, String delimiter) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        if (strings.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        for (int i \u003d 0; i \u003c strings.length - 1; i++) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            output.append(strings[i]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            output.append(delimiter);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        output.append(strings[strings.length - 1]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "     * Returns in the first index of a pattern in an array of strings."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "     * Returns -1 if it is not found."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "     * @param strings Array of strings to search."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "     * @param pattern Pattern string to search for."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "     * @return Index of pattern in array, or -1 if not found."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public static int getIndexOfPattern(String[] strings, String pattern) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        for (int i \u003d 0; i \u003c strings.length; i++) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            if (strings[i].equals(pattern)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                return i;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ang-zeyu": 47
    }
  },
  {
    "path": "src/main/java/duke/command/AddTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "abstract class AddTaskCommand extends WritableCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    Task taskToAdd;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    AddTaskCommand(String[] commandArgs) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        super(commandArgs);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    void run(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        tasks.addTask(taskToAdd);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        ui.printMsgLine(\" Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        ui.printMsgLine(String.format(\"   %s\", taskToAdd.getStatusText()));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        ui.printMsgLine(String.format(\" Now you have %d tasks in the list.\", tasks.getSize()));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ang-zeyu": 23
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "class ByeCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public ByeCommand(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        super(args);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        commandType \u003d Commands.bye;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public void run(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        ui.printMsgLine(\" Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    void validate(TaskList tasks, Ui ui, Storage storage) throws DukeInvalidArgumentException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        if (commandArgs.length \u003e\u003d 1) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            throw new DukeInvalidArgumentException("
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    \"Encountered extraneous arguments after bye command\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    \" \\u2639 OOPS!!! There shouldn\u0027t be anything following \u0027bye\u0027,\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                            + \" are you sure you wanted to exit?\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ang-zeyu": 27
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.storage.DukeFileWriteException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": " * Abstraction of an executable command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": " * Validates the inputs provided then runs it."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "abstract public class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public Commands commandType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    String[] commandArgs;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    Command(String[] commandArgs) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        this.commandArgs \u003d commandArgs;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    abstract void run(TaskList tasks, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    abstract void validate(TaskList tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            throws DukeInvalidArgumentException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            throws DukeInvalidArgumentException, DukeFileWriteException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        validate(tasks, ui, storage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        run(tasks, ui, storage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ang-zeyu": 29
    }
  },
  {
    "path": "src/main/java/duke/command/CommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": " * Abstraction of a command parser responsible for resolving user input."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "public abstract class CommandParser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public static Command parseCommand(String commandString)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            throws DukeInvalidCommandException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        String[] inputs \u003d commandString.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        Commands commandType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        Command command \u003d null;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            commandType \u003d Commands.valueOf(inputs[0]);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            inputs \u003d Arrays.copyOfRange(inputs, 1, inputs.length);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        } catch (IllegalArgumentException | IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            throw new DukeInvalidCommandException("
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    \" \\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            case bye:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                command \u003d new ByeCommand(inputs);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            case list:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                command \u003d new ListCommand(inputs);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            case done:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                command \u003d new DoneCommand(inputs);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            case delete:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                command \u003d new DeleteCommand(inputs);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            case todo:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                command \u003d new TodoCommand(inputs);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            case deadline:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                command \u003d new DeadlineCommand(inputs);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            case event:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                command \u003d new EventCommand(inputs);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                //covered in try catch above with enums"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ang-zeyu": 53
    }
  },
  {
    "path": "src/main/java/duke/command/Commands.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "public enum Commands {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    list,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    bye,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    done,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    delete,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    todo,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    deadline,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    event"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ang-zeyu": 11
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.DukeUtil;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.task.DeadlineTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.task.TaskUtil;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "class DeadlineCommand extends AddTaskCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public DeadlineCommand(String[] commandArgs) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        super(commandArgs);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        commandType \u003d Commands.deadline;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    void validate(TaskList tasks, Ui ui, Storage storage) throws DukeInvalidArgumentException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        int byIndex \u003d DukeUtil.getIndexOfPattern(commandArgs, \"/by\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        if (byIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            throw new DukeInvalidArgumentException("
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    \"Missing /by delimiter for deadline command\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    \" \\u2639 OOPS!!! I dont know what is your deadline!\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                            + \" You should add a deadline with\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                            + \" \\\u0027deadline \u003cdescription\u003e /by \u003ctiming\u003e\\\u0027\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        String description \u003d DukeUtil.concatStrings("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                Arrays.copyOfRange(commandArgs, 0, byIndex),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                \" \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        String timing \u003d DukeUtil.concatStrings("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                Arrays.copyOfRange(commandArgs, byIndex + 1, commandArgs.length),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                \" \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        TaskUtil.validateTaskDescription(description);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        taskToAdd \u003d new DeadlineTask(description, timing);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ang-zeyu": 40
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "class DeleteCommand extends WritableCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    private int taskIndex;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public DeleteCommand(String[] commandArgs) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        super(commandArgs);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        commandType \u003d Commands.delete;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    void run(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        Task taskDeleted \u003d tasks.deleteTaskByIndex(taskIndex);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        ui.printMsgLine(\" Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        ui.printMsgLine(String.format(\"   %s\", taskDeleted.getStatusText()));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        ui.printMsgLine(String.format(\" Now you have %d tasks in the list.\", tasks.getSize()));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    void validate(TaskList tasks, Ui ui, Storage storage) throws DukeInvalidArgumentException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        if (commandArgs.length \u003e 2) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            throw new DukeInvalidArgumentException("
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    \"Encountered extraneous arguments after delete command\","
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    \" \\u2639 OOPS!!! There shouldn\u0027t be so many arguments!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            taskIndex \u003d Integer.parseInt(commandArgs[0]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            tasks.getTaskByIndex(--taskIndex);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            throw new DukeInvalidArgumentException("
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    \"Could not parse argument supplied into a list index\","
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    \" \\u2639 OOPS!!! The task number you gave me wasn\u0027t a valid number,\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                            + \" or you didn\u0027t give me one at all!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        } catch (IndexOutOfBoundsException | NullPointerException ex) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            throw new DukeInvalidArgumentException("
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    \"User number supplied was out of list bounds\","
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    \" \\u2639 OOPS!!! The task number you gave me wasn\u0027t within your current list!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ang-zeyu": 47
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "class DoneCommand extends WritableCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public DoneCommand(String[] commandArgs) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        super(commandArgs);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        commandType \u003d Commands.done;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    void run(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        task.setDone(true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        ui.printMsgLine(\" Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        ui.printMsgLine(String.format(\"   %s\", task.getStatusText()));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    void validate(TaskList tasks, Ui ui, Storage storage) throws DukeInvalidArgumentException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        if (commandArgs.length \u003e 1) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            throw new DukeInvalidArgumentException("
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    \"Encountered extraneous arguments after done command\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    \" \\u2639 OOPS!!! There shouldn\u0027t be so many arguments!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(commandArgs[0]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            task \u003d tasks.getTaskByIndex(--taskIndex);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            if (task.isDone()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                throw new DukeInvalidArgumentException("
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                        \"User specified task is already marked as done\","
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                        \" \\u2639 OOPS!!! The task you gave me was already marked as done!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            throw new DukeInvalidArgumentException("
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    \"Could not parse argument supplied into a list index\","
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    \" \\u2639 OOPS!!! The task number you gave me wasn\u0027t a valid number,\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                            + \" or you didn\u0027t give me one at all!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        } catch (IndexOutOfBoundsException | NullPointerException ex) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            throw new DukeInvalidArgumentException("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    \"User number supplied was out of list bounds\","
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    \" \\u2639 OOPS!!! The task number you gave me wasn\u0027t within your\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                            + \" current list!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ang-zeyu": 52
    }
  },
  {
    "path": "src/main/java/duke/command/DukeInvalidArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.DukeExceptions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "public class DukeInvalidArgumentException extends DukeExceptions {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public DukeInvalidArgumentException(String displayMsg) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        super(\"Invalid user arguments to command inputted\", displayMsg);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public DukeInvalidArgumentException(String errorMsg, String displayMsg) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        super(errorMsg, displayMsg);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ang-zeyu": 13
    }
  },
  {
    "path": "src/main/java/duke/command/DukeInvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.DukeExceptions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "class DukeInvalidCommandException extends DukeExceptions {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    DukeInvalidCommandException(String displayMsg) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        super(\"Invalid user command inputted\", displayMsg);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ang-zeyu": 9
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.DukeUtil;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.task.EventTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.task.TaskUtil;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "class EventCommand extends AddTaskCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public EventCommand(String[] commandArgs) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        super(commandArgs);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        commandType \u003d Commands.event;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    void validate(TaskList tasks, Ui ui, Storage storage) throws DukeInvalidArgumentException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        int atIndex \u003d DukeUtil.getIndexOfPattern(commandArgs, \"/at\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        if (atIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            throw new DukeInvalidArgumentException("
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    \"Missing /at delimiter for event command\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    \" \\u2639 OOPS!!! I dont know what is your event timing!\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                            + \" You should add a time with\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                            + \" \\\u0027event \u003cdescription\u003e /at \u003ctime\u003e\\\u0027\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        String description \u003d DukeUtil.concatStrings("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                Arrays.copyOfRange(commandArgs, 0, atIndex),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                \" \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        String timing \u003d DukeUtil.concatStrings("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                Arrays.copyOfRange(commandArgs, atIndex + 1, commandArgs.length),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                \" \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        TaskUtil.validateTaskDescription(description);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        taskToAdd \u003d new EventTask(description, timing);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ang-zeyu": 40
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public ListCommand(String[] commandArgs) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        super(commandArgs);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        commandType \u003d Commands.list;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public void run(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        ui.printMsgLine(\" Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        int taskIndex \u003d 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        for (Task task : tasks.getAllTasks()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            ui.printMsgLine(String.format(\" %d.%s\", taskIndex, task.getStatusText()));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            taskIndex++;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    void validate(TaskList tasks, Ui ui, Storage storage) throws DukeInvalidArgumentException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        if (commandArgs.length \u003e 1) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            throw new DukeInvalidArgumentException("
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    \"Encountered extraneous arguments after list command\","
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    \" \\u2639 OOPS!!! There shouldn\u0027t be anything following \u0027list\u0027,\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                            + \" did you meant to do something else?\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ang-zeyu": 34
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.DukeUtil;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.task.TaskUtil;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.task.TodoTask;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "class TodoCommand extends AddTaskCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public TodoCommand(String[] commandArgs) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        super(commandArgs);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        commandType \u003d Commands.todo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    void validate(TaskList tasks, Ui ui, Storage storage) throws DukeInvalidArgumentException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        String description \u003d DukeUtil.concatStrings(commandArgs, \" \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        TaskUtil.validateTaskDescription(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        taskToAdd \u003d new TodoTask(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ang-zeyu": 22
    }
  },
  {
    "path": "src/main/java/duke/command/WritableCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.storage.DukeFileWriteException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": " * Abstraction of command that requires a generic save to disk operation after execution."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "abstract class WritableCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    WritableCommand(String[] args) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        super(args);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            throws DukeInvalidArgumentException, DukeFileWriteException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        super.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        storage.saveTasksToDisk(tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ang-zeyu": 22
    }
  },
  {
    "path": "src/main/java/duke/storage/DukeFileWriteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.DukeExceptions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "public class DukeFileWriteException extends DukeExceptions {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    DukeFileWriteException(String displayMsg) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        super(\"Error encountered while writing task data to disk\", displayMsg);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    DukeFileWriteException(String errorMsg, String displayMsg) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        super(errorMsg, displayMsg);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ang-zeyu": 13
    }
  },
  {
    "path": "src/main/java/duke/storage/DukeTaskFileParseException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.DukeExceptions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "class DukeTaskFileParseException extends DukeExceptions {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public DukeTaskFileParseException(String displayMsg) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        super(\"Error encountered while parsing task data file\", displayMsg);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public DukeTaskFileParseException(String errorMsg, String displayMsg) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        super(errorMsg, displayMsg);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ang-zeyu": 13
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.command.DukeInvalidArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": " * Abstraction of the file storage of tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": " * Requires a root folder dirName to search for recursively upwards."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    private static String PARSE_ERROR_MSG \u003d"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            \" \\u2639 Oops! I encountered an error while reading your previous tasks,\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    + \" I ignored that line of input but you should check it out...\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    private static final String FALLBACK_FILE_PATH \u003d \"../data\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    private static final String DATA_FILE_NAME \u003d \"taskData.txt\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    private static final int DIRECTORY_SEARCH_LIMIT \u003d 5;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public Storage(String dirName, Ui ui) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        setFilePath(dirName);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public void loadTasksToList(TaskList taskList) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        Scanner dataScanner;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            dataScanner \u003d new Scanner(new File(filePath));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        } catch (FileNotFoundException ex) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            ui.printLineDivider();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            ui.printMsgLine(\" I did not find any previous data in your data directory\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    + \" creating one...\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            ui.printLineDivider();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            ui.printEmptyLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        Map\u003cStorageKey, String\u003e inputs;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        TaskType taskType;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        boolean isTaskDone;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        String taskDescription \u003d \"\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        String taskTiming \u003d \"\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        int lineNumber \u003d 0;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        while (dataScanner.hasNextLine()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            input \u003d dataScanner.nextLine();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            lineNumber++;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                inputs \u003d StorageParser.parseJsonLine(input);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                taskType \u003d getTaskType(inputs.get(StorageKey.type));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                isTaskDone \u003d getDoneStatus(inputs.get(StorageKey.done));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                taskDescription \u003d getDescription(inputs.get(StorageKey.description));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                taskTiming \u003d inputs.get(StorageKey.time);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                Task taskToAdd;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                case todo:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    taskToAdd \u003d new TodoTask(taskDescription);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                case deadline:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    taskToAdd \u003d new DeadlineTask(taskDescription, taskTiming);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                case event:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    taskToAdd \u003d new EventTask(taskDescription, taskTiming);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    throw new DukeTaskFileParseException("
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                            \"Unhandled taskType encountered\","
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                            \" \\u2639 Oops! I am not trained to handle this type of Tasks...\\n\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                taskToAdd.setDone(isTaskDone);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                taskList.addTask(taskToAdd);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            } catch (DukeTaskFileParseException | DukeInvalidArgumentException ex) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                ui.printLineDivider();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                ui.printMsgLine(ex.getDisplayMsg());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                ui.printMsgLine(String.format(\"   Error in storage file line number: %d\", lineNumber));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                ui.printLineDivider();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public void saveTasksToDisk(TaskList tasks) throws DukeFileWriteException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            for (Task task : tasks.getAllTasks()) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                String jsonLineStart \u003d String.format("
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                        \"{ %s: %s, %s: %s, %s: %s\","
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                        StorageKey.type.toString(), task.getTaskType().toString(),"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                        StorageKey.done.toString(), ((Boolean) task.isDone()).toString(),"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                        StorageKey.description.toString(), task.getDescription());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                fileWriter.write(jsonLineStart);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                if (task.getTiming() !\u003d null) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    fileWriter.write("
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                            String.format(\", %s: %s\","
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                                    StorageKey.time.toString(),"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                                    task.getTiming()));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                fileWriter.write(\" }\\n\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            throw new DukeFileWriteException("
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    ex.getMessage(),"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    \" \\u2639 OOPS!!! I failed to write the task data to disk!\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    private TaskType getTaskType(String input) throws DukeTaskFileParseException {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            return TaskType.valueOf(input);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        } catch (IllegalArgumentException | NullPointerException ex) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            throw new DukeTaskFileParseException("
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    \"Invalid task type encountered while parsing task file\","
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    \" \\u2639 Oops! I encountered an invalid task type value while\\n\""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                            + \"   reading your file.\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    private boolean getDoneStatus(String status) throws DukeTaskFileParseException {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        if (status !\u003d null) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            if (status.equalsIgnoreCase(\"true\")) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            } else if (status.equalsIgnoreCase(\"false\")) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        throw new DukeTaskFileParseException("
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                \"Invalid done status number encountered while parsing task file\","
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                \" \\u2639 Oops! I encountered an invalid or missing done value\\n\""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                        + \"   while reading your file.\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    private String getDescription(String description) throws DukeTaskFileParseException {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            TaskUtil.validateTaskDescription(description);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            return description;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        } catch (DukeInvalidArgumentException | NullPointerException ex) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            throw new DukeTaskFileParseException("
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    \"Invalid task description encountered when parsing task file\","
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    \" \\u2639 Oops! I encountered an empty description while\\n\""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                            + \"   reading your file.\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    private void setFilePath(String dirName) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        String workingDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        Path currentDir \u003d Paths.get(workingDir);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        int recursiveSearchCount \u003d 1;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        while (!Files.isDirectory(Paths.get(currentDir.toString(), dirName))"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                \u0026\u0026 recursiveSearchCount \u003c\u003d DIRECTORY_SEARCH_LIMIT) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            currentDir \u003d currentDir.getParent();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            recursiveSearchCount++;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        if (recursiveSearchCount \u003e 5) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            this.filePath \u003d Paths.get(FALLBACK_FILE_PATH, DATA_FILE_NAME).toString();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            this.filePath \u003d Paths.get(currentDir.toString(), dirName, DATA_FILE_NAME).toString();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ang-zeyu": 187
    }
  },
  {
    "path": "src/main/java/duke/storage/StorageKey.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "enum StorageKey {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    type,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    done,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    description,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    time"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ang-zeyu": 8
    }
  },
  {
    "path": "src/main/java/duke/storage/StorageParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import java.util.EnumMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": " * Abstraction of a storage file parser responsible for resolving file input."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "abstract class StorageParser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    static Map\u003cStorageKey, String\u003e parseJsonLine(String line)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            throws DukeTaskFileParseException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        Map\u003cStorageKey, String\u003e lineMap \u003d new EnumMap\u003cStorageKey, String\u003e(StorageKey.class);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        char[] lineArr \u003d line.toCharArray();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        //first word should be a key"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        boolean isKey \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        StringBuilder currentKey \u003d new StringBuilder();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        StringBuilder currentValue \u003d new StringBuilder();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        for (char c : lineArr) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            switch (c) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            case \u0027{\u0027:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            case \u0027:\u0027:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                isKey \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            case \u0027,\u0027:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            case \u0027}\u0027:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                isKey \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    StorageKey key \u003d StorageKey.valueOf(currentKey.toString().trim());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    lineMap.put(key, currentValue.toString().trim());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    currentKey \u003d new StringBuilder();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    currentValue \u003d new StringBuilder();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                } catch (IllegalArgumentException ex) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    throw new DukeTaskFileParseException("
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                            \"Invalid key found in storage file (line will be skipped)\","
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                            \" \\u2639 OOPS!!! I found an invalid storage key in your storage file,\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                                    + \" I\u0027ll skip that line!\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                                    + String.format(\"   Invalid Key: \\\u0027%s\\\u0027\", currentKey.toString()));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                if (isKey) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    currentKey.append(c);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    currentValue.append(c);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        return lineMap;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ang-zeyu": 56
    }
  },
  {
    "path": "src/main/java/duke/task/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.command.DukeInvalidArgumentException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    private LocalDateTime deadlineDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public DeadlineTask(String description, String deadlineDate) throws DukeInvalidArgumentException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        super(description, deadlineDate);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        this.taskType \u003d TaskType.deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        initDates(deadlineDate);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public String getStatusText() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        return String.format(\"[D][%s] %s (by: %s)\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                getStatusIcon(),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                this.description,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                this.getFormattedTiming());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    private String getFormattedTiming() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        return TaskUtil.getDisplayTime(deadlineDate);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    private void initDates(String deadlineDate) throws DukeInvalidArgumentException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        if (deadlineDate \u003d\u003d null) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            throw new DukeInvalidArgumentException("
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    \"Null reference provided to task constructor\","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    \"\\u2639 OOPS!!! The timing for this task cannot be empty!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        this.deadlineDate \u003d TaskUtil.getDateFromString(deadlineDate);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ang-zeyu": 37
    }
  },
  {
    "path": "src/main/java/duke/task/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.command.DukeInvalidArgumentException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    private LocalDateTime startDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    private LocalDateTime endDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public EventTask(String description, String timing) throws DukeInvalidArgumentException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        super(description, timing);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        this.taskType \u003d TaskType.event;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        initDates(timing);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public String getStatusText() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        return String.format(\"[E][%s] %s (at: %s)\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                getStatusIcon(),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                this.description,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                this.getFormattedTiming());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    private String getFormattedTiming() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        return TaskUtil.getDisplayTime(startDate)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                + \" to \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                + TaskUtil.getDisplayTime(endDate);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    private void initDates(String timing) throws DukeInvalidArgumentException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        if (timing \u003d\u003d null) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            throw new DukeInvalidArgumentException("
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    \"Null reference provided to task constructor\","
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    \"\\u2639 OOPS!!! The timing for this task cannot be empty!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        String[] splitTimings \u003d timing.split(\" to \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        if (splitTimings.length !\u003d 2) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            throw new DukeInvalidArgumentException("
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    \"Missing to delimiter in event task arguments\","
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    \"\\u2639 OOPS!!! The format of the timing is invalid!\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                            + \" Enter your time with \\\"dd/MM/yyyy HHmm to HHmm\\\"\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                            + \"  or \\\"dd/MM/yyyy HHmm to dd/MM/yyyy HHmm\\\"\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        this.startDate \u003d TaskUtil.getDateFromString(splitTimings[0]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        if (splitTimings[1].length() \u003c\u003d 4) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            LocalTime endTime \u003d TaskUtil.getTimeFromString(splitTimings[1]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            this.endDate \u003d this.startDate"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    .plusHours(endTime.getHour() - this.startDate.getHour())"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    .plusMinutes(endTime.getMinute() - this.startDate.getMinute());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            this.endDate \u003d TaskUtil.getDateFromString(splitTimings[1]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        if (this.endDate.isBefore(this.startDate)) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            throw new DukeInvalidArgumentException("
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    \"Invalid date format inputted by user\","
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    \" \\u2639 OOPS!!! The second timing is not after the first one!\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ang-zeyu": 65
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    private String timing;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    TaskType taskType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        this.timing \u003d null;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    Task(String description, String timing) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        this(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        this.timing \u003d timing;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    String getStatusIcon() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public TaskType getTaskType() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public String getTiming() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        return this.timing;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    //setDone so that if the user accidentally marks something to done, it can be undone"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        this.isDone \u003d done;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    abstract public String getStatusText();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ang-zeyu": 47
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    private int size;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        this.size \u003d 0;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public ArrayList\u003cTask\u003e getAllTasks() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        return size;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public Task getTaskByIndex(int index) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public Task deleteTaskByIndex(int index) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        size--;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        return tasks.remove(index);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        size++;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ang-zeyu": 36
    }
  },
  {
    "path": "src/main/java/duke/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    todo,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    deadline,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    event"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ang-zeyu": 7
    }
  },
  {
    "path": "src/main/java/duke/task/TaskUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.command.DukeInvalidArgumentException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "public class TaskUtil {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    private static final String DATE_FORMAT \u003d \"d/M/y HHmm\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    private static final String TIME_FORMAT \u003d \"HHmm\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    private static final String DISPLAY_FORMAT \u003d \"EEE, d MMM y h:mma\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    private static final DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(DATE_FORMAT);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    private static final DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(TIME_FORMAT);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    private static final DateTimeFormatter displayFormatter \u003d DateTimeFormatter.ofPattern(DISPLAY_FORMAT);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public static void validateTaskDescription(String description)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            throws DukeInvalidArgumentException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        if (description.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            throw new DukeInvalidArgumentException("
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    \"User specified description of task is empty\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    \" \\u2639 OOPS!!! The description of a task cannot be empty.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    static LocalDateTime getDateFromString(String dateString) throws DukeInvalidArgumentException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            return LocalDateTime.parse(dateString, dateFormatter);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            throw new DukeInvalidArgumentException("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    \"Invalid date format inputted by user\","
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    \" \\u2639 OOPS!!! The format of the timing is invalid!\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                            + \" Enter your time with \" + DATE_FORMAT);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    static LocalTime getTimeFromString(String timeString) throws DukeInvalidArgumentException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            return LocalTime.parse(timeString, timeFormatter);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            throw new DukeInvalidArgumentException("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    \"Invalid time format inputted by user\","
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                    \" \\u2639 OOPS!!! The format of the timing is invalid!\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "                            + \" Enter your time with \" + TIME_FORMAT);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    static String getDisplayTime(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        return displayFormatter.format(dateTime);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ang-zeyu": 53
    }
  },
  {
    "path": "src/main/java/duke/task/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "public class TodoTask extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public TodoTask(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        this.taskType \u003d TaskType.todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public String getStatusText() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        return String.format(\"[T][%s] %s\", getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ang-zeyu": 12
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import duke.DukeExceptions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    private static final String HORIZONTAL_LINE \u003d \"________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    private static final String greetingMsg \u003d HORIZONTAL_LINE"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            + \" Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            + \" What can I do for you?\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "            + HORIZONTAL_LINE;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public Ui(Scanner scanner) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        this.scanner \u003d scanner;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public void displayDukeException(DukeExceptions ex) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        printMsgLine(ex.getDisplayMsg());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public void printGreetingMsg() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        System.out.println(greetingMsg);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public void printMsgLine(String msg) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public void printEmptyLine() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public void printLineDivider() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        System.out.print(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    public String readLine() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ang-zeyu": 46
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "list list list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "a very invalid command"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "bye bye"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "event /at 2359"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "deadline /by sunday 2359"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "deadline submit report /by"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "event tutorial /at"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "event tutorial /at Mon 2-4pm"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "deadline submit report /by Fri 2359"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "todo"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "todo just a todo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "todo another todo"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "event cs2103 lecture /at Fri 4-6pm"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "done 100"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "delete 10"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ang-zeyu": 26
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/**/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "java -classpath ../bin duke/Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ang-zeyu"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "ang-zeyu": 34
    }
  }
]
