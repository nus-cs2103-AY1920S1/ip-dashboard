[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liawsy"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liawsy"
        },
        "content": "test {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liawsy"
        },
        "content": "run {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 28,
      "-": 14
    }
  },
  {
    "path": "files/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "T | 0 | eat breakfast"
      }
    ],
    "authorContributionMap": {
      "liawsy": 1
    }
  },
  {
    "path": "src/main/java/Data/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "package Data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public CommandType type;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Constructor a Command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param type type of command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    Command(CommandType type) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Constructor a Command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param type type of command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param description description for task related to given command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    Command(CommandType type, String description) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.command \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Retrieves description of task given in command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return String with task description."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    String getDescription() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return this.command;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 37
    }
  },
  {
    "path": "src/main/java/Data/CommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "package Data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": " * Documents types of commands available"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    EXIT, DELETE, DONE, PRINTLIST, ADD, FIND, INVALID, UPDATE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 8
    }
  },
  {
    "path": "src/main/java/Data/Formatter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "package Data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": "public class Formatter {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates new Formatter used to format printing."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public Formatter() {}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Adds 4 spaces for indentation for printing."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param s String to be printed."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return String that has additional indentation."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String format(String s) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return \"     \" + s;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Prints line for formatting."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private void printLine() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return Appended string with new line for each element (varargs version)."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String appendStrings(String... strings) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String s \u003d \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        for (String string: strings) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            if (!string.equals(\"\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                s +\u003d format(string) + \"\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return Appended string with new line for each element."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String appendStrings(String s, List\u003cString\u003e list) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String newString \u003d \"\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        newString +\u003d s + \"\\n\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        for (String string: list) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            newString +\u003d format(String.format(\"%d. %s\", count, string)) + \"\\n\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liawsy"
        },
        "content": "       return newString;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Prints strings in their respective lines with format."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param s String with line breaks."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public void printFormat(String s) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String[] lines \u003d s.split(\"\\n\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        for (String line: lines) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            System.out.println(format(line));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 72
    }
  },
  {
    "path": "src/main/java/Data/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "package Data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import Exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import Exceptions.InvalidInputException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import Exceptions.MissingInputException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import Task.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private Task task \u003d null;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private static int count \u003d 0;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Constructor for a Parser object used to process input and strings."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public Parser(){};"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Takes in line of information to process into commands for program to read."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param line task description or information needed for processing."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return command used for updating tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @throws InvalidCommandException when program gives an invalid command type."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public Command process(String line) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String[] commands \u003d line.split(\" \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String first \u003d commands[0];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        switch (first) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            return new Command(CommandType.EXIT);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            return new Command(CommandType.PRINTLIST);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            return new Command(CommandType.ADD, line);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            return new Command(CommandType.DONE, line);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            return new Command(CommandType.DELETE, line);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            return new Command(CommandType.FIND, line);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case \"update\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            return new Command(CommandType.UPDATE, line);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            return new Command(CommandType.INVALID);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String[] getUpdateInfo(Command command) throws MissingInputException, InvalidInputException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String desc \u003d command.getDescription();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String[] description \u003d desc.split(\" \\\\| \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        if (description.length \u003c\u003d 3) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            throw new MissingInputException(\"Description for update is incomplete!\\n\" +"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    \"Instruction should be in the form Update | [TaskNo] | [Type] | [Info]\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String updateType \u003d description[2];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        switch (updateType) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case \"desc\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case \"time\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case \"date\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            //allow cases to fall through"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            String[] info \u003d new String[3];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            for (int i \u003d 0; i \u003c 3; i++) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    info[i] \u003d description[i+1];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            return info;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            throw new InvalidInputException(\"This is not an update type.\\n\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                + \"An update type should be: \\n\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                + \"desc, time or date.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Processes String to retrieve keyword for search."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param command command for finding matching tasks."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return keyword for matching tasks."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String getKeyword(Command command) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String line \u003d command.getDescription();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String[] description \u003d line.split(\" \");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return description[1];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates task from given Command."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param command command for task to be created."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return task created from the command."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @throws MissingInputException when command\u0027s description is incomplete."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @throws InvalidInputException when date/time description is not in given format."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public Task createTask(Command command) throws MissingInputException, InvalidInputException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String line \u003d command.getDescription();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String[] description \u003d line.split(\" \");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String eventType \u003d description[0];"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        count++;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        assert count \u003e 0;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return createNewTask(count, eventType, description);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Processes command description for task number of related task."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param command command for task to be marked as done/deleted."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return task number"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @throws MissingInputException when command\u0027s description is incomplete."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public int getTaskNo(Command command) throws MissingInputException{"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String line \u003d command.getDescription();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String[] description \u003d line.split(\" \");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String eventType \u003d description[0];"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            if (description.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                throw new MissingInputException(Task.MISSING_DESC_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return Integer.parseInt(description[1]);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates task by processing information given for task."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Intermediate operation for Parser\u0027s createTask method."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param taskNo Task\u0027s number in the list."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param taskType tasks of type Todo/Deadline/Event."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param arr String array that contains task description that has been processed."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return Task created from given inputs."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @throws MissingInputException when description is incomplete."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    Task createNewTask(int taskNo, String taskType, String[] arr) throws MissingInputException, InvalidInputException {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        boolean firstInDescription \u003d true;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String desc \u003d \"\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        Date date \u003d null;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        Time time \u003d null;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        for (int i \u003d 1; i \u003c arr.length; i++) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            if (firstInDescription) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                desc +\u003d arr[i];"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                firstInDescription \u003d false;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            } else if (arr[i].startsWith(\"/\")) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                desc +\u003d \" \" + arr[i];"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            if (desc.equals(\"\")) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                throw new MissingInputException(Task.MISSING_DESC_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            task \u003d new Todo(taskNo, desc, \"T\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            if (arr.length \u003c\u003d 2) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                throw new MissingInputException(Task.MISSING_DATE_TIME_MESSAGE);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            date \u003d Date.processDate(arr[arr.length-2]);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            time \u003d Time.processTime(arr[arr.length-1]);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            task \u003d new Event(taskNo, desc, date, time, \"E\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            if (arr.length \u003c\u003d 2) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                throw new MissingInputException(Task.MISSING_DATE_TIME_MESSAGE);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            date \u003d Date.processDate(arr[arr.length-2]);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            time \u003d Time.processTime(arr[arr.length-1]);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            task \u003d new Deadline(taskNo, desc, date, time, \"D\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            assert false; //only three types of tasks should be created!"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 174
    }
  },
  {
    "path": "src/main/java/Data/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "package Data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import Exceptions.InvalidInputException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import Exceptions.MissingInputException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import Task.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private File f;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Loads and writes into given file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param filePath String that indicates path to file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        f \u003d new File(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            if (!f.exists()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                throw new FileNotFoundException();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            System.out.println(\"File not found.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Loads tasks from file into the program."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return TaskList that will be used in the program for further modifications by user."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public TaskList loadTasks() throws MissingInputException, InvalidInputException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                String task \u003d sc.nextLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                String[] details \u003d task.split(\" \\\\| \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                int num \u003d Integer.parseInt(details[1]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                boolean done;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                done \u003d (num \u003d\u003d 1);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                Date date;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                Time time;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    switch (details[0]) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                        tasks.loadTask(new Todo(counter, details[2], \"T\", done));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                        date \u003d Date.processDate(details[3].split(\" \")[0]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                        time \u003d Time.processTime(details[3].split(\" \")[1]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                        tasks.loadTask(new Deadline(counter, details[2], date, time, \"D\", done));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                        date \u003d Date.processDate(details[3].split(\" \")[0]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                        time \u003d Time.processTime(details[3].split(\" \")[1]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                        tasks.loadTask(new Event(counter, details[2], date, time, \"E\", done));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                        throw new InvalidInputException(\"Task types should only be T, D, and E.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            System.out.println(\"file not detected\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Writes formatted task list into file."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param tasks Task list that has been processed and updated."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public void updateTaskList(TaskList tasks) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            for (Task task : tasks.getTaskList()) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                if (task !\u003d null) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    fw.write( task.fileFormat() + System.lineSeparator());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            System.out.println(\"Something went wrong\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 95
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liawsy"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import Exceptions.InvalidInputException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import Exceptions.MissingInputException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import UI.MessageGenerator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import UI.UI;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "public class Duke{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private MessageGenerator greeter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Reads file containing a list of tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Updates and changes this file according to user input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        greeter \u003d new MessageGenerator();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        ui \u003d new UI(\"files/tasks.txt\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private void run() throws MissingInputException, InvalidInputException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        greeter.greet();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        ui.processFile();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            ui.processInput();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            isExit \u003d ui.isExit();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        greeter.bye();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    String greet() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return greeter.greet();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    String getResponse(String input) throws InvalidInputException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return ui.processInput(input);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public static void main(String[] args) throws MissingInputException, InvalidInputException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 46,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import UI.MessageGenerator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": "public abstract class DukeException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    MessageGenerator msg \u003d new MessageGenerator();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    String errorMessage \u003d \"OOPS!!! \";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates Duke Exception for exceptions in programs."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    DukeException() { }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates DukeException that are related to tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param errorMessage takes in error message for printing."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates String for error message."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return error message."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public abstract String getErrorMessage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 31
    }
  },
  {
    "path": "src/main/java/Exceptions/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates InvalidCommandException when commands that are not understood by program are given."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public InvalidCommandException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.errorMessage +\u003d \"I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates String for error message."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return error message."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String getErrorMessage() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return msg.getLinedMessage(this.errorMessage);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 20
    }
  },
  {
    "path": "src/main/java/Exceptions/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "public class InvalidInputException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public InvalidInputException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.errorMessage +\u003d message;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates String for error message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return error message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String getErrorMessage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return msg.getLinedMessage(errorMessage);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 17
    }
  },
  {
    "path": "src/main/java/Exceptions/InvalidItemException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "public class InvalidItemException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates InvalidItemException when an invalid list item is given."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public InvalidItemException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        errorMessage +\u003d \"This item does not exist on the list!\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates String for error message."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return error message."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String getErrorMessage() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return msg.getLinedMessage(errorMessage);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 21
    }
  },
  {
    "path": "src/main/java/Exceptions/MissingInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "public class MissingInputException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates MissingInputException when input is not complete for program to process."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param message String to be used for printing error message."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public MissingInputException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        errorMessage +\u003d message;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates String for error message."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return error message."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String getErrorMessage() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return msg.getLinedMessage(errorMessage);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 22
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private boolean first \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 31
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import Exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import Exceptions.InvalidInputException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import java.util.Timer;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import java.util.TimerTask;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private boolean first \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/grizz.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/panda.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                DialogBox.getDukeDialog(d.greet(), dukeImage)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        );"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * the dialog container."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Clears the user input after processing."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private void handleUserInput() throws InvalidInputException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        );"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            Timer timer \u003d new Timer();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            TimerTask exitGUI \u003d new TimerTask() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                public void run() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    System.exit(0);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            };"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            timer.schedule(exitGUI, 500);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 69
    }
  },
  {
    "path": "src/main/java/Task/Date.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import Exceptions.MissingInputException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": "public class Date {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    int day;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    Month month;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    int monthNum;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    int year;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public static String INCOMPLETE_DATE_MESSAGE \u003d \"Date is incomplete!\\n Date should be in DD/MM/YYYY format.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Documents months of a year."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public enum Month {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        JANUARY, FEBRUARY, MARCH, APRIL, MAY, JUNE, JULY, AUGUST, SEPTEMBER, OCTOBER, NOVEMBER, DECEMBER;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates Date object containing integers for dates and years and enum for month."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Converts month in integer form to enum."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param day day of the given date in integer form"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param monthNum month of given date in integer form"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param year year of the given date in integer form"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public Date(int day, int monthNum, int year) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.day \u003d day;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.monthNum \u003d monthNum;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        switch (monthNum) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            this.month \u003d Month.JANUARY;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            this.month \u003d Month.FEBRUARY;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            this.month \u003d Month.MARCH;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case 4:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            this.month \u003d Month.APRIL;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case 5:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            this.month \u003d Month.MAY;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case 6:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            this.month \u003d Month.JUNE;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case 7:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            this.month \u003d Month.JULY;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case 8:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            this.month \u003d Month.AUGUST;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case 9:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            this.month \u003d Month.SEPTEMBER;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case 10:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            this.month \u003d Month.OCTOBER;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case 11:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            this.month \u003d Month.NOVEMBER;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case 12:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            this.month \u003d Month.DECEMBER;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Processes a given String and converts String to a date object."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param dateString String in form DD/MM/YYYY."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return Date object."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public static Date processDate(String dateString) throws MissingInputException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String[] date \u003d dateString.split(\"/\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String s \u003d \"\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            if (date.length \u003c 3) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                for (String ind: date) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    s +\u003d \" \" + ind;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                throw new MissingInputException(date.length + \" \" + s + \" \" + INCOMPLETE_DATE_MESSAGE);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return new Date(Integer.parseInt(date[0]), Integer.parseInt(date[1]), Integer.parseInt(date[2]));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Formats Date object."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return A string in the form DD/MM/YYYY."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            return String.format(\"%02d/%02d/%d\", day, monthNum, year);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 95
    }
  },
  {
    "path": "src/main/java/Task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import Exceptions.MissingInputException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates Deadline (also a Task)."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param num Number in the list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param task String indicates description of task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param date Date at which deadline occurs."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param time Time at which deadline occurs."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param type String indicates task type, in this case \"D\"."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param done boolean indicates whether the task is done."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public Deadline(int num, String task, Date date, Time time, String type, boolean done) throws MissingInputException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        super(num, task, date, time, type, done);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates Deadline (also a Task)."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Done status is set as not done by default."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param num Number in the list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param task String indicates description of task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param date Date at which deadline occurs."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param time Time at which deadline occurs."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param type String indicates task type, in this case \"D\"."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public Deadline(int num, String task, Date date, Time time, String type) throws MissingInputException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liawsy"
        },
        "content": "       super(num, task, date, time, type);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Formats the deadline for printing."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return String in the form for printing"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return String.format(\"[D][%s] %s (by: %s %s)\", done ? \"DONE\" : \"NOT DONE\",task, date, time);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Formats the deadline for writing in the text file."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return String in the form writing in text file."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String fileFormat() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return String.format(\"D | %s | %s | %s %s\", done ? \"1\" : \"0\", task, date, time);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 54
    }
  },
  {
    "path": "src/main/java/Task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import Exceptions.MissingInputException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates Events (also a Task)."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param num Number in the list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param task String indicates description of task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param date Date at which deadline occurs."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param time Time at which deadline occurs."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param type String indicates task type, in this case \"E\"."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param done boolean indicates whether the task is done."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public Event(int num, String task, Date date, Time time, String type, boolean done) throws MissingInputException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        super(num, task, date, time, type, done);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates Events (also a Task)."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Done status is set as not done by default."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param num Number in the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param task String indicates description of task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param date Date at which deadline occurs."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param time Time at which deadline occurs."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param type String indicates task type, in this case \"E\"."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public Event(int num, String task, Date date, Time time, String type) throws MissingInputException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        super(num, task, date, time, type);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Formats the event for printing."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return String in the form for printing."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return String.format(\"[E][%s] %s (at: %s %s)\", done ? \"DONE\" : \"NOT DONE\",task, date, time);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Formats task to be written in given file."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return formatted string for writing in file."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String fileFormat() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return String.format(\"E | %s | %s | %s %s\", done ? \"1\" : \"0\", task, date, time);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 54
    }
  },
  {
    "path": "src/main/java/Task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import Exceptions.InvalidInputException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import Exceptions.MissingInputException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    boolean done;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private int no;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    String task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    Time time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    Date date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public static String MISSING_DESC_ERROR_MESSAGE \u003d \"Task description is incomplete!\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public static String MISSING_DATE_TIME_MESSAGE \u003d \"Task date/time is missing!\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates Task with an item number, task description, task type and done status."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param num Task number in the list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param task Task description"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param type Task type (can be Todo, Event or Deadline)."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param done Indicates whether task is done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    Task(int num, String task, String type, boolean done) throws MissingInputException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.no \u003d num;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        if (task.length() \u003c 1) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            throw new MissingInputException(MISSING_DESC_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates Task with an item number, task description, task type and done status."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Done status is set as not done by default."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param num Task number in the list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param task Task description"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param type Task type (can be Todo, Event or Deadline)."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    Task(int num, String task, String type) throws MissingInputException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.no \u003d num;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        if (task.length() \u003c 1) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            throw new MissingInputException(MISSING_DESC_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    Task(int num, String task, Date date, Time time, String type, boolean done) throws MissingInputException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.no \u003d num;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        if (task.length() \u003c 1) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            throw new MissingInputException(MISSING_DESC_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        if (date\u003d\u003dnull || time \u003d\u003d null) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            throw new MissingInputException(MISSING_DATE_TIME_MESSAGE);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public Task(int num, String task, Date date, Time time, String type) throws MissingInputException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.no \u003d num;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        if (task.length() \u003c 1) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            throw new MissingInputException(MISSING_DESC_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        if (date\u003d\u003dnull || time \u003d\u003d null) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            throw new MissingInputException(MISSING_DATE_TIME_MESSAGE);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Updates task description to the new one."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param newDesc"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    void updateTaskDesc(String newDesc) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.task \u003d newDesc;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    void updateTaskDate(String dateString) throws MissingInputException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.date \u003d Date.processDate(dateString);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    void updateTaskTime(String timeString) throws MissingInputException, InvalidInputException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.time \u003d Time.processTime(timeString);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Sets task as done."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    void setDone() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return task description"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    String getTaskInfo() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return this.task;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Formats task to be written in given file."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return formatted string for writing in file."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public abstract String fileFormat();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 123
    }
  },
  {
    "path": "src/main/java/Task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import Exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import Exceptions.InvalidInputException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import Exceptions.InvalidItemException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import Exceptions.MissingInputException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import UI.MessageGenerator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    MessageGenerator msgGenerator \u003d new MessageGenerator();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates task list and adds a placeholder value for easier tracking."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        taskList.add(null);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return Number of tasks in list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private int noTasks() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return taskList.size() - 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Adds task to task list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Prints message when task is added via user input."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param task task to be added."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return program message when task is added."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String addTask(Task task) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return msgGenerator.getAddMessage(task, noTasks());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Adds task to task List when task is loaded from the file."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param task task loaded from the file that is to be added."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public void loadTask(Task task) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Removes task of given identification number from list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Prints message when task is removed."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Method is only called when task is a valid number."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param taskNo identification number of task in list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return message to indicate task is removed."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private String removeTask(int taskNo) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        Task deleted \u003d taskList.get(taskNo);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        taskList.remove(taskNo);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        assert !(taskList.contains(taskList.get(taskNo)));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return msgGenerator.getRemoveMessage(deleted, noTasks());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Formats task list into list of strings for printing/writing."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return List of Strings."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private List\u003cString\u003e listify(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        List\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        for (Task task: tasks) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            if (task !\u003d null) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                list.add(task.toString());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return task list."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public List\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Prints list of tasks using the message generator."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String getList() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return msgGenerator.getList(listify(this.taskList));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Checks if given task number exists in task list."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param taskNo identification number for task."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return whether or not task number exists."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private boolean invalidTaskNo(int taskNo) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return taskNo \u003e\u003d taskList.size();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Marks a task as done and returns the done message."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param taskNo identification number for task."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return done message."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String setDone(int taskNo) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            if (invalidTaskNo(taskNo)) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                throw new InvalidItemException();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            taskList.get(taskNo).setDone();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            return msgGenerator.getDoneMessage(taskList.get(taskNo));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            return e.getErrorMessage();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Deletes task with given identification number."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param taskNo identification number for task."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return String with delete message."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String deleteTask(int taskNo) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            if (invalidTaskNo(taskNo)) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                throw new InvalidItemException();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            return removeTask(taskNo);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            return e.getErrorMessage();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Updates task depending on what type of instruction."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param strings Variable number of strings taken in."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String updateTask(String...strings) throws InvalidInputException, MissingInputException {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String updateType \u003d strings[1];"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String info \u003d strings[2];"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        int taskNo;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            taskNo \u003d Integer.parseInt(strings[0]);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            if (invalidTaskNo(taskNo)) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                throw new InvalidItemException();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        } catch (NumberFormatException | InvalidItemException e) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            throw new InvalidInputException(\"Task number should be given!\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        switch (updateType) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case \"desc\":"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            return updateTaskDesc(taskNo, info);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case \"time\":"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            return updateTaskTime(taskNo, info);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case \"date\":"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            return updateTaskDate(taskNo, info);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            assert false; //update types should be filtered out."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            return \"Wrong update type!\";"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Updates Task Description."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param taskNo identification number for task."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return message when task is updated."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String updateTaskDesc(int taskNo, String desc) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        taskList.get(taskNo).updateTaskDesc(desc);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return msgGenerator.getUpdateMessage(taskList.get(taskNo), noTasks());"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Updates Task Timing."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param taskNo identification number for task."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return message when task is updated."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String updateTaskTime(int taskNo, String time) throws InvalidInputException, MissingInputException {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        taskList.get(taskNo).updateTaskTime(time);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return msgGenerator.getUpdateMessage(taskList.get(taskNo), noTasks());"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Updates Task Date."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param taskNo identification number for task."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return message when task is updated."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String updateTaskDate(int taskNo, String date) throws MissingInputException {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        taskList.get(taskNo).updateTaskDate(date);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return msgGenerator.getUpdateMessage(taskList.get(taskNo), noTasks());"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Searches and prints matching tasks in task list"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * ."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param keyword word that task must contain to be printed."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return String containing list of tasks."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String findMatchingTasks(String keyword) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        for (Task task: taskList) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            if (task !\u003d null \u0026\u0026 task.getTaskInfo().contains(keyword)) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                matchingTasks.add(task);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return msgGenerator.getMatchingList(listify(matchingTasks));"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 219
    }
  },
  {
    "path": "src/main/java/Task/Time.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import Exceptions.InvalidInputException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import Exceptions.MissingInputException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": "public class Time {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private Period period;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private int hour;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private int minutes;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private int time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public static String TIME_FORMAT_MESSAGE \u003d \"Time should be given in HHMM format\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Documents whether given time is am or pm."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public enum Period {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        AM, PM;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates time object with hour, minute and period components."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param time in military format."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private Time(int time) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        hour \u003d time / 100;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        minutes \u003d time % 100;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        if (time \u003c 1200) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            period \u003d Period.AM;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            period \u003d Period.PM;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Processes a given String and converts String to a time object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param timeString String in form HHMM."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return Time object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public static Time processTime(String timeString) throws MissingInputException, InvalidInputException{"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        if (timeString.equals(\"\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            throw new MissingInputException(\"Time is missing! \\n\" + TIME_FORMAT_MESSAGE);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        int timeInt \u003d 0000;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            timeInt \u003d Integer.parseInt(timeString);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            throw new InvalidInputException(TIME_FORMAT_MESSAGE);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return new Time(timeInt);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Formats Time object."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return A string in the form HHMM."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return time + \"\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 64
    }
  },
  {
    "path": "src/main/java/Task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import Exceptions.MissingInputException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates Todo (also a Task)."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param num Number in the list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param task String indicates description of task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param type String indicates task type, in this case \"T\"."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param done boolean indicates whether the task is done."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public Todo(int num, String task, String type, boolean done) throws MissingInputException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        super(num, task, type, done);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates Todo (also a Task)."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param num Number in the list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param task String indicates description of task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param type String indicates task type, in this case \"T\"."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public Todo(int num, String task, String type) throws MissingInputException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        super(num, task, type);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Formats the todo for printing."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return String in the form for printing"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return String.format(\"[T][%s] %s\", done ? \"DONE\" : \"NOT DONE\",task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Formats task to be written in given file."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return formatted string for writing in file."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String fileFormat() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return String.format(\"T | %s | %s\", done ? \"1\" : \"0\", task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 50
    }
  },
  {
    "path": "src/main/java/UI/MessageGenerator.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "package UI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import Data.Formatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import Task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "public class MessageGenerator {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    Formatter formatter \u003d new Formatter();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Generates messages for different user input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public MessageGenerator() {}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private String line() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return \"_______________________________________________________\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return String for header of task list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private String listTasks() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return \"Here are the tasks in your list: \";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return String for header of removing task action."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private String removeTask() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return \"Noted. I\u0027ve removed this task: \";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return String for header of adding task action."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private String addTask() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return \"Got it. I\u0027ve added this task: \";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return String for header of marking task as done."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private String markDone() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return String to indicate number of tasks in list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private String numTask(int n) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return \"Now you have \" + n + \" task(s) in the list.\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return String for header of finding matching tasks."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private String matchingTasks() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private String updateTask() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return \"Got it. Your task is now updated as: \";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return String to greet user."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private String greeting() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String s \u003d formatter.format(\"Hello I\u0027m Pan Pan!\\n\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        s +\u003d formatter.format(\"What can I do for you?\\n\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return String when program is exited."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private String byeString() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Formats task with proper indentations."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return String for formatted task."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private String formatTask(Task task) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        if (task \u003d\u003d null) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            return \"  \" + task.toString();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Returns a message with lined formatting."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param message that should be formatted."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return formatted string for printing/output."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String getLinedMessage(String message) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String s \u003d \"\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        s +\u003d line();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        s +\u003d formatter.format(message) + \"\\n\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        s +\u003d line();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Returns the program response when a task is removed."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param task Task that is to be removed."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param n Number tagged to task."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String getRemoveMessage(Task task, int n) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String s \u003d line();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        s +\u003d formatter.appendStrings(removeTask(), formatTask(task), numTask(n));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        s +\u003d line();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String getUpdateMessage(Task task, int n) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String s \u003d line();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        s +\u003d formatter.appendStrings(updateTask(), formatTask(task), numTask(n));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        s +\u003d line();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param task Task that is to be added."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param n Number tagged to task."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return String that contains the task added."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String getAddMessage(Task task, int n) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String s \u003d \"\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        s +\u003d line();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        s +\u003d formatter.appendStrings(addTask(), formatTask(task), numTask(n));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        s +\u003d line();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Returns the program response when a task is set as done."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param task Task that is set as done."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return String to indicate task is marked as done."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String getDoneMessage(Task task) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String s \u003d line();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        s +\u003d formatter.appendStrings(markDone(), formatTask(task));"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        s +\u003d line();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Prints the program response when user asks for list of tasks."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param list List of tasks in their string form."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return String in lined"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String getList(List\u003cString\u003e list) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String s \u003d line();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        s +\u003d formatter.appendStrings(formatter.format(listTasks()), list);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        s +\u003d line();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Prints matching tasks in a task list."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param list list of tasks in their string form."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String getMatchingList(List\u003cString\u003e list) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String s \u003d \"\";"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        s +\u003d line();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        s +\u003d formatter.appendStrings(formatter.format(matchingTasks()), list);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        s +\u003d line();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Prints welcome message when program begins."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String greet() {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String s \u003d line();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        s +\u003d formatter.format(greeting());"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        s +\u003d line();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Prints goodbye message when program terminates."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public void bye() {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        formatter.printFormat(byeString());"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 201
    }
  },
  {
    "path": "src/main/java/UI/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "package UI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import Data.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import Data.CommandType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import Data.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import Data.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import Exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import Exceptions.InvalidInputException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import Exceptions.MissingInputException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import Task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import Task.TaskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private boolean isExit \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Processes commands from the user to interact with given file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param fileInput String that indicates file path."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public UI(String fileInput) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        storage \u003d new Storage(fileInput);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Exits program in Duke by changing boolean."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return boolean to indicate whether program should be exited."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Processes file in storage and adds tasks to program."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public void processFile() throws MissingInputException, InvalidInputException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        for (Task task: storage.loadTasks().getTaskList()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            tasks.loadTask(task);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Processes input from the Command Line made by user."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * This makes changes to the program\u0027s task list and file."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public void processInput() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            processCommand(parser.process(line));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String processInput(String input) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String output \u003d processCommand(parser.process(input));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        storage.updateTaskList(tasks);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Intermediate method to process command."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * This updates and writes the file."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param command command created from parser."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private String processCommand(Command command) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "liawsy"
        },
        "content": "           try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                switch (command.type) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                case EXIT:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    exit();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    return \"Bye!\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                case PRINTLIST:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    return tasks.getList();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                case ADD:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    return tasks.addTask(parser.createTask(command));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                case DELETE:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    return tasks.deleteTask(parser.getTaskNo(command));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                case DONE:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    return tasks.setDone(parser.getTaskNo(command));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                case FIND:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    return tasks.findMatchingTasks(parser.getKeyword(command));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                case UPDATE:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    return tasks.updateTask(parser.getUpdateInfo(command));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    assert command.type.equals(CommandType.INVALID); //cases should always fall up to Invalid case."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    throw new InvalidCommandException();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            } catch (InvalidCommandException | InvalidInputException | MissingInputException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                return e.getErrorMessage();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      }
    ],
    "authorContributionMap": {
      "liawsy": 108
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "liawsy": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "liawsy": 19
    }
  },
  {
    "path": "test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import duke.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import duke.Todo;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "class DukeTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Tests if a Date object returns the correct string format for printing."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    void testDate() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        Date date \u003d new Date(15, 7, 2019);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        assertEquals(\"15/07/2019\", date.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Tests if a ToDo object returns the correct string format for printing."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liawsy"
        },
        "content": "   @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liawsy"
        },
        "content": "   void testTodoFormat() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        Todo todo \u003d new Todo(1, \"read book\", \"T\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        assertEquals(\"[T][✗] read book\", todo.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liawsy"
        },
        "content": "   }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 28
    }
  }
]
