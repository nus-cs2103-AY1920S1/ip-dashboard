[
  {
    "path": "A-CodeQuality.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "A"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 1
    }
  },
  {
    "path": "Tasklist.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "0/todo/123"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 1
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "checkstyleMain {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    source \u003d\u0027src/main/java\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    archiveBaseName \u003d \"DUKE\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    archiveVersion \u003d \"2\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 20,
      "-": 13
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "### Feature 1 "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "Description of feature."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "1.1 Adding todo task: todo "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "Format: todo (description)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "1.2 Adding event task: event"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "Format: event (description) /at (place)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "1.3 Adding deadline task: deadline"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "Format: deadline (description) /by (Date: DD/MM/YYYY 24hour format)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "1.4 list out the tasks: list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "Format: list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "1.5 delete a task number: delete"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "Format: delete (task number)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "1.6 delete all tasks: delete all"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "Format: delete all"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "1.7 mark a task as done: done"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "Format: done (task number)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "1.8 find tasks using keywords: find"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "Format: find (keyword)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "1.9 open up help command: help"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "Format: help"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "1.10 sort the task list according to description lexicographically: sort"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "Format: sort type"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "1.11 sort the task list according to task type (todo task first, followed by "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "event task and then deadline task) : sort"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "Format: sort type"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "1.12 close the program: bye"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "Format: bye"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "### `Keyword` - Describe action"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "Describe action and its outcome."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "`keyword (optional arguments)`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "`outcome`"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 48,
      "-": 21
    }
  },
  {
    "path": "src/main/java/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Exceute the bye command in Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     *  Bye Constructor with command string input."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param command user string input"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public ByeCommand(String command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Execute the bye command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param task Tasklist data"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param ui Ui interfaces and strings"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param storage stored file"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String execute(TaskList task, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return (\"      Bye :) Hope to see you again soon!\\n\" + ui.showLine());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Bye command means exit. return true."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @return return true"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 36
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Execute the command in Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     *  Command constructor using string user input."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param command user String input"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public Command(String command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     *  Execute the command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param task Tasklist data"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param ui Ui interfaces and strings"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param storage stored file"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @throws DukeException if any of raw values are invalid"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public abstract String execute(TaskList task, Ui ui, Storage storage) throws DukeException,AssertionError;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 26
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Deadline task of Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Deadline constructor with description and by as string."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param description description of tasks"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param by deadline date. Has to be in the format \"DD/MM/YYYY 24hour\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 26
    }
  },
  {
    "path": "src/main/java/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Execute the Deadline command in Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Deadline constructor with string command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param command user string input"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public DeadlineCommand(String command) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Execute the Deadline command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param task Tasklist data"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param ui Ui interfaces and strings"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param storage stored file"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String execute(TaskList task, Ui ui, Storage storage) throws DukeException,AssertionError {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String[] deadlinetask \u003d command.split(\"deadline \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        assert deadlinetask.length \u003e 0 : \" Must input deadline task\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        if (deadlinetask.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! The description of a Deadline cannot be empty.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String deadlineString \u003d deadlinetask[1];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String[] deadlinearr \u003d deadlineString.split(\" /by \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        if (deadlinearr.length \u003c 2) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            String wrongformat \u003d \" ☹ OOPS!!! Wrong format. Must be deadline desc /by time(format: DD/MM/YYYY 24:00)\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            throw new DukeException(wrongformat);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String output \u003d \"     Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String[] date \u003d deadlinearr[1].split(\"/\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String[] tm \u003d date[2].split(\" \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        int day \u003d Integer.parseInt(date[0]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        int month \u003d Integer.parseInt(date[1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        int year \u003d Integer.parseInt(tm[0]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String time \u003d tm[1];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        Time t \u003d new Time(day, month, year, time);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        Deadline deadline \u003d new Deadline(deadlinearr[0], t.toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        task.addTask(deadline);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        int numberOfTask \u003d task.getCount();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        output +\u003d (\"       \" + deadline.toString() + \"\\n\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        output +\u003d (\"     Now you have \" + numberOfTask + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        int checkdone \u003d deadline.isDone ? 1 : 0;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            String text \u003d checkdone + \"/deadline/\" + deadline.description + \"/\" + deadline.getBy();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            storage.appendToFile(text + System.lineSeparator());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            return \"WRITING ERROR\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return output + \"\\n\" + ui.showLine();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 61
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Execute the Delete command in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     *  Delete Command constructor using string user input."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param command user String input"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public DeleteCommand(String command) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Execute the Delete command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param task Tasklist data"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param ui Ui interfaces and strings"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param storage stored file"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @throws DukeException if any of raw values are invalid"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String execute(TaskList task, Ui ui, Storage storage) throws DukeException,AssertionError {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String[] deletearr \u003d command.split(\" \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        assert deletearr.length \u003e 1 : \" Please input the task number you want to delete\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        if (deletearr.length \u003d\u003d 1 || deletearr.length \u003e 2) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! Please input the task that you want to delete.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        if (deletearr[1].equals(\"all\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                storage.deleteWrite(-1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                return \"ERROR\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            output +\u003d \"     Noted. I\u0027ve removed all tasks.\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            output +\u003d \"     Now you have 0 task in the list.\\n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            task.deleteAll();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        int number \u003d Integer.parseInt(deletearr[1]) - 1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        if (number \u003e\u003d task.getTaskList().size() || number \u003c\u003d -1) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            throw new DukeException(\"      You help input an invalid task number. Task number cannot be more \""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                    + \"task size or less than 1\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        Task deletetask \u003d task.getTaskList().get(number);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        output +\u003d (\"     Noted. I\u0027ve removed this task:\\n\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        output +\u003d (\"       \" + deletetask.toString() + \"\\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        task.deleteTask(number);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        output +\u003d (\"     Now you have \" + task.getCount() + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            storage.deleteWrite(number);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            return \"WRITING ERROR\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return output + \"\\n\" + ui.showLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 62
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            setMinHeight(Region.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * get Dialogbox of duke."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param text text"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param img img"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        DialogBox db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 67
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Execute Done command in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     *  Done Command constructor using string user input."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param command user String input"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public DoneCommand(String command) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Execute the Done command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param task Tasklist data"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param ui Ui interfaces and strings"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param storage stored file"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @throws DukeException if any of raw values are invalid"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String execute(TaskList task, Ui ui, Storage storage) throws DukeException,AssertionError {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String[] donearr \u003d command.split(\" \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            assert donearr.length \u003e 1 : \" Please enter the task number to be marked done.\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            assert donearr.length \u003c 3 : \" Please only enter a single digit to mark the task done.\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            if (donearr.length \u003d\u003d 1 || donearr.length \u003e 2) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                throw new DukeException(\" Please enter a single task number to be marked done.}\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            Integer.parseInt(donearr[1]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            int no \u003d Integer.parseInt(donearr[1]) - 1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            if (no \u003e\u003d task.getTaskList().size() || no \u003c\u003d -1) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                throw new DukeException(\"      You help input an invalid task number. Task number cannot be more \""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                        + \"task size or less than 1\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            Task donetask \u003d task.getTaskList().get(no);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            output +\u003d (\"     Nice! I\u0027ve marked this task as done: \\n\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            donetask.markAsDone();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            output +\u003d (\"       \" + donetask.toString() + \"\\n\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            storage.writeDone(no, donetask);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            return output + \"\\n\" + ui.showLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }  catch (IOException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            return \"WRITING ERROR\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }   catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            return \"Format is Done_\u003cInteger\u003e. Cannot be alphabets.\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 56
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Entry point of Duke application."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Initialises the application and starts the interaction withthe user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Initialises necessary classes and variables."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public Ui getUi() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return ui;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    // ..."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    // ..."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Read the stored data in the file and executes it."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        storage \u003d new Storage(\"Tasklist.txt\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Main method which runs the program."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param args null"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        Label helloWorld \u003d new Label(\"Hello World!\"); // Creating a new Label control"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        Scene scene \u003d new Scene(helloWorld); // Setting the scene to be our Label"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        stage.setScene(scene); // Setting the stage to show our screen"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        stage.show(); // Render the stage."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        // more code to be added here later"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        // more code to be added here later"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        });"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        });"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private Node getDialogLabel(String text) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                DialogBox.getUserDialog(userInput.getText(), user),"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                DialogBox.getDukeDialog(getResponse(userInput.getText()), duke)"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        );"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            return new Parser().parse(input).execute(duke.tasks, duke.ui, duke.storage);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } catch (AssertionError e) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            return e.toString() + ui.showLine();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            return e.toString() + ui.showLine();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 183,
      "-": 1
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Signals an error caused by any data error in Duke program."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 17
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Event task of Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Event constructor with description and at as string."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param description description of tasks"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param at refers to location/venue/places"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 26
    }
  },
  {
    "path": "src/main/java/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Execute Event command in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     *  Event Command constructor using string user input."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param command user String input"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public EventCommand(String command) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Execute the Event command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param task Tasklist data"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param ui Ui interfaces and strings"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param storage stored file"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @throws DukeException if any of raw values are invalid"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String execute(TaskList task, Ui ui, Storage storage) throws DukeException, AssertionError {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String[] eventtask \u003d command.split(\"event \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        assert eventtask.length \u003e 0 : \" Must input event task\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        if (eventtask.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! The description of an Event cannot be empty.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String eventString \u003d eventtask[1];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String[] eventarr \u003d eventString.split(\" /at \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        if (eventarr.length \u003c 2) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! Wrong format. Must be event desc /at place\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        output +\u003d (\"     Got it. I\u0027ve added this task:\\n\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        Event event \u003d new Event(eventarr[0], eventarr[1]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        task.addTask(event);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        int numberOfTask \u003d task.getCount();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        output +\u003d (\"       \" + event.toString() + \"\\n\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        output +\u003d (\"     Now you have \" + numberOfTask + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        int checkdone \u003d event.isDone ? 1 : 0;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            String text \u003d checkdone + \"/event/\" + event.description + \"/\" + event.getAt() + System.lineSeparator();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            storage.appendToFile(text);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            return \"WRITING ERROR\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return output + \"\\n\" + ui.showLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 55
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Execute the Find command in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     *  Find Command constructor using string user input."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param command user String input"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public FindCommand(String command) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Execute the Find command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param task Tasklist data"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param ui Ui interfaces and strings"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param storage stored file"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String execute(TaskList task,Ui ui,Storage storage) throws DukeException, AssertionError {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String[] strarr \u003d command.split(\" \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        assert strarr.length \u003e 1 : \" Please input keywords to find\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        if (strarr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            throw new DukeException(\" Please input keywords to find\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String search \u003d strarr[1];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        output +\u003d (\"     Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        boolean none \u003d true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        ArrayList\u003cTask\u003e tasklist \u003d task.getTaskList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        for (int i \u003d 0; i \u003c tasklist.size(); i++) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            Task t \u003d tasklist.get(i);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            boolean check \u003d t.getDescription().contains(search);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            if (check) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                none \u003d false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                output +\u003d (\"     \" + (i + 1) + \".\" + t.toString() + \"\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        if (none) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            output +\u003d (\"     Cannot Find any matching task in the list.\\n\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return output + \"\\n\" + ui.showLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 52
    }
  },
  {
    "path": "src/main/java/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public HelpCommand(String command) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String execute(TaskList task, Ui ui, Storage storage) throws DukeException, AssertionError {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        stringBuilder.append(\"\u003d\u003d\u003d\u003d\u003d\u003d\\n\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        stringBuilder.append(\"             *Help Command*\\n\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        stringBuilder.append(\"1. todo (desc): input your todo task.\\n\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        stringBuilder.append(\"2. event (desc) /at (place): input your event with description at a place\\n\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        stringBuilder.append(\"3. deadline (desc) /by (time format: DD/MM/YYYY 24hour: input your task with\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                + \" deadline with 24 hour format.\\n\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        stringBuilder.append(\"4. list: list out all the current tasks recorder in Duke\\n\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        stringBuilder.append(\"5. find (keywords): find a task by input some keywords.\\n\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        stringBuilder.append(\"6. delete (task number): delete a task as indicated by task number.\\n\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        stringBuilder.append(\"7. done (task number): mark a task as done, indicated by task number.\\n\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        stringBuilder.append(\"8. sort desc/type: sort a task according to desc lexicographically or\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                + \" sort a task according to type, todo first then event then deadline task.\\n\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        stringBuilder.append(\"9. bye: close the program safely.\\n\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        stringBuilder.append(\"10. help: Check commands.\\n\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        stringBuilder.append(ui.showLine());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return stringBuilder.toString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 27
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Represents a launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 10
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Execute List command in Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     *  List Command constructor using string user input."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param command user String input"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public ListCommand(String command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Execute the List command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param task Tasklist data"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param ui Ui interfaces and strings"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param storage stored file"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String execute(TaskList task, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        output +\u003d (\"     Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        for (int i \u003d 0; i \u003c task.getCount(); i++) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            int number \u003d i + 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            output +\u003d (\"     \" + number + \".\" + task.getTaskList().get(i) + \"\\n\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return output + \"\\n\" + ui.showLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 32
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.animation.PauseTransition;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.util.Duration;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private static Stage stage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private MainWindow mainWindow;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            this.stage \u003d stage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().showWelcome(duke.getUi().showWelcome());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().showWelcome(duke.getUi().helpcommand());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Runs duke by checking for input and displaying errors."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void run() throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        duke \u003d new Duke();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        mainWindow.init(duke);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        mainWindow.showWelcome(\"TEST\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Exit app after 3 seconds."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public static void exitApp() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        PauseTransition exitDelay \u003d new PauseTransition(Duration.seconds(3));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        exitDelay.setOnFinished(event -\u003e stage.close());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        exitDelay.play();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 54
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void init(Duke d) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.duke \u003d d;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        );"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        if (input.equals(\"bye\") || input.equals(\"exit\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            userInput.setEditable(false);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            sendButton.setDisable(true);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            Main.exitApp();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void outputError(Exception e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        output(e.getMessage());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private void output(String message) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(message, dukeImage));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void showWelcome(String message) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        output(message);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 74
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Parses user input."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Parses user input into command for execution."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param command user string input"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @return the command based on string input"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public Command parse(String command) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        if (command.startsWith(\"todo \")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            ToDoCommand c \u003d new ToDoCommand(command);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            return c;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } else if (command.startsWith(\"list\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            ListCommand c \u003d new ListCommand(command);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            return c;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } else if (command.startsWith(\"bye\") || command.startsWith(\"exit\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            ByeCommand c \u003d new ByeCommand(command);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            return c;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } else if (command.startsWith(\"deadline \")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            DeadlineCommand c \u003d new DeadlineCommand(command);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            return c;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } else if (command.startsWith(\"event \")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            EventCommand c \u003d new EventCommand(command);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            return c;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } else if (command.startsWith(\"done \")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            DoneCommand c \u003d new DoneCommand(command);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            return c;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } else if (command.startsWith(\"delete \")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            DeleteCommand c \u003d new DeleteCommand(command);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            return c;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } else if (command.startsWith(\"find \")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            FindCommand c \u003d new FindCommand(command);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            return c;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } else if (command.startsWith(\"sort \")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            SortCommand c \u003d new SortCommand(command);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            return c;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } else if (command.startsWith(\"help\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            HelpCommand c \u003d new HelpCommand(command);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            return c;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            WrongCommand c \u003d new WrongCommand(command);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            return c;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 52
    }
  },
  {
    "path": "src/main/java/SortCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class SortCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    String command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Command constructor using string user input."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param command user String input"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public SortCommand(String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String execute(TaskList task, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String[] getSortingOrder \u003d command.split(\" \");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String desc \u003d \"     Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        if (getSortingOrder.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            throw new DukeException(\" sort according to 1(desc) or 2(type)\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            if (getSortingOrder[1].equals(\"1\") || getSortingOrder[1].equals(\"desc\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                desc +\u003d \"     Sorted according to desc of task.\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                task.sortByDescription();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            } else if (getSortingOrder[1].equals(\"2\") || getSortingOrder[1].equals(\"type\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                desc +\u003d \"     Sorted according to type of task.\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                task.sortByType();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                String error \u003d \"     Input the correct command.\\n     sort 1/2 only\\n     or sort desc/type only\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                return error;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            storage.writeToStorage(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d task.getCount(); i++) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                desc +\u003d \"     \" + i + \".\" + task.getTaskList().get(i - 1) + \"\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            return desc + \"\\n\" + ui.showLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            return \"WRITING ERROR\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 45
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Represents the file used to store task in duke."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private Scanner scan;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private ArrayList\u003cTask\u003e taskArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Storage constructor with filepath of data."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param filePath data filepath"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.file \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        taskArrayList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Loads the {@code Duke} data from this storage file, and returns it."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @return Task data in file. Returns empty task list if file is empty."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @throws DukeException errors when reading file or empty file"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @throws IOException loading error"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException,IOException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        scan \u003d new Scanner(file);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            while (scan.hasNext()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                // example : 0/todo/homework"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                // 1/deadline/homework/2nd of August 2019, 12.35pm"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                String line \u003d scan.nextLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                String[] scanned \u003d line.split(\"/\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                if (scanned[1].equals(\"todo\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                    ToDo scannedDo \u003d new ToDo(scanned[2]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                    if (scanned[0].equals(\"1\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                        scannedDo.markAsDone();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                    taskArrayList.add(scannedDo);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                } else if (scanned[1].equals(\"event\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                    Event scannedEvent \u003d new Event(scanned[2], scanned[3]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                    if (scanned[0].equals(\"1\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                        scannedEvent.markAsDone();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                    taskArrayList.add(scannedEvent);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                } else if (scanned[1].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                    Deadline scannedDeadline \u003d new Deadline(scanned[2], scanned[3]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                    if (scanned[0].equals(\"1\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                        scannedDeadline.markAsDone();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                    taskArrayList.add(scannedDeadline);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            return taskArrayList;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            throw new DukeException(\"LOADING ERROR\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Append data to file without modifying original data."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param textToAppend String to be added to file"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @throws IOException loading error"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void appendToFile(String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath,true);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        fw.write(textToAppend);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Change the done status in task file according to the line number specified by user."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param linenumber task number done"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param task task done"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @throws IOException writing error"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void writeDone(int linenumber, Task task) throws IOException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        File modifiedfile \u003d new File(filePath);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String oldContent \u003d \"\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        BufferedReader reader \u003d new BufferedReader(new FileReader(modifiedfile));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String line \u003d reader.readLine();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        int number \u003d 0;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        while (line !\u003d null) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            if (number !\u003d linenumber) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                oldContent \u003d oldContent + line + System.lineSeparator();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                number++;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                line \u003d reader.readLine();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                //replace first character with 1"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                line \u003d line.replaceFirst(\"0\",\"1\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                oldContent \u003d oldContent + line + System.lineSeparator();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                number++;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                line \u003d reader.readLine();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        writeToFile(oldContent);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Writing data into file."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param textToAdd data to be added into file"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @throws IOException writing file error"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void writeToFile(String textToAdd)  throws IOException {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Delete the specified task indicated by user."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param linenumber task number to be deleted."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @throws IOException deleting file error"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void deleteWrite(int linenumber) throws IOException {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        File filetobemodified \u003d new File(filePath);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String oldContent \u003d \"\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        if (linenumber \u003e\u003d 0) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            BufferedReader reader \u003d new BufferedReader(new FileReader(filetobemodified));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            String line \u003d reader.readLine();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            int number \u003d 0;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            while (line !\u003d null) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                if (number !\u003d linenumber) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                    oldContent \u003d oldContent + line + System.lineSeparator();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                    number++;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                    line \u003d reader.readLine();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                    number++;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                    line \u003d reader.readLine();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        writeToFile(oldContent);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * write the correct format of each task to storage according to the type of task."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param taskList task list"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @throws IOException for writing error"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void writeToStorage(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String write \u003d \"\";"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getTaskList().size(); i++) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            Task task \u003d taskList.getTaskList().get(i);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            if (task instanceof ToDo) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                boolean checkdone \u003d task.isDone;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                if (checkdone) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                    write +\u003d \"1/todo/\" + task.getDescription() + \"\\n\";"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                    write +\u003d \"0/todo/\" + task.getDescription() + \"\\n\";"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                boolean checkdone \u003d task.isDone;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                if (checkdone) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                    write +\u003d \"1/deadline/\" + task.getDescription() + \"/\" + ((Deadline) task).getBy() + \"\\n\";"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                    write +\u003d \"0/deadline/\" + task.getDescription() + \"/\" + ((Deadline) task).getBy() + \"\\n\";"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                boolean checkdone \u003d task.isDone;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                if (checkdone) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                    write +\u003d \"1/event/\" + task.getDescription() + \"/\" + ((Event) task).getAt() + \"\\n\";"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                    write +\u003d \"0/event/\" + task.getDescription() + \"/\" + ((Event) task).getAt() + \"\\n\";"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        writeToFile(write);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 180
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Task of Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Task Constructor with description and at as string."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param description description of tasks"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * returns done status. Tick if done and cross if not done."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @return status icon as string"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    //✓u2713"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return getStatusIcon() + \" \" + this.description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * mark the task as done."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 42
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Task List stores task information in an array list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private ArrayList\u003cTask\u003e tasklist;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        tasklist \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Get the task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return tasklist;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * constructor with task list from storage."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param tasklist from storage class"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasklist) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.tasklist \u003d tasklist;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * add task to the list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param task task"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        tasklist.add(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public int getCount() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return tasklist.size();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * delete task in the list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param number task number"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void deleteTask(int number) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        tasklist.remove(number);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void deleteAll() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        tasklist \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * sort the task in the list according to description alphabetically."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String sortByDescription() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        Collections.sort(getTaskList(), compareByDescription);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String desc \u003d \"\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        for (int i \u003d 0; i \u003c getTaskList().size(); i++) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            desc +\u003d getTaskList().get(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return desc;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * sort the task in the list according to type. Todo task first followed by Event task and finally, Deadline task."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String sortByType() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        Collections.sort(getTaskList(),compareByType);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String desc \u003d \"\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        for (int i \u003d 0; i \u003c getTaskList().size(); i++) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            desc +\u003d getTaskList().get(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return desc;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public Comparator\u003cTask\u003e compareByDescription \u003d (o1, o2) -\u003e o1.getDescription().compareTo(o2.getDescription());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public Comparator\u003cTask\u003e compareByType \u003d (o1, o2) -\u003e {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String tag1;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String tag2;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        if (o1 instanceof ToDo) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            tag1 \u003d \"1\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } else if (o1 instanceof  Event) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            tag1 \u003d \"2\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            tag1 \u003d \"3\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        if (o2 instanceof ToDo) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            tag2 \u003d \"1\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } else if (o2 instanceof  Event) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            tag2 \u003d \"2\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            tag2 \u003d \"3\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return tag1.compareTo(tag2);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    };"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 106
    }
  },
  {
    "path": "src/main/java/Tasklist.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "0/todo/1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "0/todo/2"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 2
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * ToDo task of Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * ToDo constructor with description."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param description description of tasks"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 18
    }
  },
  {
    "path": "src/main/java/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Execute the ToDo command in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class ToDoCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * ToDo constructor with string command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param command user string input"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public ToDoCommand(String command) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Execute the ToDo command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param task Tasklist data"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param ui Ui interfaces and strings"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param storage stored file"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String execute(TaskList task, Ui ui, Storage storage) throws DukeException,AssertionError {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String[] todotask \u003d command.split(\"todo \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        assert todotask.length \u003e 0 : \" Must input todo task\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        if (todotask.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        output \u003d output + (\"     Got it. I\u0027ve added this task:\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        ToDo newToDoTask \u003d new ToDo(todotask[1]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        task.addTask(newToDoTask);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        int numberOfTask \u003d task.getCount();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        output \u003d output + (\"        \" + newToDoTask.toString()) + \"\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        output \u003d output + (\"     Now you have \" + numberOfTask + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        int checkdone \u003d newToDoTask.isDone ? 1 : 0;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            String textToAppend \u003d checkdone + \"/todo/\" + newToDoTask.description + System.lineSeparator();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            storage.appendToFile(textToAppend);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            return \"WRITING ERROR\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return output + \"\\n\" + ui.showLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 48
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Text Ui of the application."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /** UI interface divider lines.**/"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private static final String DIVIDER_LINES \u003d \"    ____________________________________________\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Generates and print the welcome message upon the start of the application."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String showWelcome() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        logo +\u003d (\"Hello! I\u0027m Duke\\n\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        logo +\u003d (\"What can I do for you?\\n\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return logo;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * show the divider lines."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String showLine() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return (DIVIDER_LINES);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * show loading error."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String showLoadingError() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return (\"Loading Error. New tasklist will be created\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * list of commands available in this Duke program."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String helpcommand() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        stringBuilder.append(\"\u003d\u003d\u003d\u003d\u003d\u003d\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        stringBuilder.append(\"             *Help Command*\\n\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        stringBuilder.append(\"1. todo (desc): input your todo task.\\n\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        stringBuilder.append(\"2. event (desc) /at (place): input your event with description at a place\\n\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        stringBuilder.append(\"3. deadline (desc) /by (time format: DD/MM/YYYY 24hour: input your task with\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                + \" deadline with 24 hour format.\\n\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        stringBuilder.append(\"4. list: list out all the current tasks recorder in Duke\\n\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        stringBuilder.append(\"5. find (keywords): find a task by input some keywords.\\n\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        stringBuilder.append(\"6. delete (task number): delete a task as indicated by task number.\\n\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        stringBuilder.append(\"7. done (task number): mark a task as done, indicated by task number.\\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        stringBuilder.append(\"8. sort desc/type: sort a task according to desc lexicographically or\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                + \" sort a task according to type, todo first then event then deadline task.\\n\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        stringBuilder.append(\"9. bye: close the program safely.\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        stringBuilder.append(\"10. help: Check commands.\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        stringBuilder.append(\"\u003d\u003d\u003d\u003d\u003d\u003d\\n\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return stringBuilder.toString();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 60
    }
  },
  {
    "path": "src/main/java/WrongCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Execute the Wrong command in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class WrongCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * WrongCommand constructor with string command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param command user string input"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public WrongCommand(String command) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Execute the Wrong command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param task Tasklist data"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param ui Ui interfaces and strings"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param storage stored file"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String execute(TaskList task, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return \"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" + ui.showLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 30
    }
  },
  {
    "path": "src/main/java/gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "echo."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "echo."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "echo."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ":init"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "@rem Get command-line arguments, handling Windowz variants"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "if \"%@eval[2+2]\" \u003d\u003d \"4\" goto 4NT_args"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "goto execute"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ":4NT_args"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "@rem Get arguments from the 4NT Shell from JP Software"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "set CMD_LINE_ARGS\u003d%$"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ":end"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 90
    }
  },
  {
    "path": "src/main/java/time.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Date and 24 format of by in deadline task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class Time {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private String day;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private String month;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private String year;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Constructor for time."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param day DD"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param month MM"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param year YYYY"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param time has to be in 24 hour format"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public Time(int day, int month, int year, String time) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        if (day \u003d\u003d 1) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            this.day \u003d day + \"st\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } else if (day \u003d\u003d 2) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            this.day \u003d day + \"nd\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } else if (day \u003d\u003d 3) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            this.day \u003d day + \"rd\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            this.day \u003d day + \"th\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        if (month \u003d\u003d 1) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            this.month \u003d \"January\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } else if (month \u003d\u003d 2) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            this.month \u003d \"February\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } else if (month \u003d\u003d 3) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            this.month \u003d \"March\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } else if (month \u003d\u003d 4) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            this.month \u003d \"April\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } else if (month \u003d\u003d 5) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            this.month \u003d \"May\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } else if (month \u003d\u003d 6) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            this.month \u003d \"June\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } else if (month \u003d\u003d 7) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            this.month \u003d \"July\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } else if (month \u003d\u003d 8) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            this.month \u003d \"August\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } else if (month \u003d\u003d 9) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            this.month \u003d \"September\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } else if (month \u003d\u003d 10) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            this.month \u003d \"October\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } else if (month \u003d\u003d 11) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            this.month \u003d \"November\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } else if (month \u003d\u003d 12) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            this.month \u003d \"December\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.year \u003d year + \"\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        //1800"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.time \u003d convert(time);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * convert the string input of by to the needed format."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param time time"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String convert(String time) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String t \u003d time;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String hour \u003d time.charAt(0) + \"\" + time.charAt(1);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String mins \u003d time.charAt(2) + \"\" + time.charAt(3);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        int hourr \u003d Integer.parseInt(hour);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        if (hourr \u003c 12) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            output \u003d hour + \".\" + mins + \"am\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } else if (hourr \u003d\u003d 12) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            output \u003d hour + \".\" + mins + \"pm\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            hourr \u003d hourr - 12;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            output \u003d hourr + \".\" + mins + \"pm\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String t \u003d this.day + \" of \" + this.month + \" \" + this.year + \", \" + this.time;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 86
    }
  },
  {
    "path": "src/main/java/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "      \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 16
    }
  },
  {
    "path": "src/main/java/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 19
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "      \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 19
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "done 7"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 17
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 21
    }
  }
]
