[
  {
    "path": "src/main/java/App.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": "public class App {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        // Greet"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        print(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        String input \u003d scanner.nextLine().strip();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        // Echo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            performAction(input);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            input \u003d scanner.nextLine().strip();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        // Exit"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        print(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private void performAction(String input) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            String[] inputArr \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            //inputArr[0] is the action, inputArr[2] is the data"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            switch (inputArr[0]) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                // List"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    displayList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    doneTask(inputArr);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    addTodo(inputArr);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    addDeadline(inputArr);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    addEvent(inputArr);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    deleteTask(inputArr);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            print(e.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    // List"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private void displayList() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        if (list.isEmpty()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            print(\"You have no tasks in the list.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            int index \u003d 1;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            StringBuilder strbui \u003d new StringBuilder();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            for (Task task : list) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                strbui.append(String.format(\"%d. %s%n\", index, task));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            print(strbui.deleteCharAt(strbui.length() - 1).toString());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    // Done"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private void doneTask(String[] input) throws DukeException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            int id \u003d Integer.parseInt(input[1]) - 1;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            Task task \u003d list.get(id);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            task.done();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            print(String.format(\"Nice! I\\\u0027ve marked this task as done:%n%s\", task));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            throw new DukeException(\"OOPS!!! Please enter a valid task number.\\n\" +"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    \"   Usage: done [task no.]\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    // Todo"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private void addTodo(String[] input) throws DukeException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        if (input.length \u003c 2 || input[1].strip().isEmpty())"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\\n\" +"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    \"   Usage: todo [task description]\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        Task task \u003d new Todo(input[1]);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        printAlert(task);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    // Deadline"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private void addDeadline(String[] input) throws DukeException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        if (input.length \u003c 2 || input[1].strip().isEmpty())"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a deadline task cannot be empty.\\n\" +"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    \"   Usage: deadline [task description] /by [deadline]\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        String[] attributes \u003d input[1].split(\" /by \");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        if (attributes.length \u003c 2 || attributes[1].strip().isEmpty())"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            throw new DukeException(\"OOPS!!! Please provide a deadline for the task.\\n\" +"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    \"   Usage: deadline [task description] /by [deadline]\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        Task task \u003d new Deadline(attributes[0], attributes[1]);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        printAlert(task);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    // Event"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private void addEvent(String[] input) throws DukeException {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        if (input.length \u003c 2 || input[1].strip().isEmpty())"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\\n\" +"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    \"   Usage: event [event description] /at [event time]\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        String[] attributes \u003d input[1].split(\" /at \");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        if (attributes.length \u003c 2 || attributes[1].strip().isEmpty())"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            throw new DukeException(\"OOPS!!! Please provide a time for the event.\\n\" +"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    \"   Usage: event [event description] /at [event time]\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        Task task \u003d new Event(attributes[0], attributes[1]);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        printAlert(task);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    // Delete"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private void deleteTask(String[] input) throws DukeException {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            int id \u003d Integer.parseInt(input[1]) - 1;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            Task task \u003d list.remove(id);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            print(String.format(\"Noted. I\u0027ve removed this task:%n\" +"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                            \"\\t%s%n\" +"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                            \"Now you have %d tasks in the list\","
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    task, list.size()));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            throw new DukeException(\"OOPS!!! Please enter a valid task number.\\n\" +"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    \"   Usage: delete [task no.]\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private void printAlert(Task task) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        print(String.format(\"Got it. I\u0027ve added this task:%n\" +"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                \"\\t%s%n\" +"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                \"Now you have %d tasks in the list.\","
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                task, list.size()));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private void print(String output) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        String border \u003d \"\\t------------------------------------------------------------\\n\";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        output \u003d output.replaceAll(\"(?m)^\", \"\\t \");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        System.out.print(border + output + \"\\n\" + border);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shiweing": 150
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    Deadline(String desc, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        this.by \u003d by.strip();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), this.by);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shiweing": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        App app \u003d new App();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        app.run();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shiweing": 3,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return String.format(\"\\u2639 %s\", super.getMessage());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shiweing": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    Event(String desc, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        this.at \u003d at.strip();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), this.at);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shiweing": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private String desc;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    Task(String desc) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        this.desc \u003d desc.strip();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public void done() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return String.format(\"[%c] %s\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                this.isDone ? \u0027\\u2713\u0027 : \u0027\\u2717\u0027,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                this.desc);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shiweing": 20
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    Todo(String desc) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shiweing": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": "done"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": "done "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": "todo"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "todo "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": "deadline "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": "deadline return book"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": "event"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "event "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": "event project meeting"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": "delete"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": "list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": "list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": "list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shiweing"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shiweing"
        },
        "content": "list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shiweing"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shiweing"
        },
        "content": "list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shiweing"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shiweing"
        },
        "content": "list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shiweing"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shiweing"
        },
        "content": "list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shiweing"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shiweing"
        },
        "content": "list"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shiweing"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shiweing"
        },
        "content": "list"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shiweing"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shiweing"
        },
        "content": "list"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shiweing"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "shiweing": 35
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shiweing"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "shiweing": 21
    }
  }
]
