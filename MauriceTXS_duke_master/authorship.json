[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "T | 0 | test"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "D | 0 | return book | 12/12/12 1700"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "T | 0 | testadd in"
      }
    ],
    "authorContributionMap": {
      "MauriceTXS": 3
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": " * Tasks that are used for deadlines."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    static String[] suffixes \u003d"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        {\"0th\", \"1st\", \"2nd\", \"3rd\", \"4th\", \"5th\", \"6th\", \"7th\", \"8th\", \"9th\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            \"10th\", \"11th\", \"12th\", \"13th\", \"14th\", \"15th\", \"16th\", \"17th\", \"18th\", \"19th\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            \"20th\", \"21st\", \"22nd\", \"23rd\", \"24th\", \"25th\", \"26th\", \"27th\", \"28th\", \"29th\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            \"30th\", \"31st\"};"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    protected Date by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public Deadline(String description, Date by, boolean isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        SimpleDateFormat formatDayOfMonth \u003d new SimpleDateFormat(\"d\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        int day \u003d Integer.parseInt(formatDayOfMonth.format(by));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        SimpleDateFormat DATE_FORMAT \u003d new SimpleDateFormat(\"\u0027 of\u0027 MMMMM yyyy, Ka\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        return \" (by: \" + suffixes[day] + (DATE_FORMAT.format(by)) + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public Date getBy() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MauriceTXS": 43
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    final static String FILE_LOCATION \u003d System.getProperty(\"user.dir\") + \"/data/duke.txt\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    final static List\u003cString\u003e availableCommands \u003d Arrays.asList(\"bye\", \"list\", \"done\", \"todo\", \"event\", \"deadline\", \"delete\", \"find\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    private Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        ui \u003d new UI();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        taskList \u003d new TaskList(ui);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        parser \u003d new Parser(availableCommands);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        storage \u003d new Storage(taskList, filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            storage.readTask();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            String command \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                parser.parseCommand(ui, storage, command, taskList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                ui.horizontalLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                ui.horizontalLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        new Duke(FILE_LOCATION).run();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MauriceTXS": 44,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": " * Exceptions used for duke."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        super(\"\\u2639 OOPS!!! \" + message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MauriceTXS": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": " * Tasks that are used for events."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    static String[] suffixes \u003d"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        {\"0th\", \"1st\", \"2nd\", \"3rd\", \"4th\", \"5th\", \"6th\", \"7th\", \"8th\", \"9th\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            \"10th\", \"11th\", \"12th\", \"13th\", \"14th\", \"15th\", \"16th\", \"17th\", \"18th\", \"19th\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            \"20th\", \"21st\", \"22nd\", \"23rd\", \"24th\", \"25th\", \"26th\", \"27th\", \"28th\", \"29th\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            \"30th\", \"31st\"};"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    protected Date at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public Event(String description, Date at, boolean isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        SimpleDateFormat formatDayOfMonth \u003d new SimpleDateFormat(\"d\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        int day \u003d Integer.parseInt(formatDayOfMonth.format(at));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        SimpleDateFormat DATE_FORMAT \u003d new SimpleDateFormat(\"\u0027 of\u0027 MMMMM yyyy, Ka\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        return \" (at: \" + suffixes[day] + (DATE_FORMAT.format(at)) + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public Date getAt() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MauriceTXS": 43
    }
  },
  {
    "path": "src/main/java/IODukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": " * IO Exceptions used for duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "public class IODukeException extends DukeException{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public IODukeException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MauriceTXS": 9
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": " * Used to parse commands that are given."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    private List\u003cString\u003e availableCommands;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public Parser(List availableCommands) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        this.availableCommands \u003d availableCommands;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "     * Provides the ability to parse the String commands and execute the commands accordingly."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "     * @param ui UI related methods"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "     * @param storage Storage related methods"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "     * @param command command that is being passed in"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "     * @param taskList The list that store all the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "     * @throws DukeException Exception in case of error"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public void parseCommand (UI ui, Storage storage, String command, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        if (!availableCommands.contains(command.split(\" \")[0])) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        } else if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            ui.exit();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            ui.printList(taskList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        } else if (command.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            String[] words \u003d command.split(\"\\\\s\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            int index \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            taskList.doneTask(index);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            storage.saveTask();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        } else if (command.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            String[] words \u003d command.split(\"\\\\s\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            int index \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            taskList.deleteTask(index);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            storage.saveTask();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        } else if(command.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            List\u003cTask\u003e findList;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            String[] words \u003d command.split(\"\\\\s\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            String findString \u003d words[1];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            findList \u003d taskList.findTask(taskList, findString);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            ui.printTaskList(findList);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            taskList.addTask(command);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            storage.saveTask();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MauriceTXS": 53
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": " * Manages information by store and reading them."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    final static SimpleDateFormat DATE_FORMAT \u003d new SimpleDateFormat(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public Storage(TaskList taskList, String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "     * Reads information from a text file into the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "     * @throws IODukeException throws IO related duke exception"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public void readTask() throws IODukeException{"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        try (BufferedReader br \u003d new BufferedReader(new FileReader(filePath))) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            String line \u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                String[] tokens \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                if (tokens.length \u003c 3) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                    throw new IODukeException(\"Please enter date in this format: 2/12/2019 1800\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                Task taskHolder \u003d null;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                boolean isDone;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                String description \u003d tokens[2];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                Date date \u003d null;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                if (tokens[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                    isDone \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                    isDone \u003d false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                if (tokens.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                        date \u003d DATE_FORMAT.parse(tokens[3]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                    } catch (ParseException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                        throw new IODukeException(\"Please enter date in this format: 2/12/2019 1800\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                switch (tokens[0]) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                    taskHolder \u003d new ToDo(description, isDone);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                    taskHolder \u003d new Deadline(description, date, isDone);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                    taskHolder \u003d new Event(description, date, isDone);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                    throw new IODukeException(\"Invalid task\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                taskList.addTask(taskHolder);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            throw new IODukeException(\"File not found\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            throw new IODukeException(\"Error opening the file\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "     * Saves all the current tasks in the list into a local text file."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "     * @throws IODukeException throws IO related duke exception"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public void saveTask() throws IODukeException{"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        PrintWriter pr \u003d null;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            pr \u003d new PrintWriter(new BufferedWriter(new FileWriter(filePath)));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            for (int j \u003d 0; j \u003c taskList.getSize(); j++) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                int statusHolder \u003d 0;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                if (taskList.getTask(j).getStatus()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                    statusHolder \u003d 1;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                String store \u003d String.format(\"%s | %d | %s\", taskList.getTask(j).getType(), statusHolder, taskList.getTask(j).getDescription());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                if (taskList.getTask(j) instanceof Deadline) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                    store +\u003d \" | \" + ((Deadline) taskList.getTask(j)).getBy();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                } else if (taskList.getTask(j) instanceof Event) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                    store +\u003d \" | \" + ((Event) taskList.getTask(j)).getAt();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                store +\u003d \"\\n\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                pr.write(store);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            throw new IODukeException(\"File could not be saved\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            if (pr !\u003d null) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                pr.close();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MauriceTXS": 113
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": " * An abstract Task class to create more specific tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public abstract String getType();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public abstract String getDate();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public abstract boolean getStatus();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "     * Returns a tick or cross based on have the task been done"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "     * @return tick or cross"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public void changeStatusTrue() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MauriceTXS": 37
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": " * Manages all the tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    final static SimpleDateFormat DATE_FORMAT \u003d new SimpleDateFormat(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public TaskList(UI ui) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public Task getTask(int i) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        return taskList.get(i);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "     * Add task into the list if information is given as a Task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "     * @param task A task object"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "     * Add task into the list if information is given as a string of commands."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "     * @param command Information to be used"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "     * @throws DukeException throws duke exception"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public void addTask(String command) throws DukeException{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        ui.horizontalLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        List\u003cString\u003e commandList \u003d new ArrayList\u003c\u003e(Arrays.asList(command.split(\" \")));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        String stringHolder \u003d (commandList.remove(0));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        List\u003cString\u003e listHolder \u003d new ArrayList\u003c\u003e(commandList);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        if (stringHolder.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            stringHolder \u003d (String.join(\" \", commandList));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            if (!stringHolder.isEmpty()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                Task taskHolder \u003d new ToDo(stringHolder, false);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                taskList.add(taskHolder);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                System.out.println(\"  [T][\\u2718] \" + stringHolder);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        } else if (stringHolder.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            stringHolder \u003d commandList.remove(0);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            listHolder.remove(0);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            for (String i : listHolder) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                if (i.equals(\"/by\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                    commandList.remove(0);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                    stringHolder \u003d stringHolder + \" \" + commandList.remove(0);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            String date \u003d commandList.remove(0);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            listHolder.clear();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            listHolder.addAll(commandList);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            for (String i : listHolder) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                date \u003d date + \" \" + commandList.remove(0);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            Date dateHolder;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                dateHolder \u003d DATE_FORMAT.parse(date);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                throw new IODukeException(\"Please enter date in this format: d/m/y HHmm\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            Task taskHolder \u003d new Deadline(stringHolder, dateHolder, false);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            taskList.add(taskHolder);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            System.out.println(\"  [D][\\u2718] \" + stringHolder + \" (by: \" + date + \")\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            stringHolder \u003d commandList.remove(0);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            listHolder.remove(0);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            for (String i : listHolder) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                if (i.equals(\"/at\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                    commandList.remove(0);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                    stringHolder \u003d stringHolder + \" \" + commandList.remove(0);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            String date \u003d commandList.remove(0);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            listHolder.clear();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            listHolder.addAll(commandList);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            for (String i : listHolder) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                date \u003d date + \" \" + commandList.remove(0);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            Date dateHolder;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                dateHolder \u003d DATE_FORMAT.parse(date);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                throw new IODukeException(\"Please enter date in this format: 2/12/2019 1800\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            Task taskHolder \u003d new Event(stringHolder, dateHolder, false);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            taskList.add(taskHolder);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            System.out.println(\"  [E][\\u2718] \" + stringHolder + \" (at: \" + date + \")\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        ui.horizontalLine();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "     * Changes the status of the task from undone to done"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "     * @param index Index of the task"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public void doneTask(int index) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        index \u003d index - 1;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        taskList.get(index).changeStatusTrue();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        ui.horizontalLine();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        System.out.println(\"  [\" + taskList.get(index).getType() + \"]\" + \"[\" + taskList.get(index).getStatusIcon() + \"] \" + taskList.get(index).getDescription() + taskList.get(index).getDate());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        ui.horizontalLine();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "     * Deletes the task from the list"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "     * @param index Index of the task"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        index \u003d index - 1;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        Task taskHolder \u003d taskList.remove(index);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        ui.horizontalLine();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        System.out.println(\"  [\" + taskHolder.getType() + \"]\" + \"[\" + taskHolder.getStatusIcon() + \"] \" + taskHolder.getDescription() + taskHolder.getDate());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        ui.horizontalLine();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public List findTask(TaskList taskList, String findString) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        List\u003cTask\u003e findList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getSize(); i ++) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            if (taskList.getTask(i).getDescription().contains(findString)) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "                findList.add(taskList.getTask(i));"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        return findList;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      }
    ],
    "authorContributionMap": {
      "MauriceTXS": 168
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": " * Tasks that are used for ToDo."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MauriceTXS": 26
    }
  },
  {
    "path": "src/main/java/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": " * Manages UI related methods."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public UI() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public void horizontalLine() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "     * Greetings when the program starts"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        horizontalLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        System.out.println(\"Hello I\u0027m Duke\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        horizontalLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "     * Closing when the program ends"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        horizontalLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        horizontalLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "     * Prints all the tasks that are inside the list, according to the format given."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "     * @param taskList The list that stores all the task"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public void printList(TaskList taskList) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        horizontalLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            System.out.println(i + 1 + \".[\" + taskList.getTask(i).getType() + \"]\" + \"[\" + taskList.getTask(i).getStatusIcon() + \"] \" + taskList.getTask(i).getDescription() + taskList.getTask(i).getDate());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        horizontalLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    public void printTaskList(List\u003cTask\u003e findList) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        horizontalLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        for (int i \u003d 0; i \u003c findList.size(); i++) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "            System.out.println(i+1 + \".[\" + findList.get(i).getType() + \"]\"+ \"[\" + findList.get(i).getStatusIcon() + \"] \" + findList.get(i).getDescription() + findList.get(i).getDate());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        horizontalLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MauriceTXS": 60
    }
  },
  {
    "path": "src/test/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "T | 0 | test2"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "T | 1 | test"
      }
    ],
    "authorContributionMap": {
      "MauriceTXS": 2
    }
  },
  {
    "path": "src/test/java/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    UI ui \u003d new UI();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    TaskList taskList \u003d new TaskList(ui);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    Storage storage \u003d new Storage(taskList, System.getProperty(\"user.dir\") + \"/data/duke.txt\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    void storage_LoadFromTextFile() throws IODukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        storage.readTask();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        assertEquals(taskList.getSize(), 2);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MauriceTXS": 15
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    UI ui \u003d new UI();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    void testTaskList_AddOneTask() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        TaskList tasks \u003d new TaskList(ui);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        tasks.addTask(new ToDo(\"testDescription\", false));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        assertEquals(tasks.getSize(), 1);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    void testTaskList_AddAndDeleteOneTask() throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        TaskList tasks \u003d new TaskList(ui);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        tasks.addTask(new ToDo(\"testDescription\", false));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        tasks.deleteTask(1);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "        assertEquals(tasks.getSize(), 0);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MauriceTXS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MauriceTXS": 22
    }
  }
]
