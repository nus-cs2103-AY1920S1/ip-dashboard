[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import duke.MessageGenerator;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import duke.UI;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private MessageGenerator greeter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Reads file containing a list of tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Updates and changes this file according to user input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private Duke() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        greeter \u003d new MessageGenerator();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        ui \u003d new UI(\"files/tasks.text\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        greeter.greet();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        ui.processFile();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            ui.processInput();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            isExit \u003d ui.isExit();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        greeter.bye();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "liawsy": 34,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    CommandType type;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Constructs a Command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    Command() {};"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Constructor a Command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param type type of command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    Command(CommandType type) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Constructor a Command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param type type of command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param description description for task related to given command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    Command(CommandType type, String description) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.command \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Retrieves description of task given in command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return String with task description."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    String getDescription() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return this.command;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 39
    }
  },
  {
    "path": "src/main/java/duke/CommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": " * Documents types of commands available"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    EXIT, DELETE, DONE, PRINTLIST, ADD, FIND;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 8
    }
  },
  {
    "path": "src/main/java/duke/Date.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "public class Date {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    int day;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    Month month;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    int monthNum;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    int year;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Documents months of a year."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public enum Month {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        JANUARY, FEBRUARY, MARCH, APRIL, MAY, JUNE, JULY, AUGUST, SEPTEMBER, OCTOBER, NOVEMBER, DECEMBER;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates Date object containing integers for dates and years and enum for month."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Converts month in integer form to enum."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param day day of the given date in integer form"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param monthNum month of given date in integer form"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param year year of the given date in integer form"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public Date(int day, int monthNum, int year) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.day \u003d day;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        switch (monthNum) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            this.month \u003d Month.JANUARY;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            this.month \u003d Month.FEBRUARY;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            this.month \u003d Month.MARCH;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case 4:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            this.month \u003d Month.APRIL;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case 5:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            this.month \u003d Month.MAY;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case 6:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            this.month \u003d Month.JUNE;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case 7:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            this.month \u003d Month.JULY;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case 8:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            this.month \u003d Month.AUGUST;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case 9:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            this.month \u003d Month.SEPTEMBER;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case 10:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            this.month \u003d Month.OCTOBER;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case 11:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            this.month \u003d Month.NOVEMBER;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case 12:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            this.month \u003d Month.DECEMBER;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Processes a given String and converts String to a date object."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param dateString String in form DD/MM/YYYY."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return Date object."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public static Date processDate(String dateString) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String[] date \u003d dateString.split(\"/\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return new Date(Integer.parseInt(date[0]), Integer.parseInt(date[1]), Integer.parseInt(date[2]));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Formats Date object."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return A string in the form DD/MM/YYYY."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return String.format(\"%02d/%02d/%d\", day, monthNum, year);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 84
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private Time time;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates Deadline (also a Task)."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param num Number in the list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param task String indicates description of task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param date Date at which deadline occurs."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param time Time at which deadline occurs."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param type String indicates task type, in this case \"D\"."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param done boolean indicates whether the task is done."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    Deadline(int num, String task, Date date, Time time, String type, boolean done) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        super(num, task, type, done);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates Deadline (also a Task)."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Done status is set as not done by default."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param num Number in the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param task String indicates description of task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param date Date at which deadline occurs."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param time Time at which deadline occurs."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param type String indicates task type, in this case \"D\"."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    Deadline(int num, String task, Date date, Time time, String type) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        super(num, task, type);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Formats the deadline for printing."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return String in the form for printing"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return String.format(\"[D][%s] %s (by: %s %s)\", done ? \"✓\" : \"✗\",task, date, time);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Formats the deadline for writing in the text file."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return String in the form writing in text file."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String fileFormat() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return String.format(\"D | %s | %s | %s %s\", done ? \"1\" : \"0\", task, date, time);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 55
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "abstract class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    Formatter formatter \u003d new Formatter();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    String message \u003d \"☹ OOPS!!! \";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    String taskType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates Duke Exception for exceptions in programs."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    DukeException() { }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates DukeException that are related to tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param taskType String taken in for error printing purposes."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    DukeException(String taskType) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates String for error message."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return error message."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    abstract String errorMessage();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Prints formatted error message."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    void printError() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        formatter.printFormat(errorMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 33
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    Date date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    Time time;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates Events (also a Task)."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param num Number in the list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param task String indicates description of task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param date Date at which deadline occurs."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param time Time at which deadline occurs."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param type String indicates task type, in this case \"E\"."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param done boolean indicates whether the task is done."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    Event(int num, String task, Date date, Time time, String type, boolean done) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        super(num, task, type, done);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates Events (also a Task)."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Done status is set as not done by default."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param num Number in the list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param task String indicates description of task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param date Date at which deadline occurs."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param time Time at which deadline occurs."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param type String indicates task type, in this case \"E\"."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    Event(int num, String task, Date date, Time time, String type) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        super(num, task, type);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Formats the event for printing."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return String in the form for printing"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return String.format(\"[E][%s] %s (at: %s %s)\", done ? \"✓\" : \"✗\",task, date, time);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Formats task to be written in given file."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return formatted string for writing in file."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String fileFormat() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return String.format(\"E | %s | %s | %s %s\", done ? \"1\" : \"0\", task, date, time);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 55
    }
  },
  {
    "path": "src/main/java/duke/Formatter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": "public class Formatter {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates new Formatter used to format printing."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "   Formatter() {}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Adds 4 spaces for indentation for printing."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param s String to be printed."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return String that has additional indentation."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private String format(String s) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return \"     \" + s;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Prints line for formatting."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private void printLine() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Prints strings in their respective lines with format."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param s String with line breaks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    void printFormat(String s) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String[] lines \u003d s.split(\"\\n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        for (String line: lines) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            System.out.println(format(line));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Prints strings in their respective lines with format."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param strings variable number of strings to be printed line by line."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    void printFormat(String...strings) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        for (String string: strings) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            System.out.println(format(string));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Prints strings in list form for the list command."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param strings list of Strings to be printed in the stipulated list format."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private void printFormat(List\u003cString\u003e strings) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        for (String string: strings) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            if (string !\u003d null) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                System.out.println(format(String.format(\"%d. %s\", count, string)));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Prints strings in their respective lines with format."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param list list of Strings to be printed line by line."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    void printFormat(String s, List\u003cString\u003e list) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        System.out.println(format(s));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        printFormat(list);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 77
    }
  },
  {
    "path": "src/main/java/duke/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private String message \u003d \"☹ OOPS!!! \";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates InvalidCommandException when commands that are not understood by program are given."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public InvalidCommandException() {}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates String for error message."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return error message."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    String errorMessage() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.message +\u003d \"I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return this.message;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 21
    }
  },
  {
    "path": "src/main/java/duke/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "public class InvalidInputException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private String message \u003d \"☹ OOPS!!! \";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates String for error message."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return error message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String errorMessage() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        message +\u003d \"I\u0027m sorry, but I don\u0027t know what your input means :-(\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 16
    }
  },
  {
    "path": "src/main/java/duke/InvalidItemException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "public class InvalidItemException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private String message \u003d \"☹ OOPS!!! \";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates InvalidItemException when an invalid list item is given."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    InvalidItemException() {}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates String for error message."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return error message."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String errorMessage() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        message +\u003d \"This item does not exist on the list\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 22
    }
  },
  {
    "path": "src/main/java/duke/MessageGenerator.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": "public class MessageGenerator {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    Formatter formatter \u003d new Formatter();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Generates messages for different user input."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public MessageGenerator() {}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return String for header of task list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private String listTasks() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return \"Here are the tasks in your list: \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return String for header of removing task action."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private String removeTask() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return \"Noted. I\u0027ve removed this task: \";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return String for header of adding task action."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private String addTask() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return \"Got it. I\u0027ve added this task: \";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return String for header of marking task as done."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private String markDone() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return String to indicate number of tasks in list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private String numTask(int n) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return \"Now you have \" + n + \" task(s) in the list.\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return String for header of finding matching tasks."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private String matchingTasks() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return String to greet user."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private String greeting() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return \"Hello I\u0027m Duke\\n\" + \"What can I do for you?\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return String when program is exited."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private String byeString() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Formats task with proper indentations."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return String for formatted task."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private String formatTask(Task task) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        if (task \u003d\u003d null) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            return \"  \" + task.toString();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Prints the program response when a task is removed."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param task Task that is to be removed."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param n Number tagged to task."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    void printRemove(Task task, int n) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        formatter.printFormat(removeTask(), formatTask(task), numTask(n));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Prints the program when tasks are added."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param task Task that is to be added."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param n Number tagged to task."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    void printAdd(Task task, int n) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        formatter.printFormat(addTask(), formatTask(task), numTask(n));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Prints the program response when a task is set as done."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param task Task that is set as done."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    void printDone(Task task) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        formatter.printFormat(markDone(), formatTask(task));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Prints the program response when user asks for list of tasks."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param list List of tasks in their string form."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    void printList(List\u003cString\u003e list) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        formatter.printFormat(listTasks(), list);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Prints matching tasks in a task list."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param list list of tasks in their string form."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    void printMatchingList(List\u003cString\u003e list) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        formatter.printFormat(matchingTasks(), list);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Prints welcome message when program begins."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        formatter.printFormat(greeting());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Prints goodbye message when program terminates."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public void bye() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        formatter.printFormat(byeString());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 138
    }
  },
  {
    "path": "src/main/java/duke/MissingInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "public class MissingInputException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private String message \u003d \"☹ OOPS!!! \";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates MissingInputException when input is not complete for program to process."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param taskType String to be used for printing error message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    MissingInputException(String taskType) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        super(taskType);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates String for error message."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return error message."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String errorMessage() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        message +\u003d String.format(\"The description of a %s cannot be empty.\", taskType);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 25
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private String desc;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private Task task \u003d null;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private static int count \u003d 0;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Constructor for a Parser object used to process input and strings."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    Parser(){};"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Takes in line of information to process into commands for program to read."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param line task description or information needed for processing."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return command used for updating tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @throws InvalidCommandException when program gives an invalid command type."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    Command process(String line) throws InvalidCommandException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String[] commands \u003d line.split(\" \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String first \u003d commands[0];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            switch (first) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                return new Command(CommandType.EXIT);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                return new Command(CommandType.PRINTLIST);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                return new Command(CommandType.ADD, line);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                return new Command(CommandType.DONE, line);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                return new Command(CommandType.DELETE, line);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                return new Command(CommandType.FIND, line);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                throw new InvalidCommandException();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            e.printError();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return new Command();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Processes String to retrieve keyword for search."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param command command for finding matching tasks."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return keyword for matching tasks."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    String getKeyword(Command command) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String line \u003d command.getDescription();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String[] description \u003d line.split(\" \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return description[1];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates task from given Command."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param command command for task to be created."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return task created from the command."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @throws MissingInputException when command\u0027s description is incomplete."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    Task createTask(Command command) throws MissingInputException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String line \u003d command.getDescription();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String[] description \u003d line.split(\" \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String eventType \u003d description[0];"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            if (description.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                throw new MissingInputException(eventType);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        } catch (MissingInputException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            e.printError();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        count++;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return createNewTask(count, eventType, description);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Processes command description for task number of related task."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param command command for task to be marked as done/deleted."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return task number"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @throws MissingInputException when command\u0027s description is incomplete."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    int getTaskNo(Command command) throws MissingInputException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String line \u003d command.getDescription();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String[] description \u003d line.split(\" \");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        String eventType \u003d description[0];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            if (description.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                throw new MissingInputException(eventType);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        } catch (MissingInputException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            e.printError();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return Integer.parseInt(description[1]);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates task by processing information given for task."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Intermediate operation for Parser\u0027s createTask method."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param taskNo Task\u0027s number in the list."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param taskType tasks of type Todo/Deadline/Event."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param arr String array that contains task description that has been processed."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return Task created from given inputs."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    Task createNewTask(int taskNo, String taskType, String[] arr) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        boolean firstInDescription \u003d true;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        Date date \u003d null;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        Time time \u003d null;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        for (int i \u003d 1; i \u003c arr.length; i++) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            if (firstInDescription) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                desc +\u003d arr[i];"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                firstInDescription \u003d false;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            } else if (arr[i].startsWith(\"/\")) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                desc +\u003d \" \" + arr[i];"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            task \u003d new Todo(taskNo, desc, \"T\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            date \u003d Date.processDate(arr[arr.length-2]);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            time \u003d Time.processTime(arr[arr.length-1]);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            task \u003d new Event(taskNo, desc, date, time, \"E\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            date \u003d Date.processDate(arr[arr.length-2]);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            time \u003d Time.processTime(arr[arr.length-1]);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            task \u003d new Deadline(taskNo, desc, date, time, \"D\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 141
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": "class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    List\u003cString\u003e inputs \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private File f;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Loads and writes into given file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param filePath String that indicates path to file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    Storage (String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        f \u003d new File(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            if (!f.exists()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                throw new FileNotFoundException();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            System.out.println(\"File not found.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Loads tasks from file into the program."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return TaskList that will be used in the program for further modifications by user."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    TaskList loadTasks() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                String task \u003d sc.nextLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                String[] details \u003d task.split(\" \\\\| \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                int num \u003d Integer.parseInt(details[1]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                boolean done \u003d false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                done \u003d (num \u003d\u003d 1);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                Date date \u003d null;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                Time time \u003d null;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    switch (details[0]) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                        tasks.loadTask(new Todo(counter, details[2], \"T\", done));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                        date \u003d Date.processDate(details[3].split(\" \")[0]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                        time \u003d Time.processTime(details[3].split(\" \")[1]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                        tasks.loadTask(new Deadline(counter, details[2], date, time, \"D\", done));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                        date \u003d Date.processDate(details[3].split(\" \")[0]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                        time \u003d Time.processTime(details[3].split(\" \")[1]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                        tasks.loadTask(new Event(counter, details[2], date, time, \"E\", done));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                        throw new InvalidInputException();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                } catch (InvalidInputException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    e.printError();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            System.out.println(\"file not detected\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Writes formatted task list into file."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param tasks Task list that has been processed and updated."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @throws IOException when there are input problems."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    void updateTaskList(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            for (Task task : tasks.taskList) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                if (task !\u003d null) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    fw.write( task.fileFormat() + System.lineSeparator());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            System.out.println(\"Something went wrong\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 98
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    boolean done;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private int no;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    String task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates Task with an item number, task description, task type and done status."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param num Task number in the list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param task Task description"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param type Task type (can be Todo, Event or Deadline)."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param done Indicates whether task is done."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    Task(int num, String task, String type, boolean done) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.no \u003d num;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates Task with an item number, task description, task type and done status."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Done status is set as not done by default."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param num Task number in the list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param task Task description"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param type Task type (can be Todo, Event or Deadline)."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    Task(int num, String task, String type) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.no \u003d num;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Sets task as done."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    void setDone() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return task description"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    String getTaskInfo() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return this.task;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Formats task to be written in given file."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return formatted string for writing in file."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public abstract String fileFormat();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 58
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": "class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    MessageGenerator msgGenerator \u003d new MessageGenerator();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates task list and adds a placeholder value for easier tracking."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        //placeholder value in task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        taskList.add(null);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return Number of tasks in list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private int noTasks() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return taskList.size() - 1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Adds task to task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Prints message when task is added via user input."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param task task to be added."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    void addTask(Task task) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        msgGenerator.printAdd(task, noTasks());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Adds task to task List when task is loaded from the file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param task task loaded from the file that is to be added."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    void loadTask(Task task) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Removes task of given identification number from list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Prints message when task is removed."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param taskNo identification number of task in list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private void removeTask(int taskNo) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        msgGenerator.printRemove(taskList.get(taskNo), noTasks()-1);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        taskList.remove(taskNo);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Formats task list into list of strings for printing/writing."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return List of Strings."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private List\u003cString\u003e listify(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        List\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        for (Task task: tasks) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            if (task !\u003d null) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                list.add(task.toString());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return task list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    List\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Prints list of tasks using the message generator."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    void printList() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        msgGenerator.printList(listify(this.taskList));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Checks if given task number exists in task list."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param taskNo identification number for task."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return whether or not task number exists."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private boolean invalidTaskNo(int taskNo) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return taskNo \u003e\u003d taskList.size();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param taskNo identification number for task."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    void setDone(int taskNo) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            if (invalidTaskNo(taskNo)) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                throw new InvalidItemException();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            taskList.get(taskNo).setDone();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            msgGenerator.printDone(taskList.get(taskNo));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            e.printError();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Deletes task with given identification number."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param taskNo identification number for task."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    void deleteTask(int taskNo) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            if (invalidTaskNo(taskNo)) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                throw new InvalidItemException();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            removeTask(taskNo);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            e.printError();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Searches and prints matching tasks in task list."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param keyword word that task must contain to be printed."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    void findMatchingTasks(String keyword) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        for (Task task: taskList) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            if (task !\u003d null \u0026\u0026 task.getTaskInfo().contains(keyword)) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                matchingTasks.add(task);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        msgGenerator.printMatchingList(listify(matchingTasks));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 136
    }
  },
  {
    "path": "src/main/java/duke/Time.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "public class Time {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private Period period;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private int hour;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private int minutes;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private int time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Documents whether given time is am or pm."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public enum Period {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        AM, PM;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates time object with hour, minute and period components."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param time in military format."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private Time(int time) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        hour \u003d time / 100;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        minutes \u003d time % 100;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        if (time \u003c 1200) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            period \u003d Period.AM;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            period \u003d Period.PM;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Processes a given String and converts String to a time object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param timeString String in form HHMM."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return Time object."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    static Time processTime(String timeString) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return new Time(Integer.parseInt(timeString));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Formats Time object."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return A string in the form HHMM."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return time + \"\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 49
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates Todo (also a Task)."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param num Number in the list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param task String indicates description of task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param type String indicates task type, in this case \"T\"."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param done boolean indicates whether the task is done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    Todo(int num, String task, String type, boolean done) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        super(num, task, type, done);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Creates Todo (also a Task)."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param num Number in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param task String indicates description of task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param type String indicates task type, in this case \"T\"."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public Todo(int num, String task, String type) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        super(num, task, type);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Formats the todo for printing."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return String in the form for printing"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return String.format(\"[T][%s] %s\", done ? \"✓\" : \"✗\",task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Formats task to be written in given file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return formatted string for writing in file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public String fileFormat() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return String.format(\"T | %s | %s\", done ? \"1\" : \"0\", task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 44
    }
  },
  {
    "path": "src/main/java/duke/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private boolean isExit \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Processes commands from the user to interact with given file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param fileInput String that indicates file path."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public UI(String fileInput) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        storage \u003d new Storage(fileInput);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Exits program in Duke by changing boolean."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @return boolean to indicate whether program should be exited."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Processes file in storage and adds tasks to program."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public void processFile() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        for (Task task: storage.loadTasks().getTaskList()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            tasks.loadTask(task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Processes input from the Command Line made by user."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * This makes changes to the program\u0027s task list and file."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    public void processInput() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                processCommand(parser.process(line));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            e.printError();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Intermediate method to process command."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * This updates and writes the file."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * @param command command created from parser."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    private void processCommand(Command command) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                switch (command.type) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                case EXIT:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    exit();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                case PRINTLIST:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    tasks.printList();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                case ADD:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    tasks.addTask(parser.createTask(command));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                case DELETE:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    tasks.deleteTask(parser.getTaskNo(command));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                case DONE:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    tasks.setDone(parser.getTaskNo(command));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                case FIND:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    tasks.findMatchingTasks(parser.getKeyword(command));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                    throw new InvalidCommandException();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            } catch (InvalidCommandException|MissingInputException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                e.printError();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                storage.updateTaskList(tasks);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "liawsy"
        },
        "content": "                System.out.println(\"Something went wrong!\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "liawsy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      }
    ],
    "authorContributionMap": {
      "liawsy": 99
    }
  },
  {
    "path": "test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import duke.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import duke.Todo;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liawsy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liawsy"
        },
        "content": "class DukeTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Tests if a Date object returns the correct string format for printing."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    void testDate() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        Date date \u003d new Date(15, 7, 2019);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        assertEquals(\"15/07/2019\", date.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liawsy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liawsy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     * Tests if a ToDo object returns the correct string format for printing."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liawsy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liawsy"
        },
        "content": "   @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liawsy"
        },
        "content": "   void testTodoFormat() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        Todo todo \u003d new Todo(1, \"read book\", \"T\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liawsy"
        },
        "content": "        assertEquals(\"[T][✗] read book\", todo.toString());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liawsy"
        },
        "content": "   }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liawsy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liawsy": 27
    }
  }
]
