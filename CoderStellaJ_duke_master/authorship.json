[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "test {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CoderStellaJ": 22,
      "-": 15
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "D | 0 | return book | 2/12/2019 1800"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "E | 1 | buy book | 22/12/2019 1800"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "D | 0 | do CS2103T | 25/8/2019 2100"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "E | 0 | finish tutorials | 26/8/2019 0900"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "T | 1 | add features"
      }
    ],
    "authorContributionMap": {
      "CoderStellaJ": 5
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import ui.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * constructor for Duke."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @param filePath which specifies the path for the .txt file"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * Instantiate a Duke object and run it."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @param args standard main args"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        new Duke(\"./data/tasks.txt\").run();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * Running process of Duke."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CoderStellaJ": 53,
      "-": 5
    }
  },
  {
    "path": "src/main/java/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * Constructor of AddCommand which executes add functionality."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @param task the new task which needs to be added to the task list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * Tell whether this is an exit command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * Add the new task into task list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @param taskList The list of tasks maintained in Duke"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @param ui       Ui module"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @param storage  in charge of loading and saving the tasks"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @throws DukeException when the command is invalid"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        if (task \u003d\u003d null) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            throw new DukeException(\"No task to be added to the list\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        taskList.addTask(task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        sb.append(\"\\n  \" + task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        sb.append(\"\\nNow you have \" + taskList.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        ui.print(sb.toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CoderStellaJ": 48
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * Tell whether the command is exit command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @return true when it is."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * Execute the command according to the command type."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @param taskList The list of tasks maintained in Duke"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @param ui       Ui module"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @param storage  in charge of loading and saving the tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @throws DukeException when the command is invalid"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CoderStellaJ": 26
    }
  },
  {
    "path": "src/main/java/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    private int number;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * Constructor which creates a delete command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @param number the task number"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public DeleteCommand(int number) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        this.number \u003d number;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * Tell this is not an exit command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * Delete the task in the list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @param taskList list of tasks"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @param ui       interact with user input"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @param storage  load and save tasks"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @throws DukeException when command is invalid"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        if (number \u003e taskList.getSize()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            throw new DukeException(\"It\u0027s an invalid task\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        Task deletedTask \u003d taskList.deleteTask(number);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        sb.append(\"\\n\" + deletedTask);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        ui.print(sb.toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CoderStellaJ": 47
    }
  },
  {
    "path": "src/main/java/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    private int number;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public DoneCommand(int number) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        this.number \u003d number;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * Execute done command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @param taskList The list of tasks maintained in Duke"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @param ui       Ui module"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @param storage  in charge of loading and saving the tasks"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @throws DukeException when the task doesn\u0027t exist"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        if (number \u003e taskList.getSize()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            throw new DukeException(\"It\u0027s an invalid task\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        Task doneTask \u003d taskList.markDone(number);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        sb.append(\"\\n\" + doneTask);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        ui.print(sb.toString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CoderStellaJ": 37
    }
  },
  {
    "path": "src/main/java/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * Execute exit command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @param taskList The list of tasks maintained in Duke"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @param ui       Ui module"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @param storage  in charge of loading and saving the tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @throws DukeException when execution encounters problem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        storage.save(taskList.getList());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        ui.print(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CoderStellaJ": 25
    }
  },
  {
    "path": "src/main/java/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    private String str;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public FindCommand(String str) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        this.str \u003d str;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * Tell whether the command is exit command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @return true when it is."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * Execute the command according to the command type."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @param taskList The list of tasks maintained in Duke"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @param ui       Ui module"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @param storage  in charge of loading and saving the tasks"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @throws DukeException when the command is invalid"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        ArrayList\u003cTask\u003e findList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        for (Task task : taskList.getList()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            if (task.getDescription().contains(str)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                findList.add(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        for (int i \u003d 0; i \u003c findList.size(); i++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            sb.append(\"\\n\" + (i + 1) + \".\" + taskList.getTask(i + 1));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        ui.print(sb.toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CoderStellaJ": 48
    }
  },
  {
    "path": "src/main/java/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * List out all the tasks currently in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @param taskList The list of tasks maintained in Duke"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @param ui       Ui module"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @param storage  in charge of loading and saving the tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @throws DukeException when execution encounters problem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            sb.append(\"\\n\" + (i + 1) + \".\" + taskList.getTask(i + 1));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        ui.print(sb.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CoderStellaJ": 28
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    String message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        message \u003d \"\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        return \"\\tOOPS!!! \" + this.message;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CoderStellaJ": 18
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import tasks.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * load the history of Duke."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @return return an arraylist of tasks"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @throws DukeException when loading encounters exception"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                String[] splits \u003d line.split(\"[|]\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                int completed \u003d Integer.parseInt(splits[1].substring(1, 2));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                Task newTask;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                switch (splits[0]) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                case \"T \":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                    newTask \u003d new Todo(splits[2].substring(1));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                case \"E \":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                    newTask \u003d new Event(splits[2].substring(1, splits[2].length() - 1), splits[3].substring(1));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                case \"D \":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                    newTask \u003d new Deadline(splits[2].substring(1, splits[2].length() - 1), splits[3].substring(1));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                    newTask \u003d new Task(\"\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                if (completed \u003d\u003d 1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                    newTask.changeStatus();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                list.add(newTask);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * save the tasks into a .txt file."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @param list a list of tasks"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e list) throws DukeException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            File myFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            if (!myFile.getParentFile().exists()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                myFile.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            //FileWriter: the file\u0027s parent directory must exist"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            String textToAdd \u003d \"\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            for (Task task : list) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                if (!textToAdd.equals(\"\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                    textToAdd \u003d textToAdd.concat(\"\\n\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                textToAdd \u003d textToAdd.concat(task.writer());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            fw.write(textToAdd);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            throw new DukeException(\"Tasks are not able to be saved into .txt file.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CoderStellaJ": 89
    }
  },
  {
    "path": "src/main/java/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    protected String year;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    protected String month;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    protected String day;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * constructor of Deadline task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @param by          time"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        String[] splits \u003d by.split(\"[/ ]\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        day \u003d splits[0];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        month \u003d splits[1];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        year \u003d splits[2];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        time \u003d splits[3];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public String writer() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        String text \u003d \"D | \";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        if (getStatus() \u003d\u003d false) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            text \u003d text.concat(\"0 | \" + getDescription() + \" | \" + getBy());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            text \u003d text.concat(\"1 | \" + getDescription() + \" | \" + getBy());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        return text;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CoderStellaJ": 47
    }
  },
  {
    "path": "src/main/java/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    protected String year;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    protected String month;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    protected String day;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * create an event task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @param at          time information"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        String[] splits \u003d at.split(\"[/ ]\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        day \u003d splits[0];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        month \u003d splits[1];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        year \u003d splits[2];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        time \u003d splits[3];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public String writer() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        String text \u003d \"E | \";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        if (getStatus() \u003d\u003d false) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            text \u003d text.concat(\"0 | \" + getDescription() + \" | \" + getAt());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            text \u003d text.concat(\"1 | \" + getDescription() + \" | \" + getAt());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        return text;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CoderStellaJ": 47
    }
  },
  {
    "path": "src/main/java/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * constructor of Task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        return (isDone ? \"+\" : \"-\"); //return tick or X symbols"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public void changeStatus() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public String writer() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        return \"This is a task\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CoderStellaJ": 41
    }
  },
  {
    "path": "src/main/java/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    protected ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        list \u003d taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public void addTask(Task newTask) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        list.add(newTask);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * delete a task from the list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @param number task number"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @return return the deleted task"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public Task deleteTask(int number) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        Task deletedTask \u003d list.get(number - 1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        list.remove(deletedTask);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        return deletedTask;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public Task markDone(int number) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        list.get(number - 1).changeStatus();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        return list.get(number - 1);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public Task getTask(int number) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        return list.get(number - 1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CoderStellaJ": 50
    }
  },
  {
    "path": "src/main/java/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public String writer() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        String text \u003d \"T | \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        if (getStatus() \u003d\u003d false) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            text \u003d text.concat(\"0 | \" + getDescription());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            text \u003d text.concat(\"1 | \" + getDescription());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        return text;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CoderStellaJ": 26
    }
  },
  {
    "path": "src/main/java/ui/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import command.DeleteCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import command.DoneCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import command.ExitCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import command.FindCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import command.ListCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import command.AddCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import tasks.Todo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * parse the command string and create according type of command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @param fullCommand string of command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @return return a new command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @throws DukeException when command is invalid"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        String[] parts \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        int number;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        String date;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        if (fullCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        } else if (parts.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            throw new DukeException(\"Your input cannot be empty.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        switch (parts[0]) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            if (parts.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                throw new DukeException(\"The description of a done cannot be empty.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            number \u003d Integer.parseInt(parts[1]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            return new DoneCommand(number);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            if (parts.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                throw new DukeException(\"The description of a delete cannot be empty.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            number \u003d Integer.parseInt(parts[1]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            return new DeleteCommand(number);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            if (parts.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            description \u003d fullCommand.substring(\"todo\".length() + 1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            Task todoTask \u003d new Todo(description);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            return new AddCommand(todoTask);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            if (parts.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            index \u003d fullCommand.indexOf(\"/\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            if (index \u003d\u003d -1 || index + 4 \u003e\u003d fullCommand.length()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                throw new DukeException(\"Please provide a time for your deadline task\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            if (\"deadline\".length() + 1 \u003e\u003d index - 1) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                throw new DukeException(\"Please provide a proper name for your deadline task\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            description \u003d fullCommand.substring(\"deadline\".length() + 1, index - 1);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            date \u003d fullCommand.substring(index + 4);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            Task deadlineTask \u003d new Deadline(description, date);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            return new AddCommand(deadlineTask);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            if (parts.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                throw new DukeException(\"The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            index \u003d fullCommand.indexOf(\"/\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            if (index \u003d\u003d -1 || index + 4 \u003e\u003d fullCommand.length()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                throw new DukeException(\"Please provide a time for your event task\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            if (\"event\".length() + 1 \u003e\u003d index - 1) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                throw new DukeException(\"Please provide a proper name for your event task\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            description \u003d fullCommand.substring(\"event\".length() + 1, index - 1);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            date \u003d fullCommand.substring(index + 4);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            Task eventTask \u003d new Event(description, date);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            return new AddCommand(eventTask);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            if (parts.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                throw new DukeException(\"Please provide the string you want to search in the tasks\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            index \u003d fullCommand.indexOf(\" \");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            String find \u003d fullCommand.substring(index + 1);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            return new FindCommand(find);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CoderStellaJ": 99
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * read the user input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @return return string"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        if (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            return sc.nextLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * print out greeting information."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        print(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * show errors encountered during execution."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @param message error message"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        print(message);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        print(\"This is your first time using Duke, no history loaded.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * print out information in certain format."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     * @param str message to be printed"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public void print(String str) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        String[] lines \u003d str.split(\"\\n\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        for (String line : lines) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            sb.append(\"\\n     \" + line);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        System.out.println(sb.toString());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CoderStellaJ": 71
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CoderStellaJ": 11
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": " ____        _"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "|  _ \\ _   _| | _____"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "       [T][-] borrow book"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     1.[T][-] borrow book"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "       [D][-] return book (by: Sunday)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "       [E][-] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     [D][+] return book (by: Sunday)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     [D][+] return book (by: Sunday)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "CoderStellaJ": 40
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "CoderStellaJ": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Task.java ..\\src\\main\\java\\Todo.java ..\\src\\main\\java\\Event.java ..\\src\\main\\java\\Deadline.java ..\\src\\main\\java\\DukeException.java ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "CoderStellaJ": 21
    }
  }
]
