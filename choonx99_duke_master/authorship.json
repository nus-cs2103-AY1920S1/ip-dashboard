[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choonx99"
        },
        "content": "[T][✓] read"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choonx99"
        },
        "content": "[D][✘] walk to park (by: 21st January )"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choonx99"
        },
        "content": "[D][✓] walk to park (by: 23rd November 2019, 11:59pm)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choonx99"
        },
        "content": "[D][✘] play basketball alone (by: 12th March 2019, 04:13am)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choonx99"
        },
        "content": "[E][✘] swim away (at: 23rd November 2019, 02:41am-2:51pm)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choonx99"
        },
        "content": "[T][✓] run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choonx99"
        },
        "content": "[D][✘] run park (by: 12th December 2019, 5:04pm)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choonx99"
        },
        "content": "[E][✘] run park (at: 12th December 2019, 12:31pm)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choonx99"
        },
        "content": "[E][✘] run park (at: 31st December 2019, 12:31pm)"
      }
    ],
    "authorContributionMap": {
      "choonx99": 9
    }
  },
  {
    "path": "src/main/java/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choonx99"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choonx99"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public DateTime(String date, String time) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public DateTime(String dateTime) throws InvalidInputException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        String[] splitDateAndTime \u003d dateTime.split(\" \");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        String[] splitDate \u003d splitDateAndTime[0].split(\"/\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        String day \u003d splitDate[0];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        String month \u003d splitDate[1];"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        String year \u003d splitDate[2];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        if (day.equals(\"1\") || day.equals(\"21\") || day.equals(\"31\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            day \u003d day + \"st\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        } else if (day.equals(\"2\") || day.equals(\"22\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            day \u003d day + \"nd\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        } else if (day.equals(\"3\") || day.equals(\"23\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            day \u003d day + \"rd\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            day \u003d day + \"th\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        switch (month) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        case \"1\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            month \u003d \"January\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        case \"2\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            month \u003d \"February\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        case \"3\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            month \u003d \"March\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        case \"4\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            month \u003d \"April\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        case \"5\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            month \u003d \"May\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        case \"6\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            month \u003d \"June\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        case \"7\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            month \u003d \"July\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        case \"8\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            month \u003d \"August\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        case \"9\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            month \u003d \"September\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        case \"10\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            month \u003d \"October\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        case \"11\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            month \u003d \"November\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        case \"12\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            month \u003d \"December\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            throw new InvalidInputException(\"☹ OOPS!!! The Date/Time field is invalid\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        this.date \u003d day + \" \" + month + \" \" + year;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        if (splitDateAndTime.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            time \u003d null;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            String[] timings \u003d splitDateAndTime[1].split(\"-\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            if (timings.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                String hour \u003d splitDateAndTime[1].substring(0, 2);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                String mins \u003d splitDateAndTime[1].substring(2);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                String period \u003d \"\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                if (hour.equals(\"00\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    hour \u003d \"12\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    period \u003d \"am\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                } else if (hour.equals(\"12\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    period \u003d \"pm\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    if (Integer.parseInt(hour) \u003e 12) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                        period \u003d \"pm\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                        hour \u003d (Integer.parseInt(hour) % 12) + \"\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                        period \u003d \"am\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                this.time \u003d hour + \":\" + mins + period;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            } else if (timings.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                String startHour \u003d timings[0].substring(0, 2);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                String startMins \u003d timings[0].substring(2);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                String endHour \u003d timings[1].substring(0, 2);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                String endMins \u003d timings[1].substring(2);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                String startPeriod \u003d \"\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                String endPeriod \u003d \"\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                if (startHour.equals(\"00\")) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    startHour \u003d \"12\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    startPeriod \u003d \"am\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                } else if (startHour.equals(\"12\")) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    startPeriod \u003d \"pm\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    if (Integer.parseInt(startHour) \u003e 12) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                        startPeriod \u003d \"pm\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                        startHour \u003d (Integer.parseInt(startHour) % 12) + \"\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                        startPeriod \u003d \"am\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                if (endHour.equals(\"00\")) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    endHour \u003d \"12\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    endPeriod \u003d \"am\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                } else if (endHour.equals(\"12\")) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    endPeriod \u003d \"pm\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    if (Integer.parseInt(endHour) \u003e 12) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                        endPeriod \u003d \"pm\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                        endHour \u003d (Integer.parseInt(endHour) % 12) + \"\";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                        endPeriod \u003d \"am\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                this.time \u003d startHour + \":\" + startMins + startPeriod + \"-\" + endHour + \":\" + endMins + endPeriod;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        if (time \u003d\u003d null || time.equals(\"\")) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            return date;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            return date + \", \" + time;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "choonx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choonx99": 143
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choonx99"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choonx99"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    protected DateTime by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public Deadline(String description, DateTime by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choonx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choonx99": 15
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choonx99"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        ui.readInput();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        ui.goodbye();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choonx99": 24,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choonx99"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choonx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choonx99": 5
    }
  },
  {
    "path": "src/main/java/EmptyFieldException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choonx99"
        },
        "content": "public class EmptyFieldException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public EmptyFieldException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choonx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choonx99": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choonx99"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    protected DateTime at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public Event(String description, DateTime at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choonx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choonx99": 13
    }
  },
  {
    "path": "src/main/java/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choonx99"
        },
        "content": "public class InvalidInputException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public InvalidInputException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choonx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choonx99": 5
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choonx99"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choonx99"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choonx99"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public static void handleInput(String type, String userInput) throws EmptyFieldException, InvalidInputException, ParseException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        if (type.equals(\"done\")) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            if (userInput.substring(4).isBlank()) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                throw new EmptyFieldException(\"☹ OOPS!!! The task number cannot be empty.\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            int taskNum \u003d Integer.parseInt(userInput.substring(5));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            if (taskNum \u003e TaskList.getTaskListSize()) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                throw new InvalidInputException(\"☹ OOPS!!! You do not have that many tasks.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            } else if (taskNum \u003c\u003d 0) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                throw new InvalidInputException(\"☹ OOPS!!! Your task number is invalid.\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        } else if (type.equals(\"delete\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            if (userInput.substring(6).isBlank()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                throw new EmptyFieldException(\"☹ OOPS!!! The task number cannot be empty.\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            int taskNum \u003d Integer.parseInt(userInput.substring(7));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            if (taskNum \u003e TaskList.getTaskListSize()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                throw new InvalidInputException(\"☹ OOPS!!! You do not have that many tasks.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            } else if (taskNum \u003c\u003d 0) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                throw new InvalidInputException(\"☹ OOPS!!! Your task number is invalid.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        } else if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            if (userInput.substring(4).isBlank()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                throw new EmptyFieldException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        } else if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            if (userInput.substring(8).isBlank()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                throw new EmptyFieldException(\"☹ OOPS!!! The new deadline cannot be empty.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            } else if (!userInput.contains(\"/by\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                throw new EmptyFieldException(\"☹ OOPS!!! The deadline of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            String description \u003d userInput.substring(9, userInput.indexOf(\u0027/\u0027));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            if (description.isBlank()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                throw new EmptyFieldException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        } else if (type.equals(\"by\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                throw new EmptyFieldException(\"☹ OOPS!!! The deadline of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            String formatString \u003d \"dd/mm/yyyy\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            SimpleDateFormat format \u003d new SimpleDateFormat(formatString);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            format.setLenient(false);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            format.parse(userInput.split(\" \")[0]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        } else if (type.equals(\"event\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            if (userInput.substring(5).isBlank()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                throw new EmptyFieldException(\"☹ OOPS!!! The new event cannot be empty.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            } else if (!userInput.contains(\"/at\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                throw new EmptyFieldException(\"☹ OOPS!!! The \u0027at\u0027 field of an event cannot be empty.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            String description \u003d userInput.substring(6, userInput.indexOf(\u0027/\u0027));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            if (description.isBlank()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                throw new EmptyFieldException(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        } else if (type.equals(\"at\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                throw new EmptyFieldException(\"☹ OOPS!!! The \u0027at\u0027 field of an event cannot be empty.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            String formatString \u003d \"dd/mm/yyyy\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            SimpleDateFormat format \u003d new SimpleDateFormat(formatString);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            format.setLenient(false);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            format.parse(userInput.split(\" \")[0]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        } else if (type.isBlank() \u0026\u0026 userInput.isBlank()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            throw new EmptyFieldException(\"☹ OOPS!!! I\u0027m sorry, but you have to input something\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            throw new InvalidInputException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "choonx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choonx99": 72
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choonx99"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choonx99"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choonx99"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choonx99"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choonx99"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choonx99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choonx99"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    private static String filePath;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws IOException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        FileReader fReader \u003d new FileReader(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        BufferedReader bReader \u003d new BufferedReader(fReader);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        String line \u003d null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        while((line \u003d bReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            char taskType \u003d line.charAt(1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            char isDone \u003d line.charAt(4);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            if (taskType \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                String description \u003d line.substring(7);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                Task todo \u003d new ToDo(description);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                if (isDone \u003d\u003d \u0027✘\u0027) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    taskList.add(todo);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    todo.markAsDone();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    taskList.add(todo);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            } else if (taskType \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                String date \u003d \"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                String time \u003d \"\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                String description \u003d line.substring(7, line.indexOf(\u0027(\u0027) - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                String by \u003d line.substring(line.indexOf(\u0027:\u0027) + 2, line.indexOf(\u0027)\u0027)).trim();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                String[] dateTimeSplit \u003d by.split(\" \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                if (dateTimeSplit.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    date \u003d dateTimeSplit[0] + \" \" + dateTimeSplit[1] + \" \" + dateTimeSplit[2].substring(0, dateTimeSplit[2].length() - 1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    time \u003d \"\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                } else if (dateTimeSplit.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    date \u003d dateTimeSplit[0] + \" \" + dateTimeSplit[1] + \" \" + dateTimeSplit[2].substring(0, dateTimeSplit[2].length() - 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    time \u003d dateTimeSplit[3];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                Task deadline \u003d new Deadline(description, new DateTime(date, time));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                if (isDone \u003d\u003d \u0027✘\u0027) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    taskList.add(deadline);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    deadline.markAsDone();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    taskList.add(deadline);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            } else if (taskType \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                String date \u003d \"\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                String time \u003d \"\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                String description \u003d line.substring(7, line.indexOf(\u0027(\u0027) - 1);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                String at \u003d line.substring(line.indexOf(\u0027:\u0027) + 2, line.indexOf(\u0027)\u0027)).trim();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                String[] dateTimeSplit \u003d at.split(\" \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                if (dateTimeSplit.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    date \u003d dateTimeSplit[0] + \" \" + dateTimeSplit[1] + \" \" + dateTimeSplit[2].substring(0, dateTimeSplit[2].length() - 1);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    time \u003d \"\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                } else if (dateTimeSplit.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    date \u003d dateTimeSplit[0] + \" \" + dateTimeSplit[1] + \" \" + dateTimeSplit[2].substring(0, dateTimeSplit[2].length() - 1);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    time \u003d dateTimeSplit[3];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                Task event \u003d new Event(description, new DateTime(date, time));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                if (isDone \u003d\u003d \u0027✘\u0027) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    taskList.add(event);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    event.markAsDone();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    taskList.add(event);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        bReader.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public static void save() throws IOException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        FileWriter fWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        BufferedWriter bWriter \u003d new BufferedWriter(fWriter);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        for (Task task : TaskList.getCurrentTasks()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            bWriter.write(task + \"\\n\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        bWriter.close();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "choonx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choonx99": 89
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choonx99"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choonx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choonx99": 22
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choonx99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choonx99"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    private static ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        this.taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public static void addTask(Task task) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public static void delTask(int taskNum) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        taskList.remove(taskNum - 1);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public static int getTaskListSize() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public static Task getTaskAt(int taskNum) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        return taskList.get(taskNum - 1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public static ArrayList\u003cTask\u003e getCurrentTasks() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public static void printTasks() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        if (taskList.isEmpty()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            System.out.println(\"task list is empty\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            System.out.println(\"Here are the tasks in your list: \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                System.out.println((i + 1) + \".\" + taskList.get(i));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "choonx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choonx99": 43
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choonx99"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choonx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choonx99": 11
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choonx99"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choonx99"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choonx99"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choonx99"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can i do for you?\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public void goodbye() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public static void printTaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        TaskList.printTasks();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public static void addTaskToTaskList(Task task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        TaskList.addTask(task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        System.out.println(\"Now you have \" + TaskList.getTaskListSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public static void delTaskInTaskList(int taskNum) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        Task taskToRemove \u003d TaskList.getTaskAt(taskNum);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        TaskList.delTask(taskNum);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        System.out.println(taskToRemove);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        System.out.println(\"Now you have \" + TaskList.getTaskListSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public static void readInput() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        String userInput \u003d input.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        while (!userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            if (userInput.equals(\"list\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                printTaskList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                userInput \u003d input.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            String[] userInputSplit \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                Parser.handleInput(userInputSplit[0], userInput);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                userInput \u003d input.nextLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            } catch (ParseException ex) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                System.out.println(\"☹ OOPS!!! The Date/Time field is invalid\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                userInput \u003d input.nextLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            if (userInput.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                int taskNumber \u003d Integer.parseInt(userInput.substring(5));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                Task selectedTask \u003d TaskList.getTaskAt(taskNumber);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                selectedTask.markAsDone();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\" + selectedTask);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            } else if (userInput.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                int taskNumber \u003d Integer.parseInt(userInput.substring(7));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                delTaskInTaskList(taskNumber);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            } else if (userInput.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                String description \u003d userInput.substring(5);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                addTaskToTaskList(new ToDo(description));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            } else if (userInput.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                String description \u003d userInput.substring(9, userInput.indexOf(\u0027/\u0027) - 1);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                String by \u003d userInput.substring(13 + description.length()).trim();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    Parser.handleInput(\"by\", by);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    addTaskToTaskList(new Deadline(description, new DateTime(by)));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                } catch (DukeException ex) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    userInput \u003d input.nextLine();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                } catch (ParseException ex) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! The Date/Time field is invalid\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    userInput \u003d input.nextLine();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            } else if (userInput.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                String description \u003d userInput.substring(6, userInput.indexOf(\u0027/\u0027) - 1);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                String at \u003d userInput.substring(10 + description.length()).trim();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    Parser.handleInput(\"at\", at);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    addTaskToTaskList(new Event(description, new DateTime(at)));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                } catch (DukeException ex) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    userInput \u003d input.nextLine();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                } catch (ParseException ex) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! The Date/Time field is invalid\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    userInput \u003d input.nextLine();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                Storage.save();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            } catch (IOException ex) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "choonx99"
        },
        "content": "                showSavingError();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "choonx99"
        },
        "content": "            userInput \u003d input.nextLine();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public static void showLoadingError() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        System.out.println(\"Unable to load file from file path\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public static void showSavingError() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        System.out.println(\"Unable to save onto file\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "choonx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choonx99": 117
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choonx99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choonx99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choonx99"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        assertEquals(\"[✘] sleep\", new Task(\"sleep\").toString());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        assertEquals(\"[✘] run at the gym\", new Task(\"run at the gym\").toString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public void markAsDone_null_success() throws Exception {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        Task task \u003d new Task(\"sleep\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        assertEquals(\"[✓] sleep\", task.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public void getStatusIcon_null_success() throws Exception {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        Task task \u003d new Task(\"sleep\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        assertEquals(\"✘\", task.getStatusIcon());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        assertEquals(\"✓\", task.getStatusIcon());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choonx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choonx99": 26
    }
  },
  {
    "path": "src/test/java/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choonx99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choonx99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choonx99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choonx99"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        assertEquals(\"[T][✘] sleep\", new ToDo(\"sleep\").toString());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choonx99"
        },
        "content": "        assertEquals(\"[T][✘] run at the gym\", new ToDo(\"run at the gym\").toString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choonx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choonx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choonx99": 11
    }
  }
]
