[
  {
    "path": "abc.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "abc 123"
      }
    ],
    "authorContributionMap": {
      "1nefootstep": 1
    }
  },
  {
    "path": "savedList.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "todo 123"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "false"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "todo abdda"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "true"
      }
    ],
    "authorContributionMap": {
      "1nefootstep": 4
    }
  },
  {
    "path": "src/main/data/savedList.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "deadline hw /by 29/08/2019 0000"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "false"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "event splashdown /at 28/08/2019 1800"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "false"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "deadline hw2 /by 29/08/2019 1200"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "false"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "todo abc"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "false"
      }
    ],
    "authorContributionMap": {
      "1nefootstep": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": " * A general duke exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1nefootstep": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyDeadlineDscDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": " * An exception no description is given to a deadline."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "public class EmptyDeadlineDscDukeException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    public EmptyDeadlineDscDukeException(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1nefootstep": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyEventDscDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": " * An exception when an event does not have a description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "public class EmptyEventDscDukeException extends DukeException{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    public EmptyEventDscDukeException(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1nefootstep": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyTodoDscDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": " * An exception when a to-do task does not have a description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "public class EmptyTodoDscDukeException extends DukeException{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    public EmptyTodoDscDukeException(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1nefootstep": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidTaskIndexDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": " * An exception when an invalid task index is given to Duke when checking/deleting tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "public class InvalidTaskIndexDukeException extends DukeException{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    public InvalidTaskIndexDukeException(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1nefootstep": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/NoDateDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": " * An exception when no date is provided in a deadline/event task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "public class NoDateDukeException extends DukeException{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    public NoDateDukeException(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1nefootstep": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/UnknownCmdDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": " * An exception when an unknown command is given to Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "public class UnknownCmdDukeException  extends DukeException{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    public UnknownCmdDukeException(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1nefootstep": 10
    }
  },
  {
    "path": "src/main/java/duke/main/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "import duke.exception.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": " * Duke is an application that keeps track of your"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": " * to-do tasks, deadlines and events."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        ui \u003d new UI();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            tasks \u003d storage.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        } catch (DukeException | FileNotFoundException | ParseException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * This is where the Duke application starts to run."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        ui.welcomeMsg();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        boolean dukeIsOn \u003d true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        while (dukeIsOn) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            input \u003d ui.getInput();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                dukeIsOn \u003d tasks.parseInput(input, true);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            } catch (UnknownCmdDukeException e){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                ui.errorUCDE();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            } catch (EmptyTodoDscDukeException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                ui.errorETDDE();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            } catch (EmptyDeadlineDscDukeException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                ui.errorEDDDE();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            } catch (EmptyEventDscDukeException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                ui.errorEEDDE();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            } catch (NoDateDukeException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                ui.errorNDDE();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            } catch (InvalidTaskIndexDukeException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                ui.errorITIDE();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                ui.errorNFE();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                ui.errorDE(e.getMessage());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                ui.errorPE();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        storage.saveDuke(tasks.saveInfo());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        new Duke(\"../data/savedList.txt\").run();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        //"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "//        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "//        String input;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "//        boolean dukeIsOn \u003d true;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "//        String filePath \u003d \"../data/savedList.txt\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "//        TaskList myTasks \u003d new TaskList(filePath);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "//        myTasks.loadDuke(filePath);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "//        while(dukeIsOn){"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "//            input \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "//            try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "//                dukeIsOn \u003d myTasks.parseInput(input, true);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "//            } catch (UnknownCmdDukeException e){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "//                System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "//            } catch (EmptyTodoDscDukeException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "//                System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "//            } catch (EmptyDeadlineDscDukeException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "//                System.out.println(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "//            } catch (EmptyEventDscDukeException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "//                System.out.println(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "//            } catch (NoDateDukeException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "//                System.out.println(\"☹ OOPS!!! You need to provide a date, with / to indicate it:-(\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "//            } catch (InvalidTaskIndexDukeException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "//                System.out.println(\"☹ OOPS!!! You need to provide a valid task number :-(\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "//            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "//                System.out.println(\"☹ OOPS!!! You need to provide a valid number :-(\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "//            } catch (DukeException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "//                System.out.println(\"☹ OOPS!!! Something went wrong\" + e.getMessage());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "//            } catch (ParseException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "//                System.out.println(\"Something went wrong! \" + e.getMessage());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "//            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1nefootstep": 98,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": " * Storage is where files are accessed and written for Duke."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        file \u003d new File(filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * Saves a string to the save-file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * @param stringToSave  string that will be saved to a file"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    public void saveDuke(String stringToSave){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            FileWriter fw \u003d new FileWriter(this.file);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            fw.write(stringToSave);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            System.out.println(\"Something went wrong! \" + e.getMessage());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * Loads the save-file to Duke."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * @return TaskList that was saved in the save-file."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * @throws DukeException  If there was an error in the save-file and TaskList does not generate properly."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * @throws FileNotFoundException If there is an error in the file path, or the file does not exists."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * @throws ParseException If there is an error in parsing."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    public TaskList load() throws DukeException, FileNotFoundException, ParseException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        TaskList tl \u003d new TaskList();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        Scanner fileSc \u003d new Scanner(this.file);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        while (fileSc.hasNext()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            line \u003d fileSc.nextLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            tl.parseInput(line, false);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            if (Boolean.parseBoolean(fileSc.nextLine())) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                tl.checkTask(tl.getTaskList().size() - 1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        System.out.println(\"Loaded saved task list!\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        return tl;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1nefootstep": 59
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": " * Deadline is a task that has to be completed by a certain date."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    private Date deadlineBy;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    public Deadline(String taskDetails, Date deadlineBy) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        super(taskDetails);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        this.deadlineBy \u003d deadlineBy;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * Returns a string of a task that can contain"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * its description, time and completion status."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * @return string that contains information about a task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    public String saveInfo() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        return \"deadline\" + \" \" + taskDetails + \" /by \" + TaskList.inputDateFormat.format(deadlineBy) + System.getProperty(\"line.separator\")"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                + completed;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        if (this.completed) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            sb.append(\"[D][✓] \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            sb.append(\"[D][✗] \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        sb.append(taskDetails);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        sb.append (\" (\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        sb.append(TaskList.outputDateFormat.format(deadlineBy));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        sb.append(\")\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1nefootstep": 41
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": " * Event is a task that happens at certain date."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    private Date eventAt;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    Event(String taskDetails, Date eventAt) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        super(taskDetails);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        this.eventAt \u003d eventAt;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * Returns a string of a task that can contain"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * its description, time and completion status."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * @return string that contains information about a task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    String saveInfo() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        return \"event\" + \" \" + taskDetails + \" /at \" + TaskList.inputDateFormat.format(eventAt) + System.getProperty(\"line.separator\")"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                + completed;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        if (this.completed) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            sb.append(\"[E][✓] \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            sb.append(\"[E][✗] \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        sb.append(taskDetails);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        sb.append (\" (\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        sb.append(TaskList.outputDateFormat.format(eventAt));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        sb.append(\")\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1nefootstep": 41
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": " * Task is an abstract class from which other tasks are built upon."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": " * Tasks represents the tasks that a person has when using Duke."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    String taskDetails;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    boolean completed;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    Task(String taskDetails) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        this.taskDetails \u003d taskDetails;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        this.completed \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * Marks a task as completed."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    void taskDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        this.completed \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * Returns a string of a task that can contain"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * its description, time and completion status."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * @return string that contains information about a task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    abstract String saveInfo();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * Returns the completion status of a task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * @return task completion status."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    public boolean isCompleted() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        return this.completed;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * A getter for task details."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * @return the task details."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    public String getTaskDetails() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        return this.taskDetails;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        if (completed) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            return \"[✓] \" + this.taskDetails;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            return \"[✗] \" + this.taskDetails;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1nefootstep": 55
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "import duke.exception.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": " * TaskList contains an array-list of tasks. It keeps tracks"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": " * of all the tasks and is the gateway for all modifications"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": " * between Duke and the tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    static SimpleDateFormat inputDateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    static SimpleDateFormat outputDateFormat \u003d new SimpleDateFormat(\"dd MMMMM yyyy hh\u0027:\u0027mma\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * Returns lateral location of the specified position."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * If the position is unset, NaN is returned."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * @param task  a string of the task information"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * @param type the type of task this is."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * @param printText an option to print out statements or not."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * @throws ParseException  If there is an error in the string and cause an error in parsing."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * @throws DukeException If there are mistakes in the input in task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    private void addTask(String task, TaskType type, boolean printText) throws ParseException, DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        Task addedTask;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        String date;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                addedTask \u003d new TodoTask(task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                taskList.add(addedTask);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                if (printText) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                    System.out.println(addedTask);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                if (task.indexOf(\u0027/\u0027) \u003d\u003d -1) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                    throw new NoDateDukeException(\"/ wasn\u0027t found\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                if (task.indexOf(\u0027/\u0027) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                    throw new EmptyDeadlineDscDukeException(\"Description for deadline is empty.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                date \u003d task.substring(task.indexOf(\u0027/\u0027) + 1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                if (date.equals(\"\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                    throw new NoDateDukeException(\"No date provided\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                date \u003d date.substring(date.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                addedTask \u003d new Deadline("
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                    task.substring(0, task.indexOf(\u0027/\u0027) - 1),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                    TaskList.inputDateFormat.parse(date)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                );"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                taskList.add(addedTask);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                if (printText) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                    System.out.println(addedTask);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                if (task.indexOf(\u0027/\u0027) \u003d\u003d -1) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                    throw new NoDateDukeException(\"No date found\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                if (task.indexOf(\u0027/\u0027) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                    throw new EmptyEventDscDukeException(\"Description for event is empty.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                date \u003d task.substring(task.indexOf(\u0027/\u0027) + 1);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                if (date.equals(\"\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                    throw new NoDateDukeException(\"No date provided\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                date \u003d date.substring(date.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                addedTask \u003d new Event("
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                        task.substring(0, task.indexOf(\u0027/\u0027) - 1),"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                        TaskList.inputDateFormat.parse(date)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                );"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                taskList.add(addedTask);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                if (printText) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                    System.out.println(addedTask);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        if (printText) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            printTotalTasks();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * Prints out all the tasks currently in this task list."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    private void listAllTasks() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        int total \u003d taskList.size();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        for (int i \u003d 0; i \u003c total; i++) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            System.out.println((i + 1) + \". \" + taskList.get(i));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * Marks a task as completed by changing its"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * completed field to true."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * @param taskIndex the index of the task."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    public void checkTask(int taskIndex) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        Task t \u003d taskList.get(taskIndex);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        t.taskDone();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        System.out.println(t);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * A getter for the arraylist of tasks."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * @return an arraylist of all the tasks in the task list."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * Deletes a task in task list."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     *"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * @throws InvalidTaskIndexDukeException If task index given is out of range."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    private void deleteTask(int taskIndex) throws InvalidTaskIndexDukeException {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        if (taskIndex \u003c 0 || taskIndex \u003e taskList.size() - 1) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            throw new InvalidTaskIndexDukeException(taskIndex + \" exceeds the range of taskList.\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        System.out.println(taskList.get(taskIndex));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        taskList.remove(taskIndex);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        printTotalTasks();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * Returns a string of information of all tasks in the task list."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     *"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * @return a string containing information of ALL tasks in the task list."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    public String saveInfo() {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        StringBuilder info \u003d new StringBuilder();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        boolean isFirstIteration \u003d true;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        for (Task t : taskList) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            if (isFirstIteration) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                info.append(t.saveInfo());"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                isFirstIteration \u003d false;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                info.append(System.getProperty(\"line.separator\")).append(t.saveInfo());"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        return info.toString();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * Prints the total number of task in the task list."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    private void printTotalTasks() {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * Parses a user input and performs action based on the input."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     *"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * @param input the input from user to duke."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * @param printText a boolean to control the printing of what happened."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * @return a boolean to tell whether Duke should continue waiting for more commands."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * @throws DukeException If there are mistakes in the input."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * @throws ParseException If there are errors in the string of input that prevents parsing."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    public boolean parseInput(String input, boolean printText) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        String[] splitInput \u003d input.split(\" \");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        boolean dukeIsOn \u003d true;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        switch (splitInput[0]) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                this.listAllTasks();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                dukeIsOn \u003d false;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "//                saveDuke(this.filePath, this.saveInfo());"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                this.checkTask(Integer.parseInt(splitInput[1]) - 1);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                if (input.length() \u003c\u003d 4) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                    throw (new EmptyTodoDscDukeException(\"todo task has empty description.\"));"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                this.addTask(input.substring(5), TaskType.TODO, printText);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                if (input.length() \u003c\u003d 8) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                    throw (new EmptyDeadlineDscDukeException(\"deadline task has empty description.\"));"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                this.addTask(input.substring(9), TaskType.DEADLINE, printText);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                if (input.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                    throw (new EmptyEventDscDukeException(\"event task has empty description.\"));"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                this.addTask(input.substring(6), TaskType.EVENT, printText);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                if (input.length() \u003c\u003d 6) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                    throw new InvalidTaskIndexDukeException(\"No task number was given.\");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                this.deleteTask(Integer.parseInt(splitInput[1]) - 1);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                if (input.length() \u003c\u003d 4) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                    throw new DukeException(\"no keyword to search for.\");"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                String searchKey \u003d input.substring(5);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                ArrayList\u003cTask\u003e matchedList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                for (Task t : taskList) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                    String dsc \u003d t.getTaskDetails();"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                    if (dsc.indexOf(searchKey) !\u003d -1) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                        matchedList.add(t);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                int lenOfMatchedList \u003d matchedList.size();"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                System.out.println(\"Here are the matching tasks in your list\");"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                for (int i \u003d 1; i \u003c\u003d lenOfMatchedList; i++) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                    System.out.println(i + \". \" + matchedList.get(i-1));"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                throw(new UnknownCmdDukeException(splitInput[0] + \" is not a known command.\"));"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        return dukeIsOn;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1nefootstep": 244
    }
  },
  {
    "path": "src/main/java/duke/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": " * TaskType is an enumeration for the different kinds of task types."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    EVENT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1nefootstep": 10
    }
  },
  {
    "path": "src/main/java/duke/task/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": " * To-do task is a task that is supposed to be completed in the future."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "public class TodoTask  extends Task{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    public TodoTask(String taskDetails) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        super(taskDetails);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * Returns a string of a task that can contain"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * its description, time and completion status."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * @return string that contains information about a task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    String saveInfo() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        return \"todo\" + \" \" + taskDetails + System.getProperty(\"line.separator\")"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                + completed;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        if (this.completed) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            return \"[T][✓] \" + taskDetails;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            return \"[T][✗] \" + taskDetails;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1nefootstep": 30
    }
  },
  {
    "path": "src/main/java/duke/ui/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": " * UI is the user interface of Duke."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    public UI() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * Prints a message saying there is an error loading file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        System.out.println(\"Error in loading file!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * Prints a message to welcome the user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    public void welcomeMsg() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * Gets input from user."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * @return input from user."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    public String getInput() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        return sc.nextLine().trim();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * Prints a message of an error."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    public void errorUCDE() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * Prints a message of an error."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    public void errorETDDE() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        System.out.println(\"☹ OOPS!!! I\u0027m sorry, the description cannot be empty :-(\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * Prints a message of an error."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    public void errorEDDDE() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        System.out.println(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * Prints a message of an error."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    public void errorEEDDE() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        System.out.println(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * Prints a message of an error."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    public void errorNDDE() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        System.out.println(\"☹ OOPS!!! You need to provide a date, with / to indicate it:-(\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * Prints a message of an error."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    public void errorITIDE() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        System.out.println(\"☹ OOPS!!! You need to provide a valid task number :-(\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * Prints a message of an error."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    public void errorNFE() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        System.out.println(\"☹ OOPS!!! You need to provide a valid number :-(\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * Prints a message of an error."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    public void errorDE(String errorMsg) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        System.out.println(\"☹ OOPS!!! Something went wrong! \" + errorMsg);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     * Prints a message of an error."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    public void errorPE() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        System.out.println(\"☹ OOPS!!! There was a parsing error!\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "}"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "1nefootstep": 107
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "class DukeTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    void deadlineSaveInfoTest() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        Calendar c \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        c.set(2019,8,29,18,00);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        Deadline testDeadline \u003d new Deadline(\"homework\", c.getTime());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        assertEquals(\"deadline homework /by 29/09/2019 1800\" + System.getProperty(\"line.separator\") + \"false\", testDeadline.saveInfo());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    void todoTaskDoneTest() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        TaskList tl \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            tl.parseInput(\"todo task1\", true);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            tl.parseInput(\"done 1\", true);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        } catch (DukeException | ParseException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            System.out.println(\"error in parsing input.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        assertTrue(tl.getTaskList().get(0).isCompleted());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    void eventTaskDoneTest() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        TaskList tl \u003d new TaskList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            tl.parseInput(\"todo task1\", true);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            tl.parseInput(\"event abc123 /at 29/09/2019 1900\", true);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            tl.parseInput(\"done 2\", true);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        } catch (DukeException | ParseException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "            System.out.println(\"error in parsing input.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        assertFalse(tl.getTaskList().get(0).isCompleted());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "        assertTrue(tl.getTaskList().get(1).isCompleted());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "1nefootstep"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1nefootstep": 47
    }
  }
]
